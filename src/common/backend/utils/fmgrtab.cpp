/*-------------------------------------------------------------------------
 *
 * fmgrtab.c
 *    The function manager's table of internal functions.
 *
 * Portions Copyright (c) 1996-2012, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *
 *	******************************
 *	*** DO NOT EDIT THIS FILE! ***
 *	******************************
 *
 *	It has been GENERATED by Gen_fmgrtab.pl
 *	from ../../../../src/common/backend/catalog/builtin_funcs.ini
 *
 *-------------------------------------------------------------------------
 */

#include "postgres.h"
#include "knl/knl_variable.h"

#include "utils/fmgrtab.h"

extern Datum RI_FKey_cascade_del (PG_FUNCTION_ARGS);
extern Datum RI_FKey_cascade_upd (PG_FUNCTION_ARGS);
extern Datum RI_FKey_check_ins (PG_FUNCTION_ARGS);
extern Datum RI_FKey_check_upd (PG_FUNCTION_ARGS);
extern Datum RI_FKey_noaction_del (PG_FUNCTION_ARGS);
extern Datum RI_FKey_noaction_upd (PG_FUNCTION_ARGS);
extern Datum RI_FKey_restrict_del (PG_FUNCTION_ARGS);
extern Datum RI_FKey_restrict_upd (PG_FUNCTION_ARGS);
extern Datum RI_FKey_setdefault_del (PG_FUNCTION_ARGS);
extern Datum RI_FKey_setdefault_upd (PG_FUNCTION_ARGS);
extern Datum RI_FKey_setnull_del (PG_FUNCTION_ARGS);
extern Datum RI_FKey_setnull_upd (PG_FUNCTION_ARGS);
extern Datum inet_abbrev (PG_FUNCTION_ARGS);
extern Datum cidr_abbrev (PG_FUNCTION_ARGS);
extern Datum float4abs (PG_FUNCTION_ARGS);
extern Datum float8abs (PG_FUNCTION_ARGS);
extern Datum int8abs (PG_FUNCTION_ARGS);
extern Datum int4abs (PG_FUNCTION_ARGS);
extern Datum int2abs (PG_FUNCTION_ARGS);
extern Datum numeric_abs (PG_FUNCTION_ARGS);
extern Datum timestamptz_abstime (PG_FUNCTION_ARGS);
extern Datum timestamp_abstime (PG_FUNCTION_ARGS);
extern Datum abstimeeq (PG_FUNCTION_ARGS);
extern Datum abstimege (PG_FUNCTION_ARGS);
extern Datum abstimegt (PG_FUNCTION_ARGS);
extern Datum abstimein (PG_FUNCTION_ARGS);
extern Datum abstimele (PG_FUNCTION_ARGS);
extern Datum abstimelt (PG_FUNCTION_ARGS);
extern Datum abstimene (PG_FUNCTION_ARGS);
extern Datum abstimeout (PG_FUNCTION_ARGS);
extern Datum abstimerecv (PG_FUNCTION_ARGS);
extern Datum abstimesend (PG_FUNCTION_ARGS);
extern Datum aclcontains (PG_FUNCTION_ARGS);
extern Datum acldefault_sql (PG_FUNCTION_ARGS);
extern Datum aclexplode (PG_FUNCTION_ARGS);
extern Datum aclinsert (PG_FUNCTION_ARGS);
extern Datum aclitem_eq (PG_FUNCTION_ARGS);
extern Datum aclitemin (PG_FUNCTION_ARGS);
extern Datum aclitemout (PG_FUNCTION_ARGS);
extern Datum aclremove (PG_FUNCTION_ARGS);
extern Datum dacos (PG_FUNCTION_ARGS);
extern Datum add_months (PG_FUNCTION_ARGS);
extern Datum xid_age (PG_FUNCTION_ARGS);
extern Datum timestamptz_age (PG_FUNCTION_ARGS);
extern Datum timestamp_age (PG_FUNCTION_ARGS);
extern Datum any_in (PG_FUNCTION_ARGS);
extern Datum any_out (PG_FUNCTION_ARGS);
extern Datum anyarray_in (PG_FUNCTION_ARGS);
extern Datum anyarray_out (PG_FUNCTION_ARGS);
extern Datum anyarray_recv (PG_FUNCTION_ARGS);
extern Datum anyarray_send (PG_FUNCTION_ARGS);
extern Datum anyelement_in (PG_FUNCTION_ARGS);
extern Datum anyelement_out (PG_FUNCTION_ARGS);
extern Datum anyenum_in (PG_FUNCTION_ARGS);
extern Datum anyenum_out (PG_FUNCTION_ARGS);
extern Datum anynonarray_in (PG_FUNCTION_ARGS);
extern Datum anynonarray_out (PG_FUNCTION_ARGS);
extern Datum anyrange_in (PG_FUNCTION_ARGS);
extern Datum anyrange_out (PG_FUNCTION_ARGS);
extern Datum box_area (PG_FUNCTION_ARGS);
extern Datum path_area (PG_FUNCTION_ARGS);
extern Datum circle_area (PG_FUNCTION_ARGS);
extern Datum areajoinsel (PG_FUNCTION_ARGS);
extern Datum areasel (PG_FUNCTION_ARGS);
extern Datum aggregate_dummy (PG_FUNCTION_ARGS);
extern Datum array_agg_finalfn (PG_FUNCTION_ARGS);
extern Datum array_agg_transfn (PG_FUNCTION_ARGS);
extern Datum array_push (PG_FUNCTION_ARGS);
extern Datum array_cat (PG_FUNCTION_ARGS);
extern Datum array_dims (PG_FUNCTION_ARGS);
extern Datum array_eq (PG_FUNCTION_ARGS);
extern Datum array_extend (PG_FUNCTION_ARGS);
extern Datum array_fill (PG_FUNCTION_ARGS);
extern Datum array_fill_with_lower_bounds (PG_FUNCTION_ARGS);
extern Datum array_ge (PG_FUNCTION_ARGS);
extern Datum array_gt (PG_FUNCTION_ARGS);
extern Datum array_in (PG_FUNCTION_ARGS);
extern Datum array_larger (PG_FUNCTION_ARGS);
extern Datum array_le (PG_FUNCTION_ARGS);
extern Datum array_length (PG_FUNCTION_ARGS);
extern Datum array_lower (PG_FUNCTION_ARGS);
extern Datum array_lt (PG_FUNCTION_ARGS);
extern Datum array_ndims (PG_FUNCTION_ARGS);
extern Datum array_ne (PG_FUNCTION_ARGS);
extern Datum array_out (PG_FUNCTION_ARGS);
extern Datum array_recv (PG_FUNCTION_ARGS);
extern Datum array_send (PG_FUNCTION_ARGS);
extern Datum array_smaller (PG_FUNCTION_ARGS);
extern Datum array_to_json (PG_FUNCTION_ARGS);
extern Datum array_to_json_pretty (PG_FUNCTION_ARGS);
extern Datum array_to_text_null (PG_FUNCTION_ARGS);
extern Datum array_to_text (PG_FUNCTION_ARGS);
extern Datum array_typanalyze (PG_FUNCTION_ARGS);
extern Datum array_upper (PG_FUNCTION_ARGS);
extern Datum arraycontained (PG_FUNCTION_ARGS);
extern Datum arraycontains (PG_FUNCTION_ARGS);
extern Datum arraycontjoinsel (PG_FUNCTION_ARGS);
extern Datum arraycontsel (PG_FUNCTION_ARGS);
extern Datum arrayoverlap (PG_FUNCTION_ARGS);
extern Datum ascii (PG_FUNCTION_ARGS);
extern Datum dasin (PG_FUNCTION_ARGS);
extern Datum datan (PG_FUNCTION_ARGS);
extern Datum datan2 (PG_FUNCTION_ARGS);
extern Datum bigint_tid (PG_FUNCTION_ARGS);
extern Datum bitfromint4 (PG_FUNCTION_ARGS);
extern Datum bit (PG_FUNCTION_ARGS);
extern Datum bitfromint8 (PG_FUNCTION_ARGS);
extern Datum bit_in (PG_FUNCTION_ARGS);
extern Datum bit_out (PG_FUNCTION_ARGS);
extern Datum bit_recv (PG_FUNCTION_ARGS);
extern Datum bit_send (PG_FUNCTION_ARGS);
extern Datum bit_and (PG_FUNCTION_ARGS);
extern Datum bitcat (PG_FUNCTION_ARGS);
extern Datum bitcmp (PG_FUNCTION_ARGS);
extern Datum biteq (PG_FUNCTION_ARGS);
extern Datum bitge (PG_FUNCTION_ARGS);
extern Datum bitgt (PG_FUNCTION_ARGS);
extern Datum bitle (PG_FUNCTION_ARGS);
extern Datum bitlt (PG_FUNCTION_ARGS);
extern Datum bitne (PG_FUNCTION_ARGS);
extern Datum bitnot (PG_FUNCTION_ARGS);
extern Datum bit_or (PG_FUNCTION_ARGS);
extern Datum bitshiftleft (PG_FUNCTION_ARGS);
extern Datum bitshiftright (PG_FUNCTION_ARGS);
extern Datum bittypmodin (PG_FUNCTION_ARGS);
extern Datum bittypmodout (PG_FUNCTION_ARGS);
extern Datum bitxor (PG_FUNCTION_ARGS);
extern Datum int4_bool (PG_FUNCTION_ARGS);
extern Datum bool_int1 (PG_FUNCTION_ARGS);
extern Datum bool_int2 (PG_FUNCTION_ARGS);
extern Datum bool_int8 (PG_FUNCTION_ARGS);
extern Datum booland_statefunc (PG_FUNCTION_ARGS);
extern Datum booleq (PG_FUNCTION_ARGS);
extern Datum boolge (PG_FUNCTION_ARGS);
extern Datum boolgt (PG_FUNCTION_ARGS);
extern Datum boolin (PG_FUNCTION_ARGS);
extern Datum boolle (PG_FUNCTION_ARGS);
extern Datum boollt (PG_FUNCTION_ARGS);
extern Datum boolne (PG_FUNCTION_ARGS);
extern Datum boolor_statefunc (PG_FUNCTION_ARGS);
extern Datum boolout (PG_FUNCTION_ARGS);
extern Datum boolrecv (PG_FUNCTION_ARGS);
extern Datum boolsend (PG_FUNCTION_ARGS);
extern Datum points_box (PG_FUNCTION_ARGS);
extern Datum poly_box (PG_FUNCTION_ARGS);
extern Datum circle_box (PG_FUNCTION_ARGS);
extern Datum box_above (PG_FUNCTION_ARGS);
extern Datum box_above_eq (PG_FUNCTION_ARGS);
extern Datum box_add (PG_FUNCTION_ARGS);
extern Datum box_below (PG_FUNCTION_ARGS);
extern Datum box_below_eq (PG_FUNCTION_ARGS);
extern Datum box_center (PG_FUNCTION_ARGS);
extern Datum box_contain (PG_FUNCTION_ARGS);
extern Datum box_contain_pt (PG_FUNCTION_ARGS);
extern Datum box_contained (PG_FUNCTION_ARGS);
extern Datum box_distance (PG_FUNCTION_ARGS);
extern Datum box_div (PG_FUNCTION_ARGS);
extern Datum box_eq (PG_FUNCTION_ARGS);
extern Datum box_ge (PG_FUNCTION_ARGS);
extern Datum box_gt (PG_FUNCTION_ARGS);
extern Datum box_in (PG_FUNCTION_ARGS);
extern Datum box_intersect (PG_FUNCTION_ARGS);
extern Datum box_le (PG_FUNCTION_ARGS);
extern Datum box_left (PG_FUNCTION_ARGS);
extern Datum box_lt (PG_FUNCTION_ARGS);
extern Datum box_mul (PG_FUNCTION_ARGS);
extern Datum box_out (PG_FUNCTION_ARGS);
extern Datum box_overabove (PG_FUNCTION_ARGS);
extern Datum box_overbelow (PG_FUNCTION_ARGS);
extern Datum box_overlap (PG_FUNCTION_ARGS);
extern Datum box_overleft (PG_FUNCTION_ARGS);
extern Datum box_overright (PG_FUNCTION_ARGS);
extern Datum box_recv (PG_FUNCTION_ARGS);
extern Datum box_right (PG_FUNCTION_ARGS);
extern Datum box_same (PG_FUNCTION_ARGS);
extern Datum box_send (PG_FUNCTION_ARGS);
extern Datum box_sub (PG_FUNCTION_ARGS);
extern Datum name_bpchar (PG_FUNCTION_ARGS);
extern Datum bpchar (PG_FUNCTION_ARGS);
extern Datum char_bpchar (PG_FUNCTION_ARGS);
extern Datum bpchar_date (PG_FUNCTION_ARGS);
extern Datum bpchar_float4 (PG_FUNCTION_ARGS);
extern Datum bpchar_float8 (PG_FUNCTION_ARGS);
extern Datum bpchar_int4 (PG_FUNCTION_ARGS);
extern Datum bpchar_int8 (PG_FUNCTION_ARGS);
extern Datum bpchar_larger (PG_FUNCTION_ARGS);
extern Datum bpchar_numeric (PG_FUNCTION_ARGS);
extern Datum bpchar_pattern_ge (PG_FUNCTION_ARGS);
extern Datum bpchar_pattern_gt (PG_FUNCTION_ARGS);
extern Datum bpchar_pattern_le (PG_FUNCTION_ARGS);
extern Datum bpchar_pattern_lt (PG_FUNCTION_ARGS);
extern Datum bpchar_smaller (PG_FUNCTION_ARGS);
extern Datum bpchar_sortsupport (PG_FUNCTION_ARGS);
extern Datum bpchar_timestamp (PG_FUNCTION_ARGS);
extern Datum bpcharcmp (PG_FUNCTION_ARGS);
extern Datum bpchareq (PG_FUNCTION_ARGS);
extern Datum bpcharge (PG_FUNCTION_ARGS);
extern Datum bpchargt (PG_FUNCTION_ARGS);
extern Datum texticlike (PG_FUNCTION_ARGS);
extern Datum texticnlike (PG_FUNCTION_ARGS);
extern Datum texticregexeq (PG_FUNCTION_ARGS);
extern Datum texticregexne (PG_FUNCTION_ARGS);
extern Datum bpcharin (PG_FUNCTION_ARGS);
extern Datum bpcharle (PG_FUNCTION_ARGS);
extern Datum textlike (PG_FUNCTION_ARGS);
extern Datum bpcharlt (PG_FUNCTION_ARGS);
extern Datum bpcharne (PG_FUNCTION_ARGS);
extern Datum textnlike (PG_FUNCTION_ARGS);
extern Datum bpcharout (PG_FUNCTION_ARGS);
extern Datum bpcharrecv (PG_FUNCTION_ARGS);
extern Datum textregexeq (PG_FUNCTION_ARGS);
extern Datum textregexne (PG_FUNCTION_ARGS);
extern Datum bpcharsend (PG_FUNCTION_ARGS);
extern Datum bpchartypmodin (PG_FUNCTION_ARGS);
extern Datum bpchartypmodout (PG_FUNCTION_ARGS);
extern Datum network_broadcast (PG_FUNCTION_ARGS);
extern Datum btabstimecmp (PG_FUNCTION_ARGS);
extern Datum btarraycmp (PG_FUNCTION_ARGS);
extern Datum btbeginscan (PG_FUNCTION_ARGS);
extern Datum btboolcmp (PG_FUNCTION_ARGS);
extern Datum btbpchar_pattern_cmp (PG_FUNCTION_ARGS);
extern Datum btbuild (PG_FUNCTION_ARGS);
extern Datum btbuildempty (PG_FUNCTION_ARGS);
extern Datum btbulkdelete (PG_FUNCTION_ARGS);
extern Datum btcanreturn (PG_FUNCTION_ARGS);
extern Datum btcharcmp (PG_FUNCTION_ARGS);
extern Datum btcostestimate (PG_FUNCTION_ARGS);
extern Datum btendscan (PG_FUNCTION_ARGS);
extern Datum btfloat48cmp (PG_FUNCTION_ARGS);
extern Datum btfloat4cmp (PG_FUNCTION_ARGS);
extern Datum btfloat4sortsupport (PG_FUNCTION_ARGS);
extern Datum btfloat84cmp (PG_FUNCTION_ARGS);
extern Datum btfloat8cmp (PG_FUNCTION_ARGS);
extern Datum btfloat8sortsupport (PG_FUNCTION_ARGS);
extern Datum btgetbitmap (PG_FUNCTION_ARGS);
extern Datum btgettuple (PG_FUNCTION_ARGS);
extern Datum btinsert (PG_FUNCTION_ARGS);
extern Datum btint24cmp (PG_FUNCTION_ARGS);
extern Datum btint28cmp (PG_FUNCTION_ARGS);
extern Datum btint2cmp (PG_FUNCTION_ARGS);
extern Datum btint2sortsupport (PG_FUNCTION_ARGS);
extern Datum btint42cmp (PG_FUNCTION_ARGS);
extern Datum btint48cmp (PG_FUNCTION_ARGS);
extern Datum btint4cmp (PG_FUNCTION_ARGS);
extern Datum btint4sortsupport (PG_FUNCTION_ARGS);
extern Datum btint82cmp (PG_FUNCTION_ARGS);
extern Datum btint84cmp (PG_FUNCTION_ARGS);
extern Datum btint8cmp (PG_FUNCTION_ARGS);
extern Datum btint8sortsupport (PG_FUNCTION_ARGS);
extern Datum btmarkpos (PG_FUNCTION_ARGS);
extern Datum btmerge (PG_FUNCTION_ARGS);
extern Datum btnamecmp (PG_FUNCTION_ARGS);
extern Datum btnamesortsupport (PG_FUNCTION_ARGS);
extern Datum btoidcmp (PG_FUNCTION_ARGS);
extern Datum btoidsortsupport (PG_FUNCTION_ARGS);
extern Datum btoidvectorcmp (PG_FUNCTION_ARGS);
extern Datum btoptions (PG_FUNCTION_ARGS);
extern Datum btrecordcmp (PG_FUNCTION_ARGS);
extern Datum btreltimecmp (PG_FUNCTION_ARGS);
extern Datum btrescan (PG_FUNCTION_ARGS);
extern Datum btrestrpos (PG_FUNCTION_ARGS);
extern Datum btrim (PG_FUNCTION_ARGS);
extern Datum btrim1 (PG_FUNCTION_ARGS);
extern Datum byteatrim (PG_FUNCTION_ARGS);
extern Datum bttext_pattern_cmp (PG_FUNCTION_ARGS);
extern Datum bttextcmp (PG_FUNCTION_ARGS);
extern Datum bttextsortsupport (PG_FUNCTION_ARGS);
extern Datum bttidcmp (PG_FUNCTION_ARGS);
extern Datum bttintervalcmp (PG_FUNCTION_ARGS);
extern Datum btvacuumcleanup (PG_FUNCTION_ARGS);
extern Datum bucketabstime (PG_FUNCTION_ARGS);
extern Datum bucketbool (PG_FUNCTION_ARGS);
extern Datum bucketbpchar (PG_FUNCTION_ARGS);
extern Datum bucketbytea (PG_FUNCTION_ARGS);
extern Datum bucketcash (PG_FUNCTION_ARGS);
extern Datum bucketchar (PG_FUNCTION_ARGS);
extern Datum bucketdate (PG_FUNCTION_ARGS);
extern Datum bucketfloat4 (PG_FUNCTION_ARGS);
extern Datum bucketfloat8 (PG_FUNCTION_ARGS);
extern Datum bucketint1 (PG_FUNCTION_ARGS);
extern Datum bucketint2 (PG_FUNCTION_ARGS);
extern Datum bucketint2vector (PG_FUNCTION_ARGS);
extern Datum bucketint4 (PG_FUNCTION_ARGS);
extern Datum bucketint8 (PG_FUNCTION_ARGS);
extern Datum bucketinterval (PG_FUNCTION_ARGS);
extern Datum bucketname (PG_FUNCTION_ARGS);
extern Datum bucketnumeric (PG_FUNCTION_ARGS);
extern Datum bucketnvarchar2 (PG_FUNCTION_ARGS);
extern Datum bucketoid (PG_FUNCTION_ARGS);
extern Datum bucketoidvector (PG_FUNCTION_ARGS);
extern Datum bucketraw (PG_FUNCTION_ARGS);
extern Datum bucketreltime (PG_FUNCTION_ARGS);
extern Datum bucketsmalldatetime (PG_FUNCTION_ARGS);
extern Datum buckettext (PG_FUNCTION_ARGS);
extern Datum buckettime (PG_FUNCTION_ARGS);
extern Datum buckettimestamp (PG_FUNCTION_ARGS);
extern Datum buckettimestamptz (PG_FUNCTION_ARGS);
extern Datum buckettimetz (PG_FUNCTION_ARGS);
extern Datum bucketuuid (PG_FUNCTION_ARGS);
extern Datum bucketvarchar (PG_FUNCTION_ARGS);
extern Datum bytea_sortsupport (PG_FUNCTION_ARGS);
extern Datum bytea_string_agg_finalfn (PG_FUNCTION_ARGS);
extern Datum bytea_string_agg_transfn (PG_FUNCTION_ARGS);
extern Datum byteacat (PG_FUNCTION_ARGS);
extern Datum byteacmp (PG_FUNCTION_ARGS);
extern Datum byteaeq (PG_FUNCTION_ARGS);
extern Datum byteage (PG_FUNCTION_ARGS);
extern Datum byteagt (PG_FUNCTION_ARGS);
extern Datum byteain (PG_FUNCTION_ARGS);
extern Datum byteale (PG_FUNCTION_ARGS);
extern Datum bytealike (PG_FUNCTION_ARGS);
extern Datum bytealt (PG_FUNCTION_ARGS);
extern Datum byteane (PG_FUNCTION_ARGS);
extern Datum byteanlike (PG_FUNCTION_ARGS);
extern Datum byteaout (PG_FUNCTION_ARGS);
extern Datum bytearecv (PG_FUNCTION_ARGS);
extern Datum byteasend (PG_FUNCTION_ARGS);
extern Datum byteawithoutordercolin (PG_FUNCTION_ARGS);
extern Datum byteawithoutordercolout (PG_FUNCTION_ARGS);
extern Datum byteawithoutordercolrecv (PG_FUNCTION_ARGS);
extern Datum byteawithoutordercolsend (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolcmp (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolcmpbyteal (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolcmpbytear (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcoleq (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcoleqbyteal (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcoleqbytear (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolin (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolne (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolnebyteal (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolnebytear (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolout (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolrecv (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcolsend (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcoltypmodin (PG_FUNCTION_ARGS);
extern Datum byteawithoutorderwithequalcoltypmodout (PG_FUNCTION_ARGS);
extern Datum capture_view_to_json (PG_FUNCTION_ARGS);
extern Datum cash_cmp (PG_FUNCTION_ARGS);
extern Datum cash_div_cash (PG_FUNCTION_ARGS);
extern Datum cash_div_flt4 (PG_FUNCTION_ARGS);
extern Datum cash_div_flt8 (PG_FUNCTION_ARGS);
extern Datum cash_div_int1 (PG_FUNCTION_ARGS);
extern Datum cash_div_int2 (PG_FUNCTION_ARGS);
extern Datum cash_div_int4 (PG_FUNCTION_ARGS);
extern Datum cash_div_int8 (PG_FUNCTION_ARGS);
extern Datum cash_eq (PG_FUNCTION_ARGS);
extern Datum cash_ge (PG_FUNCTION_ARGS);
extern Datum cash_gt (PG_FUNCTION_ARGS);
extern Datum cash_in (PG_FUNCTION_ARGS);
extern Datum cash_le (PG_FUNCTION_ARGS);
extern Datum cash_lt (PG_FUNCTION_ARGS);
extern Datum cash_mi (PG_FUNCTION_ARGS);
extern Datum cash_mul_flt4 (PG_FUNCTION_ARGS);
extern Datum cash_mul_flt8 (PG_FUNCTION_ARGS);
extern Datum cash_mul_int1 (PG_FUNCTION_ARGS);
extern Datum cash_mul_int2 (PG_FUNCTION_ARGS);
extern Datum cash_mul_int4 (PG_FUNCTION_ARGS);
extern Datum cash_mul_int8 (PG_FUNCTION_ARGS);
extern Datum cash_ne (PG_FUNCTION_ARGS);
extern Datum cash_out (PG_FUNCTION_ARGS);
extern Datum cash_pl (PG_FUNCTION_ARGS);
extern Datum cash_recv (PG_FUNCTION_ARGS);
extern Datum cash_send (PG_FUNCTION_ARGS);
extern Datum cash_words (PG_FUNCTION_ARGS);
extern Datum cashlarger (PG_FUNCTION_ARGS);
extern Datum cashsmaller (PG_FUNCTION_ARGS);
extern Datum dcbrt (PG_FUNCTION_ARGS);
extern Datum cbtreebuild (PG_FUNCTION_ARGS);
extern Datum cbtreecanreturn (PG_FUNCTION_ARGS);
extern Datum cbtreecostestimate (PG_FUNCTION_ARGS);
extern Datum cbtreegetbitmap (PG_FUNCTION_ARGS);
extern Datum cbtreegettuple (PG_FUNCTION_ARGS);
extern Datum cbtreeoptions (PG_FUNCTION_ARGS);
extern Datum numeric_ceil (PG_FUNCTION_ARGS);
extern Datum dceil (PG_FUNCTION_ARGS);
extern Datum circle_center (PG_FUNCTION_ARGS);
extern Datum cginbuild (PG_FUNCTION_ARGS);
extern Datum cgingetbitmap (PG_FUNCTION_ARGS);
extern Datum i4tochar (PG_FUNCTION_ARGS);
extern Datum text_char (PG_FUNCTION_ARGS);
extern Datum bpcharlen (PG_FUNCTION_ARGS);
extern Datum textlen (PG_FUNCTION_ARGS);
extern Datum chareq (PG_FUNCTION_ARGS);
extern Datum charge (PG_FUNCTION_ARGS);
extern Datum chargt (PG_FUNCTION_ARGS);
extern Datum charin (PG_FUNCTION_ARGS);
extern Datum charle (PG_FUNCTION_ARGS);
extern Datum charlt (PG_FUNCTION_ARGS);
extern Datum charne (PG_FUNCTION_ARGS);
extern Datum charout (PG_FUNCTION_ARGS);
extern Datum charrecv (PG_FUNCTION_ARGS);
extern Datum charsend (PG_FUNCTION_ARGS);
extern Datum check_engine_status (PG_FUNCTION_ARGS);
extern Datum checksumtext_agg_transfn (PG_FUNCTION_ARGS);
extern Datum chr (PG_FUNCTION_ARGS);
extern Datum cideq (PG_FUNCTION_ARGS);
extern Datum cidin (PG_FUNCTION_ARGS);
extern Datum cidout (PG_FUNCTION_ARGS);
extern Datum inet_to_cidr (PG_FUNCTION_ARGS);
extern Datum cidr_in (PG_FUNCTION_ARGS);
extern Datum cidr_out (PG_FUNCTION_ARGS);
extern Datum cidr_recv (PG_FUNCTION_ARGS);
extern Datum cidr_send (PG_FUNCTION_ARGS);
extern Datum cidrecv (PG_FUNCTION_ARGS);
extern Datum cidsend (PG_FUNCTION_ARGS);
extern Datum cr_circle (PG_FUNCTION_ARGS);
extern Datum poly_circle (PG_FUNCTION_ARGS);
extern Datum box_circle (PG_FUNCTION_ARGS);
extern Datum circle_above (PG_FUNCTION_ARGS);
extern Datum circle_add_pt (PG_FUNCTION_ARGS);
extern Datum circle_below (PG_FUNCTION_ARGS);
extern Datum circle_contain (PG_FUNCTION_ARGS);
extern Datum circle_contain_pt (PG_FUNCTION_ARGS);
extern Datum circle_contained (PG_FUNCTION_ARGS);
extern Datum circle_distance (PG_FUNCTION_ARGS);
extern Datum circle_div_pt (PG_FUNCTION_ARGS);
extern Datum circle_eq (PG_FUNCTION_ARGS);
extern Datum circle_ge (PG_FUNCTION_ARGS);
extern Datum circle_gt (PG_FUNCTION_ARGS);
extern Datum circle_in (PG_FUNCTION_ARGS);
extern Datum circle_le (PG_FUNCTION_ARGS);
extern Datum circle_left (PG_FUNCTION_ARGS);
extern Datum circle_lt (PG_FUNCTION_ARGS);
extern Datum circle_mul_pt (PG_FUNCTION_ARGS);
extern Datum circle_ne (PG_FUNCTION_ARGS);
extern Datum circle_out (PG_FUNCTION_ARGS);
extern Datum circle_overabove (PG_FUNCTION_ARGS);
extern Datum circle_overbelow (PG_FUNCTION_ARGS);
extern Datum circle_overlap (PG_FUNCTION_ARGS);
extern Datum circle_overleft (PG_FUNCTION_ARGS);
extern Datum circle_overright (PG_FUNCTION_ARGS);
extern Datum circle_recv (PG_FUNCTION_ARGS);
extern Datum circle_right (PG_FUNCTION_ARGS);
extern Datum circle_same (PG_FUNCTION_ARGS);
extern Datum circle_send (PG_FUNCTION_ARGS);
extern Datum circle_sub_pt (PG_FUNCTION_ARGS);
extern Datum clock_timestamp (PG_FUNCTION_ARGS);
extern Datum close_lb (PG_FUNCTION_ARGS);
extern Datum close_ls (PG_FUNCTION_ARGS);
extern Datum close_lseg (PG_FUNCTION_ARGS);
extern Datum close_pb (PG_FUNCTION_ARGS);
extern Datum close_pl (PG_FUNCTION_ARGS);
extern Datum close_ps (PG_FUNCTION_ARGS);
extern Datum close_sb (PG_FUNCTION_ARGS);
extern Datum close_sl (PG_FUNCTION_ARGS);
extern Datum comm_check_connection_status (PG_FUNCTION_ARGS);
extern Datum comm_client_info (PG_FUNCTION_ARGS);
extern Datum complex_array_in (PG_FUNCTION_ARGS);
extern Datum text_concat (PG_FUNCTION_ARGS);
extern Datum text_concat_ws (PG_FUNCTION_ARGS);
extern Datum contjoinsel (PG_FUNCTION_ARGS);
extern Datum contsel (PG_FUNCTION_ARGS);
extern Datum pg_convert (PG_FUNCTION_ARGS);
extern Datum pg_convert_from (PG_FUNCTION_ARGS);
extern Datum pg_convert_to (PG_FUNCTION_ARGS);
extern Datum pg_convert_to_nocase (PG_FUNCTION_ARGS);
extern Datum dcos (PG_FUNCTION_ARGS);
extern Datum dcot (PG_FUNCTION_ARGS);
extern Datum create_wdr_snapshot (PG_FUNCTION_ARGS);
extern Datum cstore_tid_out (PG_FUNCTION_ARGS);
extern Datum cstring_in (PG_FUNCTION_ARGS);
extern Datum cstring_out (PG_FUNCTION_ARGS);
extern Datum cstring_recv (PG_FUNCTION_ARGS);
extern Datum cstring_send (PG_FUNCTION_ARGS);
extern Datum window_cume_dist (PG_FUNCTION_ARGS);
extern Datum cupointer_bigint (PG_FUNCTION_ARGS);
extern Datum current_database (PG_FUNCTION_ARGS);
extern Datum current_query (PG_FUNCTION_ARGS);
extern Datum current_schema (PG_FUNCTION_ARGS);
extern Datum current_schemas (PG_FUNCTION_ARGS);
extern Datum show_config_by_name (PG_FUNCTION_ARGS);
extern Datum current_user (PG_FUNCTION_ARGS);
extern Datum currtid_byreloid (PG_FUNCTION_ARGS);
extern Datum currtid_byrelname (PG_FUNCTION_ARGS);
extern Datum currval_oid (PG_FUNCTION_ARGS);
extern Datum cursor_to_xml (PG_FUNCTION_ARGS);
extern Datum cursor_to_xmlschema (PG_FUNCTION_ARGS);
extern Datum database_to_xml (PG_FUNCTION_ARGS);
extern Datum database_to_xml_and_xmlschema (PG_FUNCTION_ARGS);
extern Datum database_to_xmlschema (PG_FUNCTION_ARGS);
extern Datum datalength (PG_FUNCTION_ARGS);
extern Datum timestamptz_date (PG_FUNCTION_ARGS);
extern Datum abstime_date (PG_FUNCTION_ARGS);
extern Datum timestamp_date (PG_FUNCTION_ARGS);
extern Datum date_bpchar (PG_FUNCTION_ARGS);
extern Datum date_cmp (PG_FUNCTION_ARGS);
extern Datum date_cmp_timestamp (PG_FUNCTION_ARGS);
extern Datum date_cmp_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_eq (PG_FUNCTION_ARGS);
extern Datum date_eq_timestamp (PG_FUNCTION_ARGS);
extern Datum date_eq_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_ge (PG_FUNCTION_ARGS);
extern Datum date_ge_timestamp (PG_FUNCTION_ARGS);
extern Datum date_ge_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_gt (PG_FUNCTION_ARGS);
extern Datum date_gt_timestamp (PG_FUNCTION_ARGS);
extern Datum date_gt_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_in (PG_FUNCTION_ARGS);
extern Datum date_larger (PG_FUNCTION_ARGS);
extern Datum date_le (PG_FUNCTION_ARGS);
extern Datum date_le_timestamp (PG_FUNCTION_ARGS);
extern Datum date_le_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum date_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum date_lt (PG_FUNCTION_ARGS);
extern Datum date_lt_timestamp (PG_FUNCTION_ARGS);
extern Datum date_lt_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_mi (PG_FUNCTION_ARGS);
extern Datum date_mi_interval (PG_FUNCTION_ARGS);
extern Datum date_mii (PG_FUNCTION_ARGS);
extern Datum date_ne (PG_FUNCTION_ARGS);
extern Datum date_ne_timestamp (PG_FUNCTION_ARGS);
extern Datum date_ne_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_out (PG_FUNCTION_ARGS);
extern Datum timestamptz_part (PG_FUNCTION_ARGS);
extern Datum interval_part (PG_FUNCTION_ARGS);
extern Datum timetz_part (PG_FUNCTION_ARGS);
extern Datum time_part (PG_FUNCTION_ARGS);
extern Datum timestamp_part (PG_FUNCTION_ARGS);
extern Datum date_pl_interval (PG_FUNCTION_ARGS);
extern Datum date_pli (PG_FUNCTION_ARGS);
extern Datum date_recv (PG_FUNCTION_ARGS);
extern Datum date_send (PG_FUNCTION_ARGS);
extern Datum date_smaller (PG_FUNCTION_ARGS);
extern Datum date_sortsupport (PG_FUNCTION_ARGS);
extern Datum date_text (PG_FUNCTION_ARGS);
extern Datum timestamptz_trunc (PG_FUNCTION_ARGS);
extern Datum interval_trunc (PG_FUNCTION_ARGS);
extern Datum timestamp_trunc (PG_FUNCTION_ARGS);
extern Datum date_varchar (PG_FUNCTION_ARGS);
extern Datum range_constructor2 (PG_FUNCTION_ARGS);
extern Datum range_constructor3 (PG_FUNCTION_ARGS);
extern Datum daterange_canonical (PG_FUNCTION_ARGS);
extern Datum daterange_subdiff (PG_FUNCTION_ARGS);
extern Datum datetime_timestamp (PG_FUNCTION_ARGS);
extern Datum datetimetz_timestamptz (PG_FUNCTION_ARGS);
extern Datum binary_decode (PG_FUNCTION_ARGS);
extern Datum pseudo_current_user (PG_FUNCTION_ARGS);
extern Datum degrees (PG_FUNCTION_ARGS);
extern Datum window_delta (PG_FUNCTION_ARGS);
extern Datum window_dense_rank (PG_FUNCTION_ARGS);
extern Datum dexp (PG_FUNCTION_ARGS);
extern Datum box_diagonal (PG_FUNCTION_ARGS);
extern Datum circle_diameter (PG_FUNCTION_ARGS);
extern Datum disable_conn (PG_FUNCTION_ARGS);
extern Datum dispell_init (PG_FUNCTION_ARGS);
extern Datum dispell_lexize (PG_FUNCTION_ARGS);
extern Datum dist_cpoly (PG_FUNCTION_ARGS);
extern Datum dist_lb (PG_FUNCTION_ARGS);
extern Datum dist_pb (PG_FUNCTION_ARGS);
extern Datum dist_pc (PG_FUNCTION_ARGS);
extern Datum dist_pl (PG_FUNCTION_ARGS);
extern Datum dist_ppath (PG_FUNCTION_ARGS);
extern Datum dist_ps (PG_FUNCTION_ARGS);
extern Datum dist_sb (PG_FUNCTION_ARGS);
extern Datum dist_sl (PG_FUNCTION_ARGS);
extern Datum numeric_div_trunc (PG_FUNCTION_ARGS);
extern Datum dlog1 (PG_FUNCTION_ARGS);
extern Datum dlog10 (PG_FUNCTION_ARGS);
extern Datum domain_in (PG_FUNCTION_ARGS);
extern Datum domain_recv (PG_FUNCTION_ARGS);
extern Datum dpow (PG_FUNCTION_ARGS);
extern Datum dround (PG_FUNCTION_ARGS);
extern Datum dsimple_init (PG_FUNCTION_ARGS);
extern Datum dsimple_lexize (PG_FUNCTION_ARGS);
extern Datum dsqrt (PG_FUNCTION_ARGS);
extern Datum dsynonym_init (PG_FUNCTION_ARGS);
extern Datum dsynonym_lexize (PG_FUNCTION_ARGS);
extern Datum dtrunc (PG_FUNCTION_ARGS);
extern Datum elem_contained_by_range (PG_FUNCTION_ARGS);
extern Datum get_empty_blob (PG_FUNCTION_ARGS);
extern Datum binary_encode (PG_FUNCTION_ARGS);
extern Datum encode_plan_node (PG_FUNCTION_ARGS);
extern Datum enum_cmp (PG_FUNCTION_ARGS);
extern Datum enum_eq (PG_FUNCTION_ARGS);
extern Datum enum_first (PG_FUNCTION_ARGS);
extern Datum enum_ge (PG_FUNCTION_ARGS);
extern Datum enum_gt (PG_FUNCTION_ARGS);
extern Datum enum_in (PG_FUNCTION_ARGS);
extern Datum enum_larger (PG_FUNCTION_ARGS);
extern Datum enum_last (PG_FUNCTION_ARGS);
extern Datum enum_le (PG_FUNCTION_ARGS);
extern Datum enum_lt (PG_FUNCTION_ARGS);
extern Datum enum_ne (PG_FUNCTION_ARGS);
extern Datum enum_out (PG_FUNCTION_ARGS);
extern Datum enum_range_bounds (PG_FUNCTION_ARGS);
extern Datum enum_range_all (PG_FUNCTION_ARGS);
extern Datum enum_recv (PG_FUNCTION_ARGS);
extern Datum enum_send (PG_FUNCTION_ARGS);
extern Datum enum_smaller (PG_FUNCTION_ARGS);
extern Datum eqjoinsel (PG_FUNCTION_ARGS);
extern Datum eqsel (PG_FUNCTION_ARGS);
extern Datum exec_hadoop_sql (PG_FUNCTION_ARGS);
extern Datum exec_on_extension (PG_FUNCTION_ARGS);
extern Datum numeric_exp (PG_FUNCTION_ARGS);
extern Datum f4toi1 (PG_FUNCTION_ARGS);
extern Datum f8toi1 (PG_FUNCTION_ARGS);
extern Datum numeric_fac (PG_FUNCTION_ARGS);
extern Datum network_family (PG_FUNCTION_ARGS);
extern Datum fdw_handler_in (PG_FUNCTION_ARGS);
extern Datum fdw_handler_out (PG_FUNCTION_ARGS);
extern Datum fenced_udf_process (PG_FUNCTION_ARGS);
extern Datum window_first_value (PG_FUNCTION_ARGS);
extern Datum i2tof (PG_FUNCTION_ARGS);
extern Datum dtof (PG_FUNCTION_ARGS);
extern Datum i4tof (PG_FUNCTION_ARGS);
extern Datum i8tof (PG_FUNCTION_ARGS);
extern Datum numeric_float4 (PG_FUNCTION_ARGS);
extern Datum float48div (PG_FUNCTION_ARGS);
extern Datum float48eq (PG_FUNCTION_ARGS);
extern Datum float48ge (PG_FUNCTION_ARGS);
extern Datum float48gt (PG_FUNCTION_ARGS);
extern Datum float48le (PG_FUNCTION_ARGS);
extern Datum float48lt (PG_FUNCTION_ARGS);
extern Datum float48mi (PG_FUNCTION_ARGS);
extern Datum float48mul (PG_FUNCTION_ARGS);
extern Datum float48ne (PG_FUNCTION_ARGS);
extern Datum float48pl (PG_FUNCTION_ARGS);
extern Datum float4_accum (PG_FUNCTION_ARGS);
extern Datum float4_bpchar (PG_FUNCTION_ARGS);
extern Datum float4_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum float4_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum float4_text (PG_FUNCTION_ARGS);
extern Datum float4_varchar (PG_FUNCTION_ARGS);
extern Datum float4div (PG_FUNCTION_ARGS);
extern Datum float4eq (PG_FUNCTION_ARGS);
extern Datum float4ge (PG_FUNCTION_ARGS);
extern Datum float4gt (PG_FUNCTION_ARGS);
extern Datum float4in (PG_FUNCTION_ARGS);
extern Datum float4larger (PG_FUNCTION_ARGS);
extern Datum float4le (PG_FUNCTION_ARGS);
extern Datum float4lt (PG_FUNCTION_ARGS);
extern Datum float4mi (PG_FUNCTION_ARGS);
extern Datum float4mul (PG_FUNCTION_ARGS);
extern Datum float4ne (PG_FUNCTION_ARGS);
extern Datum float4out (PG_FUNCTION_ARGS);
extern Datum float4pl (PG_FUNCTION_ARGS);
extern Datum float4recv (PG_FUNCTION_ARGS);
extern Datum float4send (PG_FUNCTION_ARGS);
extern Datum float4smaller (PG_FUNCTION_ARGS);
extern Datum float4um (PG_FUNCTION_ARGS);
extern Datum float4up (PG_FUNCTION_ARGS);
extern Datum i2tod (PG_FUNCTION_ARGS);
extern Datum ftod (PG_FUNCTION_ARGS);
extern Datum i4tod (PG_FUNCTION_ARGS);
extern Datum i8tod (PG_FUNCTION_ARGS);
extern Datum numeric_float8 (PG_FUNCTION_ARGS);
extern Datum float84div (PG_FUNCTION_ARGS);
extern Datum float84eq (PG_FUNCTION_ARGS);
extern Datum float84ge (PG_FUNCTION_ARGS);
extern Datum float84gt (PG_FUNCTION_ARGS);
extern Datum float84le (PG_FUNCTION_ARGS);
extern Datum float84lt (PG_FUNCTION_ARGS);
extern Datum float84mi (PG_FUNCTION_ARGS);
extern Datum float84mul (PG_FUNCTION_ARGS);
extern Datum float84ne (PG_FUNCTION_ARGS);
extern Datum float84pl (PG_FUNCTION_ARGS);
extern Datum float8_accum (PG_FUNCTION_ARGS);
extern Datum float8_avg (PG_FUNCTION_ARGS);
extern Datum float8_bpchar (PG_FUNCTION_ARGS);
extern Datum float8_collect (PG_FUNCTION_ARGS);
extern Datum float8_corr (PG_FUNCTION_ARGS);
extern Datum float8_covar_pop (PG_FUNCTION_ARGS);
extern Datum float8_covar_samp (PG_FUNCTION_ARGS);
extern Datum float8_interval (PG_FUNCTION_ARGS);
extern Datum float8_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum float8_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum float8_regr_accum (PG_FUNCTION_ARGS);
extern Datum float8_regr_avgx (PG_FUNCTION_ARGS);
extern Datum float8_regr_avgy (PG_FUNCTION_ARGS);
extern Datum float8_regr_collect (PG_FUNCTION_ARGS);
extern Datum float8_regr_intercept (PG_FUNCTION_ARGS);
extern Datum float8_regr_r2 (PG_FUNCTION_ARGS);
extern Datum float8_regr_slope (PG_FUNCTION_ARGS);
extern Datum float8_regr_sxx (PG_FUNCTION_ARGS);
extern Datum float8_regr_sxy (PG_FUNCTION_ARGS);
extern Datum float8_regr_syy (PG_FUNCTION_ARGS);
extern Datum float8_stddev_pop (PG_FUNCTION_ARGS);
extern Datum float8_stddev_samp (PG_FUNCTION_ARGS);
extern Datum float8_text (PG_FUNCTION_ARGS);
extern Datum float8_var_pop (PG_FUNCTION_ARGS);
extern Datum float8_var_samp (PG_FUNCTION_ARGS);
extern Datum float8_varchar (PG_FUNCTION_ARGS);
extern Datum float8div (PG_FUNCTION_ARGS);
extern Datum float8eq (PG_FUNCTION_ARGS);
extern Datum float8ge (PG_FUNCTION_ARGS);
extern Datum float8gt (PG_FUNCTION_ARGS);
extern Datum float8in (PG_FUNCTION_ARGS);
extern Datum float8larger (PG_FUNCTION_ARGS);
extern Datum float8le (PG_FUNCTION_ARGS);
extern Datum float8lt (PG_FUNCTION_ARGS);
extern Datum float8mi (PG_FUNCTION_ARGS);
extern Datum float8mul (PG_FUNCTION_ARGS);
extern Datum float8ne (PG_FUNCTION_ARGS);
extern Datum float8out (PG_FUNCTION_ARGS);
extern Datum float8pl (PG_FUNCTION_ARGS);
extern Datum float8recv (PG_FUNCTION_ARGS);
extern Datum float8send (PG_FUNCTION_ARGS);
extern Datum float8smaller (PG_FUNCTION_ARGS);
extern Datum float8um (PG_FUNCTION_ARGS);
extern Datum float8up (PG_FUNCTION_ARGS);
extern Datum numeric_floor (PG_FUNCTION_ARGS);
extern Datum dfloor (PG_FUNCTION_ARGS);
extern Datum flt4_mul_cash (PG_FUNCTION_ARGS);
extern Datum flt8_mul_cash (PG_FUNCTION_ARGS);
extern Datum fmgr_c_validator (PG_FUNCTION_ARGS);
extern Datum fmgr_internal_validator (PG_FUNCTION_ARGS);
extern Datum fmgr_sql_validator (PG_FUNCTION_ARGS);
extern Datum text_format (PG_FUNCTION_ARGS);
extern Datum text_format_nv (PG_FUNCTION_ARGS);
extern Datum format_type (PG_FUNCTION_ARGS);
extern Datum generate_series_timestamp (PG_FUNCTION_ARGS);
extern Datum generate_series_timestamptz (PG_FUNCTION_ARGS);
extern Datum generate_series_step_int4 (PG_FUNCTION_ARGS);
extern Datum generate_series_int4 (PG_FUNCTION_ARGS);
extern Datum generate_series_step_int8 (PG_FUNCTION_ARGS);
extern Datum generate_series_int8 (PG_FUNCTION_ARGS);
extern Datum generate_series_step_numeric (PG_FUNCTION_ARGS);
extern Datum generate_series_numeric (PG_FUNCTION_ARGS);
extern Datum generate_subscripts (PG_FUNCTION_ARGS);
extern Datum generate_subscripts_nodir (PG_FUNCTION_ARGS);
extern Datum generate_wdr_report (PG_FUNCTION_ARGS);
extern Datum byteaGetBit (PG_FUNCTION_ARGS);
extern Datum bitgetbit (PG_FUNCTION_ARGS);
extern Datum byteaGetByte (PG_FUNCTION_ARGS);
extern Datum get_current_ts_config (PG_FUNCTION_ARGS);
extern Datum get_db_source_datasize (PG_FUNCTION_ARGS);
extern Datum get_gtm_lite_status (PG_FUNCTION_ARGS);
extern Datum get_hostname (PG_FUNCTION_ARGS);
extern Datum get_instr_rt_percentile (PG_FUNCTION_ARGS);
extern Datum get_instr_unique_sql (PG_FUNCTION_ARGS);
extern Datum get_instr_user_login (PG_FUNCTION_ARGS);
extern Datum get_instr_wait_event (PG_FUNCTION_ARGS);
extern Datum get_instr_workload_info (PG_FUNCTION_ARGS);
extern Datum get_local_active_session (PG_FUNCTION_ARGS);
extern Datum get_local_prepared_xact (PG_FUNCTION_ARGS);
extern Datum get_local_rel_iostat (PG_FUNCTION_ARGS);
extern Datum get_node_stat_reset_time (PG_FUNCTION_ARGS);
extern Datum pg_get_nodename (PG_FUNCTION_ARGS);
extern Datum get_prepared_pending_xid (PG_FUNCTION_ARGS);
extern Datum get_remote_prepared_xacts (PG_FUNCTION_ARGS);
extern Datum get_schema_oid (PG_FUNCTION_ARGS);
extern Datum get_wait_event_info (PG_FUNCTION_ARGS);
extern Datum getbucket (PG_FUNCTION_ARGS);
extern Datum getdatabaseencoding (PG_FUNCTION_ARGS);
extern Datum getDistributeKey (PG_FUNCTION_ARGS);
extern Datum gin_clean_pending_list (PG_FUNCTION_ARGS);
extern Datum gin_cmp_prefix (PG_FUNCTION_ARGS);
extern Datum gin_cmp_tslexeme (PG_FUNCTION_ARGS);
extern Datum gin_extract_tsquery_5args (PG_FUNCTION_ARGS);
extern Datum gin_extract_tsquery (PG_FUNCTION_ARGS);
extern Datum gin_extract_tsvector_2args (PG_FUNCTION_ARGS);
extern Datum gin_extract_tsvector (PG_FUNCTION_ARGS);
extern Datum gin_tsquery_consistent_6args (PG_FUNCTION_ARGS);
extern Datum gin_tsquery_consistent (PG_FUNCTION_ARGS);
extern Datum gin_tsquery_triconsistent (PG_FUNCTION_ARGS);
extern Datum ginarrayconsistent (PG_FUNCTION_ARGS);
extern Datum ginarrayextract (PG_FUNCTION_ARGS);
extern Datum ginarrayextract_2args (PG_FUNCTION_ARGS);
extern Datum ginarraytriconsistent (PG_FUNCTION_ARGS);
extern Datum ginbeginscan (PG_FUNCTION_ARGS);
extern Datum ginbuild (PG_FUNCTION_ARGS);
extern Datum ginbuildempty (PG_FUNCTION_ARGS);
extern Datum ginbulkdelete (PG_FUNCTION_ARGS);
extern Datum gincostestimate (PG_FUNCTION_ARGS);
extern Datum ginendscan (PG_FUNCTION_ARGS);
extern Datum gingetbitmap (PG_FUNCTION_ARGS);
extern Datum gininsert (PG_FUNCTION_ARGS);
extern Datum ginmarkpos (PG_FUNCTION_ARGS);
extern Datum ginmerge (PG_FUNCTION_ARGS);
extern Datum ginoptions (PG_FUNCTION_ARGS);
extern Datum ginqueryarrayextract (PG_FUNCTION_ARGS);
extern Datum ginrescan (PG_FUNCTION_ARGS);
extern Datum ginrestrpos (PG_FUNCTION_ARGS);
extern Datum ginvacuumcleanup (PG_FUNCTION_ARGS);
extern Datum gist_box_compress (PG_FUNCTION_ARGS);
extern Datum gist_box_consistent (PG_FUNCTION_ARGS);
extern Datum gist_box_decompress (PG_FUNCTION_ARGS);
extern Datum gist_box_penalty (PG_FUNCTION_ARGS);
extern Datum gist_box_picksplit (PG_FUNCTION_ARGS);
extern Datum gist_box_same (PG_FUNCTION_ARGS);
extern Datum gist_box_union (PG_FUNCTION_ARGS);
extern Datum gist_circle_compress (PG_FUNCTION_ARGS);
extern Datum gist_circle_consistent (PG_FUNCTION_ARGS);
extern Datum gist_point_compress (PG_FUNCTION_ARGS);
extern Datum gist_point_consistent (PG_FUNCTION_ARGS);
extern Datum gist_point_distance (PG_FUNCTION_ARGS);
extern Datum gist_poly_compress (PG_FUNCTION_ARGS);
extern Datum gist_poly_consistent (PG_FUNCTION_ARGS);
extern Datum gistbeginscan (PG_FUNCTION_ARGS);
extern Datum gistbuild (PG_FUNCTION_ARGS);
extern Datum gistbuildempty (PG_FUNCTION_ARGS);
extern Datum gistbulkdelete (PG_FUNCTION_ARGS);
extern Datum gistcostestimate (PG_FUNCTION_ARGS);
extern Datum gistendscan (PG_FUNCTION_ARGS);
extern Datum gistgetbitmap (PG_FUNCTION_ARGS);
extern Datum gistgettuple (PG_FUNCTION_ARGS);
extern Datum gistinsert (PG_FUNCTION_ARGS);
extern Datum gistmarkpos (PG_FUNCTION_ARGS);
extern Datum gistmerge (PG_FUNCTION_ARGS);
extern Datum gistoptions (PG_FUNCTION_ARGS);
extern Datum gistrescan (PG_FUNCTION_ARGS);
extern Datum gistrestrpos (PG_FUNCTION_ARGS);
extern Datum gistvacuumcleanup (PG_FUNCTION_ARGS);
extern Datum global_clean_prepared_xacts (PG_FUNCTION_ARGS);
extern Datum global_comm_get_client_info (PG_FUNCTION_ARGS);
extern Datum global_comm_get_recv_stream (PG_FUNCTION_ARGS);
extern Datum global_comm_get_send_stream (PG_FUNCTION_ARGS);
extern Datum global_comm_get_status (PG_FUNCTION_ARGS);
extern Datum global_stat_clean_hotkeys (PG_FUNCTION_ARGS);
extern Datum global_stat_get_hotkeys_info (PG_FUNCTION_ARGS);
extern Datum gs_all_control_group_info (PG_FUNCTION_ARGS);
extern Datum gs_all_nodegroup_control_group_info (PG_FUNCTION_ARGS);
extern Datum gs_cgroup_map_ng_conf (PG_FUNCTION_ARGS);
extern Datum gs_control_group_info (PG_FUNCTION_ARGS);
extern Datum gs_decrypt_aes128 (PG_FUNCTION_ARGS);
extern Datum gs_encrypt_aes128 (PG_FUNCTION_ARGS);
extern Datum gs_extend_library (PG_FUNCTION_ARGS);
extern Datum gs_fault_inject (PG_FUNCTION_ARGS);
extern Datum gs_get_global_barrier_status (PG_FUNCTION_ARGS);
extern Datum gs_get_local_barrier_status (PG_FUNCTION_ARGS);
extern Datum gs_get_next_xid_csn (PG_FUNCTION_ARGS);
extern Datum gs_get_nodegroup_tablecount (PG_FUNCTION_ARGS);
extern Datum gs_index_advise (PG_FUNCTION_ARGS);
extern Datum gs_password_deadline (PG_FUNCTION_ARGS);
extern Datum gs_password_notifytime (PG_FUNCTION_ARGS);
extern Datum gs_respool_exception_info (PG_FUNCTION_ARGS);
extern Datum gs_roach_disable_delay_ddl_recycle (PG_FUNCTION_ARGS);
extern Datum gs_roach_enable_delay_ddl_recycle (PG_FUNCTION_ARGS);
extern Datum gs_roach_stop_backup (PG_FUNCTION_ARGS);
extern Datum gs_roach_switch_xlog (PG_FUNCTION_ARGS);
extern Datum gs_set_obs_delete_location (PG_FUNCTION_ARGS);
extern Datum gs_stat_activity_timeout (PG_FUNCTION_ARGS);
extern Datum gs_stat_clean_hotkeys (PG_FUNCTION_ARGS);
extern Datum gs_stat_get_hotkeys_info (PG_FUNCTION_ARGS);
extern Datum gs_stat_get_wlm_plan_operator_info (PG_FUNCTION_ARGS);
extern Datum pg_switch_relfilenode_name (PG_FUNCTION_ARGS);
extern Datum gs_total_nodegroup_memory_detail (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_resource_pool_info (PG_FUNCTION_ARGS);
extern Datum pg_wlm_get_session_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_user_info (PG_FUNCTION_ARGS);
extern Datum pg_wlm_get_user_session_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_workload_records (PG_FUNCTION_ARGS);
extern Datum gs_wlm_node_clean (PG_FUNCTION_ARGS);
extern Datum gs_wlm_node_recover (PG_FUNCTION_ARGS);
extern Datum gs_wlm_readjust_user_space (PG_FUNCTION_ARGS);
extern Datum gs_wlm_readjust_user_space_through_username (PG_FUNCTION_ARGS);
extern Datum gs_wlm_readjust_user_space_with_reset_flag (PG_FUNCTION_ARGS);
extern Datum gs_wlm_rebuild_user_resource_pool (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_session_respool (PG_FUNCTION_ARGS);
extern Datum gs_wlm_switch_cgroup (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_user_resource_info (PG_FUNCTION_ARGS);
extern Datum gtsquery_compress (PG_FUNCTION_ARGS);
extern Datum gtsquery_consistent (PG_FUNCTION_ARGS);
extern Datum gtsquery_decompress (PG_FUNCTION_ARGS);
extern Datum gtsquery_penalty (PG_FUNCTION_ARGS);
extern Datum gtsquery_picksplit (PG_FUNCTION_ARGS);
extern Datum gtsquery_same (PG_FUNCTION_ARGS);
extern Datum gtsquery_union (PG_FUNCTION_ARGS);
extern Datum gtsvector_compress (PG_FUNCTION_ARGS);
extern Datum gtsvector_consistent (PG_FUNCTION_ARGS);
extern Datum gtsvector_decompress (PG_FUNCTION_ARGS);
extern Datum gtsvector_penalty (PG_FUNCTION_ARGS);
extern Datum gtsvector_picksplit (PG_FUNCTION_ARGS);
extern Datum gtsvector_same (PG_FUNCTION_ARGS);
extern Datum gtsvector_union (PG_FUNCTION_ARGS);
extern Datum gtsvectorin (PG_FUNCTION_ARGS);
extern Datum gtsvectorout (PG_FUNCTION_ARGS);
extern Datum has_any_column_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_any_column_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_any_column_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_any_column_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_any_column_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_any_column_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_cek_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_cek_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_cek_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_cek_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_cek_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_cek_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_cmk_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_cmk_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_cmk_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_cmk_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_cmk_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_cmk_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_name_name_name (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_name_name_attnum (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_name_id_name (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_name_id_attnum (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_id_name_name (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_id_name_attnum (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_id_id_name (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_id_id_attnum (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_name_attnum (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_column_privilege_id_attnum (PG_FUNCTION_ARGS);
extern Datum has_database_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_database_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_database_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_database_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_database_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_database_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_directory_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_directory_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_directory_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_directory_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_directory_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_directory_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_foreign_data_wrapper_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_foreign_data_wrapper_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_foreign_data_wrapper_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_foreign_data_wrapper_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_foreign_data_wrapper_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_foreign_data_wrapper_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_function_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_function_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_function_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_function_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_function_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_function_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_language_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_language_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_language_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_language_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_language_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_language_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_nodegroup_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_nodegroup_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_nodegroup_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_nodegroup_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_nodegroup_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_nodegroup_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_schema_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_schema_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_schema_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_schema_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_schema_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_schema_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_sequence_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_sequence_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_sequence_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_sequence_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_sequence_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_sequence_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_server_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_server_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_server_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_server_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_server_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_server_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_table_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_table_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_table_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_table_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_table_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_table_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_tablespace_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_tablespace_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_tablespace_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_tablespace_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_tablespace_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_tablespace_privilege_id (PG_FUNCTION_ARGS);
extern Datum has_type_privilege_name_name (PG_FUNCTION_ARGS);
extern Datum has_type_privilege_name_id (PG_FUNCTION_ARGS);
extern Datum has_type_privilege_id_name (PG_FUNCTION_ARGS);
extern Datum has_type_privilege_id_id (PG_FUNCTION_ARGS);
extern Datum has_type_privilege_name (PG_FUNCTION_ARGS);
extern Datum has_type_privilege_id (PG_FUNCTION_ARGS);
extern Datum hash_aclitem (PG_FUNCTION_ARGS);
extern Datum hash_array (PG_FUNCTION_ARGS);
extern Datum hash_numeric (PG_FUNCTION_ARGS);
extern Datum hash_range (PG_FUNCTION_ARGS);
extern Datum hashbeginscan (PG_FUNCTION_ARGS);
extern Datum hashbpchar (PG_FUNCTION_ARGS);
extern Datum hashbuild (PG_FUNCTION_ARGS);
extern Datum hashbuildempty (PG_FUNCTION_ARGS);
extern Datum hashbulkdelete (PG_FUNCTION_ARGS);
extern Datum hashchar (PG_FUNCTION_ARGS);
extern Datum hashcostestimate (PG_FUNCTION_ARGS);
extern Datum hashendscan (PG_FUNCTION_ARGS);
extern Datum hashenum (PG_FUNCTION_ARGS);
extern Datum hashfloat4 (PG_FUNCTION_ARGS);
extern Datum hashfloat8 (PG_FUNCTION_ARGS);
extern Datum hashgetbitmap (PG_FUNCTION_ARGS);
extern Datum hashgettuple (PG_FUNCTION_ARGS);
extern Datum hashinet (PG_FUNCTION_ARGS);
extern Datum hashinsert (PG_FUNCTION_ARGS);
extern Datum hashint1 (PG_FUNCTION_ARGS);
extern Datum hashint2 (PG_FUNCTION_ARGS);
extern Datum hashint2vector (PG_FUNCTION_ARGS);
extern Datum hashint4 (PG_FUNCTION_ARGS);
extern Datum hashint8 (PG_FUNCTION_ARGS);
extern Datum hashmacaddr (PG_FUNCTION_ARGS);
extern Datum hashmarkpos (PG_FUNCTION_ARGS);
extern Datum hashmerge (PG_FUNCTION_ARGS);
extern Datum hashname (PG_FUNCTION_ARGS);
extern Datum hashoid (PG_FUNCTION_ARGS);
extern Datum hashoidvector (PG_FUNCTION_ARGS);
extern Datum hashoptions (PG_FUNCTION_ARGS);
extern Datum hashrescan (PG_FUNCTION_ARGS);
extern Datum hashrestrpos (PG_FUNCTION_ARGS);
extern Datum hashtext (PG_FUNCTION_ARGS);
extern Datum hashvacuumcleanup (PG_FUNCTION_ARGS);
extern Datum hashvarlena (PG_FUNCTION_ARGS);
extern Datum box_height (PG_FUNCTION_ARGS);
extern Datum texttoraw (PG_FUNCTION_ARGS);
extern Datum hll (PG_FUNCTION_ARGS);
extern Datum hll_add (PG_FUNCTION_ARGS);
extern Datum hll_add_rev (PG_FUNCTION_ARGS);
extern Datum hll_add_trans0 (PG_FUNCTION_ARGS);
extern Datum hll_add_trans1 (PG_FUNCTION_ARGS);
extern Datum hll_add_trans2 (PG_FUNCTION_ARGS);
extern Datum hll_add_trans3 (PG_FUNCTION_ARGS);
extern Datum hll_add_trans4 (PG_FUNCTION_ARGS);
extern Datum hll_cardinality (PG_FUNCTION_ARGS);
extern Datum hll_empty0 (PG_FUNCTION_ARGS);
extern Datum hll_empty1 (PG_FUNCTION_ARGS);
extern Datum hll_empty2 (PG_FUNCTION_ARGS);
extern Datum hll_empty3 (PG_FUNCTION_ARGS);
extern Datum hll_empty4 (PG_FUNCTION_ARGS);
extern Datum hll_eq (PG_FUNCTION_ARGS);
extern Datum hll_expthresh (PG_FUNCTION_ARGS);
extern Datum hll_hash_any (PG_FUNCTION_ARGS);
extern Datum hll_hash_anys (PG_FUNCTION_ARGS);
extern Datum hll_hash_8byte (PG_FUNCTION_ARGS);
extern Datum hll_hash_8bytes (PG_FUNCTION_ARGS);
extern Datum hll_hash_1byte (PG_FUNCTION_ARGS);
extern Datum hll_hash_1bytes (PG_FUNCTION_ARGS);
extern Datum hll_hash_varlena (PG_FUNCTION_ARGS);
extern Datum hll_hash_varlenas (PG_FUNCTION_ARGS);
extern Datum hll_hash_4byte (PG_FUNCTION_ARGS);
extern Datum hll_hash_4bytes (PG_FUNCTION_ARGS);
extern Datum hll_hash_2byte (PG_FUNCTION_ARGS);
extern Datum hll_hash_2bytes (PG_FUNCTION_ARGS);
extern Datum hll_hashval (PG_FUNCTION_ARGS);
extern Datum hll_hashval_eq (PG_FUNCTION_ARGS);
extern Datum hll_hashval_in (PG_FUNCTION_ARGS);
extern Datum hll_hashval_int4 (PG_FUNCTION_ARGS);
extern Datum hll_hashval_ne (PG_FUNCTION_ARGS);
extern Datum hll_hashval_out (PG_FUNCTION_ARGS);
extern Datum hll_in (PG_FUNCTION_ARGS);
extern Datum hll_log2m (PG_FUNCTION_ARGS);
extern Datum hll_ne (PG_FUNCTION_ARGS);
extern Datum hll_out (PG_FUNCTION_ARGS);
extern Datum hll_pack (PG_FUNCTION_ARGS);
extern Datum hll_print (PG_FUNCTION_ARGS);
extern Datum hll_recv (PG_FUNCTION_ARGS);
extern Datum hll_regwidth (PG_FUNCTION_ARGS);
extern Datum hll_schema_version (PG_FUNCTION_ARGS);
extern Datum hll_send (PG_FUNCTION_ARGS);
extern Datum hll_sparseon (PG_FUNCTION_ARGS);
extern Datum hll_trans_in (PG_FUNCTION_ARGS);
extern Datum hll_trans_out (PG_FUNCTION_ARGS);
extern Datum hll_trans_recv (PG_FUNCTION_ARGS);
extern Datum hll_trans_send (PG_FUNCTION_ARGS);
extern Datum hll_type (PG_FUNCTION_ARGS);
extern Datum hll_typmod_in (PG_FUNCTION_ARGS);
extern Datum hll_typmod_out (PG_FUNCTION_ARGS);
extern Datum hll_union (PG_FUNCTION_ARGS);
extern Datum hll_union_collect (PG_FUNCTION_ARGS);
extern Datum hll_union_trans (PG_FUNCTION_ARGS);
extern Datum network_host (PG_FUNCTION_ARGS);
extern Datum network_hostmask (PG_FUNCTION_ARGS);
extern Datum hypopg_create_index (PG_FUNCTION_ARGS);
extern Datum hypopg_display_index (PG_FUNCTION_ARGS);
extern Datum hypopg_drop_index (PG_FUNCTION_ARGS);
extern Datum hypopg_estimate_size (PG_FUNCTION_ARGS);
extern Datum hypopg_reset_index (PG_FUNCTION_ARGS);
extern Datum i1tof4 (PG_FUNCTION_ARGS);
extern Datum i1tof8 (PG_FUNCTION_ARGS);
extern Datum i1toi2 (PG_FUNCTION_ARGS);
extern Datum i1toi4 (PG_FUNCTION_ARGS);
extern Datum i1toi8 (PG_FUNCTION_ARGS);
extern Datum i2toi1 (PG_FUNCTION_ARGS);
extern Datum i4toi1 (PG_FUNCTION_ARGS);
extern Datum i8toi1 (PG_FUNCTION_ARGS);
extern Datum iclikejoinsel (PG_FUNCTION_ARGS);
extern Datum iclikesel (PG_FUNCTION_ARGS);
extern Datum icnlikejoinsel (PG_FUNCTION_ARGS);
extern Datum icnlikesel (PG_FUNCTION_ARGS);
extern Datum icregexeqjoinsel (PG_FUNCTION_ARGS);
extern Datum icregexeqsel (PG_FUNCTION_ARGS);
extern Datum icregexnejoinsel (PG_FUNCTION_ARGS);
extern Datum icregexnesel (PG_FUNCTION_ARGS);
extern Datum inet_client_addr (PG_FUNCTION_ARGS);
extern Datum inet_client_port (PG_FUNCTION_ARGS);
extern Datum inet_in (PG_FUNCTION_ARGS);
extern Datum inet_out (PG_FUNCTION_ARGS);
extern Datum inet_recv (PG_FUNCTION_ARGS);
extern Datum inet_send (PG_FUNCTION_ARGS);
extern Datum inet_server_addr (PG_FUNCTION_ARGS);
extern Datum inet_server_port (PG_FUNCTION_ARGS);
extern Datum inetand (PG_FUNCTION_ARGS);
extern Datum inetmi (PG_FUNCTION_ARGS);
extern Datum inetmi_int8 (PG_FUNCTION_ARGS);
extern Datum inetnot (PG_FUNCTION_ARGS);
extern Datum inetor (PG_FUNCTION_ARGS);
extern Datum inetpl (PG_FUNCTION_ARGS);
extern Datum initcap (PG_FUNCTION_ARGS);
extern Datum textpos (PG_FUNCTION_ARGS);
extern Datum instr_3args (PG_FUNCTION_ARGS);
extern Datum instr_4args (PG_FUNCTION_ARGS);
extern Datum int1_avg_accum (PG_FUNCTION_ARGS);
extern Datum int1_bool (PG_FUNCTION_ARGS);
extern Datum int1_bpchar (PG_FUNCTION_ARGS);
extern Datum int1_mul_cash (PG_FUNCTION_ARGS);
extern Datum int1_numeric (PG_FUNCTION_ARGS);
extern Datum int1_nvarchar2 (PG_FUNCTION_ARGS);
extern Datum int1_text (PG_FUNCTION_ARGS);
extern Datum int1_varchar (PG_FUNCTION_ARGS);
extern Datum int1abs (PG_FUNCTION_ARGS);
extern Datum int1and (PG_FUNCTION_ARGS);
extern Datum int1cmp (PG_FUNCTION_ARGS);
extern Datum int1div (PG_FUNCTION_ARGS);
extern Datum int1eq (PG_FUNCTION_ARGS);
extern Datum int1ge (PG_FUNCTION_ARGS);
extern Datum int1gt (PG_FUNCTION_ARGS);
extern Datum int1in (PG_FUNCTION_ARGS);
extern Datum int1inc (PG_FUNCTION_ARGS);
extern Datum int1larger (PG_FUNCTION_ARGS);
extern Datum int1le (PG_FUNCTION_ARGS);
extern Datum int1lt (PG_FUNCTION_ARGS);
extern Datum int1mi (PG_FUNCTION_ARGS);
extern Datum int1mod (PG_FUNCTION_ARGS);
extern Datum int1mul (PG_FUNCTION_ARGS);
extern Datum int1ne (PG_FUNCTION_ARGS);
extern Datum int1not (PG_FUNCTION_ARGS);
extern Datum int1or (PG_FUNCTION_ARGS);
extern Datum int1out (PG_FUNCTION_ARGS);
extern Datum int1pl (PG_FUNCTION_ARGS);
extern Datum int1recv (PG_FUNCTION_ARGS);
extern Datum int1send (PG_FUNCTION_ARGS);
extern Datum int1shl (PG_FUNCTION_ARGS);
extern Datum int1shr (PG_FUNCTION_ARGS);
extern Datum int1smaller (PG_FUNCTION_ARGS);
extern Datum int1um (PG_FUNCTION_ARGS);
extern Datum int1up (PG_FUNCTION_ARGS);
extern Datum int1xor (PG_FUNCTION_ARGS);
extern Datum dtoi2 (PG_FUNCTION_ARGS);
extern Datum ftoi2 (PG_FUNCTION_ARGS);
extern Datum i4toi2 (PG_FUNCTION_ARGS);
extern Datum int82 (PG_FUNCTION_ARGS);
extern Datum numeric_int2 (PG_FUNCTION_ARGS);
extern Datum int24div (PG_FUNCTION_ARGS);
extern Datum int24eq (PG_FUNCTION_ARGS);
extern Datum int24ge (PG_FUNCTION_ARGS);
extern Datum int24gt (PG_FUNCTION_ARGS);
extern Datum int24le (PG_FUNCTION_ARGS);
extern Datum int24lt (PG_FUNCTION_ARGS);
extern Datum int24mi (PG_FUNCTION_ARGS);
extern Datum int24mul (PG_FUNCTION_ARGS);
extern Datum int24ne (PG_FUNCTION_ARGS);
extern Datum int24pl (PG_FUNCTION_ARGS);
extern Datum int28div (PG_FUNCTION_ARGS);
extern Datum int28eq (PG_FUNCTION_ARGS);
extern Datum int28ge (PG_FUNCTION_ARGS);
extern Datum int28gt (PG_FUNCTION_ARGS);
extern Datum int28le (PG_FUNCTION_ARGS);
extern Datum int28lt (PG_FUNCTION_ARGS);
extern Datum int28mi (PG_FUNCTION_ARGS);
extern Datum int28mul (PG_FUNCTION_ARGS);
extern Datum int28ne (PG_FUNCTION_ARGS);
extern Datum int28pl (PG_FUNCTION_ARGS);
extern Datum int2_accum (PG_FUNCTION_ARGS);
extern Datum int2_avg_accum (PG_FUNCTION_ARGS);
extern Datum int2_bool (PG_FUNCTION_ARGS);
extern Datum int2_bpchar (PG_FUNCTION_ARGS);
extern Datum int2_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum int2_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum int2_mul_cash (PG_FUNCTION_ARGS);
extern Datum int2_sum (PG_FUNCTION_ARGS);
extern Datum int2_text (PG_FUNCTION_ARGS);
extern Datum int2_varchar (PG_FUNCTION_ARGS);
extern Datum int2and (PG_FUNCTION_ARGS);
extern Datum int2div (PG_FUNCTION_ARGS);
extern Datum int2eq (PG_FUNCTION_ARGS);
extern Datum int2ge (PG_FUNCTION_ARGS);
extern Datum int2gt (PG_FUNCTION_ARGS);
extern Datum int2in (PG_FUNCTION_ARGS);
extern Datum int2larger (PG_FUNCTION_ARGS);
extern Datum int2le (PG_FUNCTION_ARGS);
extern Datum int2lt (PG_FUNCTION_ARGS);
extern Datum int2mi (PG_FUNCTION_ARGS);
extern Datum int2mod (PG_FUNCTION_ARGS);
extern Datum int2mul (PG_FUNCTION_ARGS);
extern Datum int2ne (PG_FUNCTION_ARGS);
extern Datum int2not (PG_FUNCTION_ARGS);
extern Datum int2or (PG_FUNCTION_ARGS);
extern Datum int2out (PG_FUNCTION_ARGS);
extern Datum int2pl (PG_FUNCTION_ARGS);
extern Datum int2recv (PG_FUNCTION_ARGS);
extern Datum int2send (PG_FUNCTION_ARGS);
extern Datum int2shl (PG_FUNCTION_ARGS);
extern Datum int2shr (PG_FUNCTION_ARGS);
extern Datum int2smaller (PG_FUNCTION_ARGS);
extern Datum int2um (PG_FUNCTION_ARGS);
extern Datum int2up (PG_FUNCTION_ARGS);
extern Datum int2vectoreq (PG_FUNCTION_ARGS);
extern Datum int2vectorin (PG_FUNCTION_ARGS);
extern Datum int2vectorout (PG_FUNCTION_ARGS);
extern Datum int2vectorrecv (PG_FUNCTION_ARGS);
extern Datum int2vectorsend (PG_FUNCTION_ARGS);
extern Datum int2xor (PG_FUNCTION_ARGS);
extern Datum chartoi4 (PG_FUNCTION_ARGS);
extern Datum i2toi4 (PG_FUNCTION_ARGS);
extern Datum dtoi4 (PG_FUNCTION_ARGS);
extern Datum ftoi4 (PG_FUNCTION_ARGS);
extern Datum int84 (PG_FUNCTION_ARGS);
extern Datum bittoint4 (PG_FUNCTION_ARGS);
extern Datum numeric_int4 (PG_FUNCTION_ARGS);
extern Datum bool_int4 (PG_FUNCTION_ARGS);
extern Datum int42div (PG_FUNCTION_ARGS);
extern Datum int42eq (PG_FUNCTION_ARGS);
extern Datum int42ge (PG_FUNCTION_ARGS);
extern Datum int42gt (PG_FUNCTION_ARGS);
extern Datum int42le (PG_FUNCTION_ARGS);
extern Datum int42lt (PG_FUNCTION_ARGS);
extern Datum int42mi (PG_FUNCTION_ARGS);
extern Datum int42mul (PG_FUNCTION_ARGS);
extern Datum int42ne (PG_FUNCTION_ARGS);
extern Datum int42pl (PG_FUNCTION_ARGS);
extern Datum int48div (PG_FUNCTION_ARGS);
extern Datum int48eq (PG_FUNCTION_ARGS);
extern Datum int48ge (PG_FUNCTION_ARGS);
extern Datum int48gt (PG_FUNCTION_ARGS);
extern Datum int48le (PG_FUNCTION_ARGS);
extern Datum int48lt (PG_FUNCTION_ARGS);
extern Datum int48mi (PG_FUNCTION_ARGS);
extern Datum int48mul (PG_FUNCTION_ARGS);
extern Datum int48ne (PG_FUNCTION_ARGS);
extern Datum int48pl (PG_FUNCTION_ARGS);
extern Datum int4_accum (PG_FUNCTION_ARGS);
extern Datum int4_avg_accum (PG_FUNCTION_ARGS);
extern Datum int4_bpchar (PG_FUNCTION_ARGS);
extern Datum int4_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum int4_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum int4_mul_cash (PG_FUNCTION_ARGS);
extern Datum int4_sum (PG_FUNCTION_ARGS);
extern Datum int4_text (PG_FUNCTION_ARGS);
extern Datum int4_varchar (PG_FUNCTION_ARGS);
extern Datum int4and (PG_FUNCTION_ARGS);
extern Datum int4div (PG_FUNCTION_ARGS);
extern Datum int4eq (PG_FUNCTION_ARGS);
extern Datum int4ge (PG_FUNCTION_ARGS);
extern Datum int4gt (PG_FUNCTION_ARGS);
extern Datum int4in (PG_FUNCTION_ARGS);
extern Datum int4inc (PG_FUNCTION_ARGS);
extern Datum int4larger (PG_FUNCTION_ARGS);
extern Datum int4le (PG_FUNCTION_ARGS);
extern Datum int4lt (PG_FUNCTION_ARGS);
extern Datum int4mi (PG_FUNCTION_ARGS);
extern Datum int4mod (PG_FUNCTION_ARGS);
extern Datum int4mul (PG_FUNCTION_ARGS);
extern Datum int4ne (PG_FUNCTION_ARGS);
extern Datum int4not (PG_FUNCTION_ARGS);
extern Datum int4or (PG_FUNCTION_ARGS);
extern Datum int4out (PG_FUNCTION_ARGS);
extern Datum int4pl (PG_FUNCTION_ARGS);
extern Datum int4range_canonical (PG_FUNCTION_ARGS);
extern Datum int4range_subdiff (PG_FUNCTION_ARGS);
extern Datum int4recv (PG_FUNCTION_ARGS);
extern Datum int4send (PG_FUNCTION_ARGS);
extern Datum int4shl (PG_FUNCTION_ARGS);
extern Datum int4shr (PG_FUNCTION_ARGS);
extern Datum int4smaller (PG_FUNCTION_ARGS);
extern Datum int4um (PG_FUNCTION_ARGS);
extern Datum int4up (PG_FUNCTION_ARGS);
extern Datum int4xor (PG_FUNCTION_ARGS);
extern Datum int48 (PG_FUNCTION_ARGS);
extern Datum dtoi8 (PG_FUNCTION_ARGS);
extern Datum ftoi8 (PG_FUNCTION_ARGS);
extern Datum int28 (PG_FUNCTION_ARGS);
extern Datum oidtoi8 (PG_FUNCTION_ARGS);
extern Datum numeric_int8 (PG_FUNCTION_ARGS);
extern Datum bittoint8 (PG_FUNCTION_ARGS);
extern Datum int82div (PG_FUNCTION_ARGS);
extern Datum int82eq (PG_FUNCTION_ARGS);
extern Datum int82ge (PG_FUNCTION_ARGS);
extern Datum int82gt (PG_FUNCTION_ARGS);
extern Datum int82le (PG_FUNCTION_ARGS);
extern Datum int82lt (PG_FUNCTION_ARGS);
extern Datum int82mi (PG_FUNCTION_ARGS);
extern Datum int82mul (PG_FUNCTION_ARGS);
extern Datum int82ne (PG_FUNCTION_ARGS);
extern Datum int82pl (PG_FUNCTION_ARGS);
extern Datum int84div (PG_FUNCTION_ARGS);
extern Datum int84eq (PG_FUNCTION_ARGS);
extern Datum int84ge (PG_FUNCTION_ARGS);
extern Datum int84gt (PG_FUNCTION_ARGS);
extern Datum int84le (PG_FUNCTION_ARGS);
extern Datum int84lt (PG_FUNCTION_ARGS);
extern Datum int84mi (PG_FUNCTION_ARGS);
extern Datum int84mul (PG_FUNCTION_ARGS);
extern Datum int84ne (PG_FUNCTION_ARGS);
extern Datum int84pl (PG_FUNCTION_ARGS);
extern Datum int8_accum (PG_FUNCTION_ARGS);
extern Datum int8_avg (PG_FUNCTION_ARGS);
extern Datum int8_avg_accum (PG_FUNCTION_ARGS);
extern Datum int8_avg_collect (PG_FUNCTION_ARGS);
extern Datum int8_bool (PG_FUNCTION_ARGS);
extern Datum int8_bpchar (PG_FUNCTION_ARGS);
extern Datum int8_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum int8_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum int8_mul_cash (PG_FUNCTION_ARGS);
extern Datum int8_sum (PG_FUNCTION_ARGS);
extern Datum int8_sum_to_int8 (PG_FUNCTION_ARGS);
extern Datum int8_text (PG_FUNCTION_ARGS);
extern Datum int8_varchar (PG_FUNCTION_ARGS);
extern Datum int8and (PG_FUNCTION_ARGS);
extern Datum int8div (PG_FUNCTION_ARGS);
extern Datum int8eq (PG_FUNCTION_ARGS);
extern Datum int8ge (PG_FUNCTION_ARGS);
extern Datum int8gt (PG_FUNCTION_ARGS);
extern Datum int8in (PG_FUNCTION_ARGS);
extern Datum int8inc (PG_FUNCTION_ARGS);
extern Datum int8inc_any (PG_FUNCTION_ARGS);
extern Datum int8inc_float8_float8 (PG_FUNCTION_ARGS);
extern Datum int8larger (PG_FUNCTION_ARGS);
extern Datum int8le (PG_FUNCTION_ARGS);
extern Datum int8lt (PG_FUNCTION_ARGS);
extern Datum int8mi (PG_FUNCTION_ARGS);
extern Datum int8mod (PG_FUNCTION_ARGS);
extern Datum int8mul (PG_FUNCTION_ARGS);
extern Datum int8ne (PG_FUNCTION_ARGS);
extern Datum int8not (PG_FUNCTION_ARGS);
extern Datum int8or (PG_FUNCTION_ARGS);
extern Datum int8out (PG_FUNCTION_ARGS);
extern Datum int8pl (PG_FUNCTION_ARGS);
extern Datum int8range_canonical (PG_FUNCTION_ARGS);
extern Datum int8range_subdiff (PG_FUNCTION_ARGS);
extern Datum int8recv (PG_FUNCTION_ARGS);
extern Datum int8send (PG_FUNCTION_ARGS);
extern Datum int8shl (PG_FUNCTION_ARGS);
extern Datum int8shr (PG_FUNCTION_ARGS);
extern Datum int8smaller (PG_FUNCTION_ARGS);
extern Datum int8um (PG_FUNCTION_ARGS);
extern Datum int8up (PG_FUNCTION_ARGS);
extern Datum int8xor (PG_FUNCTION_ARGS);
extern Datum inter_lb (PG_FUNCTION_ARGS);
extern Datum inter_sb (PG_FUNCTION_ARGS);
extern Datum inter_sl (PG_FUNCTION_ARGS);
extern Datum internal_in (PG_FUNCTION_ARGS);
extern Datum internal_out (PG_FUNCTION_ARGS);
extern Datum reltime_interval (PG_FUNCTION_ARGS);
extern Datum interval_scale (PG_FUNCTION_ARGS);
extern Datum time_interval (PG_FUNCTION_ARGS);
extern Datum interval_accum (PG_FUNCTION_ARGS);
extern Datum interval_avg (PG_FUNCTION_ARGS);
extern Datum interval_cmp (PG_FUNCTION_ARGS);
extern Datum interval_collect (PG_FUNCTION_ARGS);
extern Datum interval_div (PG_FUNCTION_ARGS);
extern Datum interval_eq (PG_FUNCTION_ARGS);
extern Datum interval_ge (PG_FUNCTION_ARGS);
extern Datum interval_gt (PG_FUNCTION_ARGS);
extern Datum interval_hash (PG_FUNCTION_ARGS);
extern Datum interval_in (PG_FUNCTION_ARGS);
extern Datum interval_larger (PG_FUNCTION_ARGS);
extern Datum interval_le (PG_FUNCTION_ARGS);
extern Datum interval_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum interval_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum interval_lt (PG_FUNCTION_ARGS);
extern Datum interval_mi (PG_FUNCTION_ARGS);
extern Datum interval_mul (PG_FUNCTION_ARGS);
extern Datum interval_ne (PG_FUNCTION_ARGS);
extern Datum interval_out (PG_FUNCTION_ARGS);
extern Datum interval_pl (PG_FUNCTION_ARGS);
extern Datum interval_recv (PG_FUNCTION_ARGS);
extern Datum interval_send (PG_FUNCTION_ARGS);
extern Datum interval_smaller (PG_FUNCTION_ARGS);
extern Datum interval_transform (PG_FUNCTION_ARGS);
extern Datum interval_um (PG_FUNCTION_ARGS);
extern Datum intervaltypmodin (PG_FUNCTION_ARGS);
extern Datum intervaltypmodout (PG_FUNCTION_ARGS);
extern Datum intinterval (PG_FUNCTION_ARGS);
extern Datum path_isclosed (PG_FUNCTION_ARGS);
extern Datum range_empty (PG_FUNCTION_ARGS);
extern Datum abstime_finite (PG_FUNCTION_ARGS);
extern Datum date_finite (PG_FUNCTION_ARGS);
extern Datum timestamp_finite (PG_FUNCTION_ARGS);
extern Datum interval_finite (PG_FUNCTION_ARGS);
extern Datum point_horiz (PG_FUNCTION_ARGS);
extern Datum lseg_horizontal (PG_FUNCTION_ARGS);
extern Datum line_horizontal (PG_FUNCTION_ARGS);
extern Datum path_isopen (PG_FUNCTION_ARGS);
extern Datum lseg_parallel (PG_FUNCTION_ARGS);
extern Datum line_parallel (PG_FUNCTION_ARGS);
extern Datum lseg_perp (PG_FUNCTION_ARGS);
extern Datum line_perp (PG_FUNCTION_ARGS);
extern Datum isubmit_job_on_nodes (PG_FUNCTION_ARGS);
extern Datum point_vert (PG_FUNCTION_ARGS);
extern Datum lseg_vertical (PG_FUNCTION_ARGS);
extern Datum line_vertical (PG_FUNCTION_ARGS);
extern Datum job_cancel (PG_FUNCTION_ARGS);
extern Datum job_finish (PG_FUNCTION_ARGS);
extern Datum job_submit (PG_FUNCTION_ARGS);
extern Datum job_update (PG_FUNCTION_ARGS);
extern Datum json_in (PG_FUNCTION_ARGS);
extern Datum json_out (PG_FUNCTION_ARGS);
extern Datum json_recv (PG_FUNCTION_ARGS);
extern Datum json_send (PG_FUNCTION_ARGS);
extern Datum interval_justify_days (PG_FUNCTION_ARGS);
extern Datum interval_justify_hours (PG_FUNCTION_ARGS);
extern Datum interval_justify_interval (PG_FUNCTION_ARGS);
extern Datum kill_snapshot (PG_FUNCTION_ARGS);
extern Datum window_lag (PG_FUNCTION_ARGS);
extern Datum window_lag_with_offset (PG_FUNCTION_ARGS);
extern Datum window_lag_with_offset_and_default (PG_FUNCTION_ARGS);
extern Datum language_handler_in (PG_FUNCTION_ARGS);
extern Datum language_handler_out (PG_FUNCTION_ARGS);
extern Datum last_day (PG_FUNCTION_ARGS);
extern Datum window_last_value (PG_FUNCTION_ARGS);
extern Datum lastval (PG_FUNCTION_ARGS);
extern Datum window_lead (PG_FUNCTION_ARGS);
extern Datum window_lead_with_offset (PG_FUNCTION_ARGS);
extern Datum window_lead_with_offset_and_default (PG_FUNCTION_ARGS);
extern Datum text_left (PG_FUNCTION_ARGS);
extern Datum lseg_length (PG_FUNCTION_ARGS);
extern Datum path_length (PG_FUNCTION_ARGS);
extern Datum bitlength (PG_FUNCTION_ARGS);
extern Datum length_in_encoding (PG_FUNCTION_ARGS);
extern Datum byteaoctetlen (PG_FUNCTION_ARGS);
extern Datum tsvector_length (PG_FUNCTION_ARGS);
extern Datum textoctetlen (PG_FUNCTION_ARGS);
extern Datum bpcharlenb (PG_FUNCTION_ARGS);
extern Datum namelike (PG_FUNCTION_ARGS);
extern Datum like_escape (PG_FUNCTION_ARGS);
extern Datum like_escape_bytea (PG_FUNCTION_ARGS);
extern Datum likejoinsel (PG_FUNCTION_ARGS);
extern Datum likesel (PG_FUNCTION_ARGS);
extern Datum line_construct_pp (PG_FUNCTION_ARGS);
extern Datum line_distance (PG_FUNCTION_ARGS);
extern Datum line_eq (PG_FUNCTION_ARGS);
extern Datum line_in (PG_FUNCTION_ARGS);
extern Datum line_interpt (PG_FUNCTION_ARGS);
extern Datum line_intersect (PG_FUNCTION_ARGS);
extern Datum line_out (PG_FUNCTION_ARGS);
extern Datum line_recv (PG_FUNCTION_ARGS);
extern Datum line_send (PG_FUNCTION_ARGS);
extern Datum list_agg_finalfn (PG_FUNCTION_ARGS);
extern Datum list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum numeric_ln (PG_FUNCTION_ARGS);
extern Datum lo_close (PG_FUNCTION_ARGS);
extern Datum lo_creat (PG_FUNCTION_ARGS);
extern Datum lo_create (PG_FUNCTION_ARGS);
extern Datum lo_export (PG_FUNCTION_ARGS);
extern Datum lo_import (PG_FUNCTION_ARGS);
extern Datum lo_import_with_oid (PG_FUNCTION_ARGS);
extern Datum lo_lseek (PG_FUNCTION_ARGS);
extern Datum lo_open (PG_FUNCTION_ARGS);
extern Datum lo_tell (PG_FUNCTION_ARGS);
extern Datum lo_truncate (PG_FUNCTION_ARGS);
extern Datum lo_unlink (PG_FUNCTION_ARGS);
extern Datum local_bgwriter_stat (PG_FUNCTION_ARGS);
extern Datum local_ckpt_stat (PG_FUNCTION_ARGS);
extern Datum local_double_write_stat (PG_FUNCTION_ARGS);
extern Datum local_pagewriter_stat (PG_FUNCTION_ARGS);
extern Datum local_recovery_status (PG_FUNCTION_ARGS);
extern Datum local_redo_stat (PG_FUNCTION_ARGS);
extern Datum local_rto_stat (PG_FUNCTION_ARGS);
extern Datum local_single_flush_dw_stat (PG_FUNCTION_ARGS);
extern Datum locktag_decode (PG_FUNCTION_ARGS);
extern Datum numeric_log (PG_FUNCTION_ARGS);
extern Datum loread (PG_FUNCTION_ARGS);
extern Datum lower (PG_FUNCTION_ARGS);
extern Datum range_lower (PG_FUNCTION_ARGS);
extern Datum range_lower_inc (PG_FUNCTION_ARGS);
extern Datum range_lower_inf (PG_FUNCTION_ARGS);
extern Datum lowrite (PG_FUNCTION_ARGS);
extern Datum lpad (PG_FUNCTION_ARGS);
extern Datum lseg_construct (PG_FUNCTION_ARGS);
extern Datum lseg_center (PG_FUNCTION_ARGS);
extern Datum lseg_distance (PG_FUNCTION_ARGS);
extern Datum lseg_eq (PG_FUNCTION_ARGS);
extern Datum lseg_ge (PG_FUNCTION_ARGS);
extern Datum lseg_gt (PG_FUNCTION_ARGS);
extern Datum lseg_in (PG_FUNCTION_ARGS);
extern Datum lseg_interpt (PG_FUNCTION_ARGS);
extern Datum lseg_intersect (PG_FUNCTION_ARGS);
extern Datum lseg_le (PG_FUNCTION_ARGS);
extern Datum lseg_lt (PG_FUNCTION_ARGS);
extern Datum lseg_ne (PG_FUNCTION_ARGS);
extern Datum lseg_out (PG_FUNCTION_ARGS);
extern Datum lseg_recv (PG_FUNCTION_ARGS);
extern Datum lseg_send (PG_FUNCTION_ARGS);
extern Datum ltrim (PG_FUNCTION_ARGS);
extern Datum ltrim1 (PG_FUNCTION_ARGS);
extern Datum macaddr_and (PG_FUNCTION_ARGS);
extern Datum macaddr_cmp (PG_FUNCTION_ARGS);
extern Datum macaddr_eq (PG_FUNCTION_ARGS);
extern Datum macaddr_ge (PG_FUNCTION_ARGS);
extern Datum macaddr_gt (PG_FUNCTION_ARGS);
extern Datum macaddr_in (PG_FUNCTION_ARGS);
extern Datum macaddr_le (PG_FUNCTION_ARGS);
extern Datum macaddr_lt (PG_FUNCTION_ARGS);
extern Datum macaddr_ne (PG_FUNCTION_ARGS);
extern Datum macaddr_not (PG_FUNCTION_ARGS);
extern Datum macaddr_or (PG_FUNCTION_ARGS);
extern Datum macaddr_out (PG_FUNCTION_ARGS);
extern Datum macaddr_recv (PG_FUNCTION_ARGS);
extern Datum macaddr_send (PG_FUNCTION_ARGS);
extern Datum makeaclitem (PG_FUNCTION_ARGS);
extern Datum network_masklen (PG_FUNCTION_ARGS);
extern Datum md5_text (PG_FUNCTION_ARGS);
extern Datum md5_bytea (PG_FUNCTION_ARGS);
extern Datum median_float8_finalfn (PG_FUNCTION_ARGS);
extern Datum median_interval_finalfn (PG_FUNCTION_ARGS);
extern Datum median_transfn (PG_FUNCTION_ARGS);
extern Datum mktinterval (PG_FUNCTION_ARGS);
extern Datum numeric_mod (PG_FUNCTION_ARGS);
extern Datum mode_final (PG_FUNCTION_ARGS);
extern Datum model_train_opt (PG_FUNCTION_ARGS);
extern Datum int4_cash (PG_FUNCTION_ARGS);
extern Datum int8_cash (PG_FUNCTION_ARGS);
extern Datum numeric_cash (PG_FUNCTION_ARGS);
extern Datum mot_global_memory_detail (PG_FUNCTION_ARGS);
extern Datum mot_local_memory_detail (PG_FUNCTION_ARGS);
extern Datum mot_session_memory_detail (PG_FUNCTION_ARGS);
extern Datum mul_d_interval (PG_FUNCTION_ARGS);
extern Datum text_multiply_float8 (PG_FUNCTION_ARGS);
extern Datum float8_multiply_text (PG_FUNCTION_ARGS);
extern Datum text_name (PG_FUNCTION_ARGS);
extern Datum bpchar_name (PG_FUNCTION_ARGS);
extern Datum nameeq (PG_FUNCTION_ARGS);
extern Datum namege (PG_FUNCTION_ARGS);
extern Datum namegt (PG_FUNCTION_ARGS);
extern Datum nameiclike (PG_FUNCTION_ARGS);
extern Datum nameicnlike (PG_FUNCTION_ARGS);
extern Datum nameicregexeq (PG_FUNCTION_ARGS);
extern Datum nameicregexne (PG_FUNCTION_ARGS);
extern Datum namein (PG_FUNCTION_ARGS);
extern Datum namele (PG_FUNCTION_ARGS);
extern Datum namelt (PG_FUNCTION_ARGS);
extern Datum namene (PG_FUNCTION_ARGS);
extern Datum namenlike (PG_FUNCTION_ARGS);
extern Datum nameout (PG_FUNCTION_ARGS);
extern Datum namerecv (PG_FUNCTION_ARGS);
extern Datum nameregexeq (PG_FUNCTION_ARGS);
extern Datum nameregexne (PG_FUNCTION_ARGS);
extern Datum namesend (PG_FUNCTION_ARGS);
extern Datum neqjoinsel (PG_FUNCTION_ARGS);
extern Datum neqsel (PG_FUNCTION_ARGS);
extern Datum network_netmask (PG_FUNCTION_ARGS);
extern Datum network_network (PG_FUNCTION_ARGS);
extern Datum network_cmp (PG_FUNCTION_ARGS);
extern Datum network_eq (PG_FUNCTION_ARGS);
extern Datum network_ge (PG_FUNCTION_ARGS);
extern Datum network_gt (PG_FUNCTION_ARGS);
extern Datum network_le (PG_FUNCTION_ARGS);
extern Datum network_lt (PG_FUNCTION_ARGS);
extern Datum network_ne (PG_FUNCTION_ARGS);
extern Datum network_sub (PG_FUNCTION_ARGS);
extern Datum network_subeq (PG_FUNCTION_ARGS);
extern Datum network_sup (PG_FUNCTION_ARGS);
extern Datum network_supeq (PG_FUNCTION_ARGS);
extern Datum next_day_int (PG_FUNCTION_ARGS);
extern Datum next_day_str (PG_FUNCTION_ARGS);
extern Datum nextval_oid (PG_FUNCTION_ARGS);
extern Datum ngram_end (PG_FUNCTION_ARGS);
extern Datum ngram_lextype (PG_FUNCTION_ARGS);
extern Datum ngram_nexttoken (PG_FUNCTION_ARGS);
extern Datum ngram_start (PG_FUNCTION_ARGS);
extern Datum nlikejoinsel (PG_FUNCTION_ARGS);
extern Datum nlikesel (PG_FUNCTION_ARGS);
extern Datum node_oid_name (PG_FUNCTION_ARGS);
extern Datum now (PG_FUNCTION_ARGS);
extern Datum path_npoints (PG_FUNCTION_ARGS);
extern Datum poly_npoints (PG_FUNCTION_ARGS);
extern Datum window_nth_value (PG_FUNCTION_ARGS);
extern Datum window_ntile (PG_FUNCTION_ARGS);
extern Datum numeric (PG_FUNCTION_ARGS);
extern Datum int4_numeric (PG_FUNCTION_ARGS);
extern Datum float4_numeric (PG_FUNCTION_ARGS);
extern Datum float8_numeric (PG_FUNCTION_ARGS);
extern Datum int8_numeric (PG_FUNCTION_ARGS);
extern Datum int2_numeric (PG_FUNCTION_ARGS);
extern Datum cash_numeric (PG_FUNCTION_ARGS);
extern Datum numeric_accum (PG_FUNCTION_ARGS);
extern Datum numeric_add (PG_FUNCTION_ARGS);
extern Datum numeric_avg (PG_FUNCTION_ARGS);
extern Datum numeric_avg_accum (PG_FUNCTION_ARGS);
extern Datum numeric_avg_collect (PG_FUNCTION_ARGS);
extern Datum numeric_bpchar (PG_FUNCTION_ARGS);
extern Datum numeric_cmp (PG_FUNCTION_ARGS);
extern Datum numeric_collect (PG_FUNCTION_ARGS);
extern Datum numeric_div (PG_FUNCTION_ARGS);
extern Datum numeric_eq (PG_FUNCTION_ARGS);
extern Datum numeric_ge (PG_FUNCTION_ARGS);
extern Datum numeric_gt (PG_FUNCTION_ARGS);
extern Datum numeric_in (PG_FUNCTION_ARGS);
extern Datum numeric_inc (PG_FUNCTION_ARGS);
extern Datum numeric_int1 (PG_FUNCTION_ARGS);
extern Datum numeric_larger (PG_FUNCTION_ARGS);
extern Datum numeric_le (PG_FUNCTION_ARGS);
extern Datum numeric_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum numeric_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum numeric_lt (PG_FUNCTION_ARGS);
extern Datum numeric_mul (PG_FUNCTION_ARGS);
extern Datum numeric_ne (PG_FUNCTION_ARGS);
extern Datum numeric_out (PG_FUNCTION_ARGS);
extern Datum numeric_power (PG_FUNCTION_ARGS);
extern Datum numeric_recv (PG_FUNCTION_ARGS);
extern Datum numeric_send (PG_FUNCTION_ARGS);
extern Datum numeric_smaller (PG_FUNCTION_ARGS);
extern Datum numeric_sortsupport (PG_FUNCTION_ARGS);
extern Datum numeric_sqrt (PG_FUNCTION_ARGS);
extern Datum numeric_stddev_pop (PG_FUNCTION_ARGS);
extern Datum numeric_stddev_samp (PG_FUNCTION_ARGS);
extern Datum numeric_sub (PG_FUNCTION_ARGS);
extern Datum numeric_text (PG_FUNCTION_ARGS);
extern Datum numeric_transform (PG_FUNCTION_ARGS);
extern Datum numeric_uminus (PG_FUNCTION_ARGS);
extern Datum numeric_uplus (PG_FUNCTION_ARGS);
extern Datum numeric_var_pop (PG_FUNCTION_ARGS);
extern Datum numeric_var_samp (PG_FUNCTION_ARGS);
extern Datum numeric_varchar (PG_FUNCTION_ARGS);
extern Datum numerictypmodin (PG_FUNCTION_ARGS);
extern Datum numerictypmodout (PG_FUNCTION_ARGS);
extern Datum tsquery_numnode (PG_FUNCTION_ARGS);
extern Datum numrange_subdiff (PG_FUNCTION_ARGS);
extern Datum int1_interval (PG_FUNCTION_ARGS);
extern Datum int2_interval (PG_FUNCTION_ARGS);
extern Datum int4_interval (PG_FUNCTION_ARGS);
extern Datum numeric_interval (PG_FUNCTION_ARGS);
extern Datum numtodsinterval (PG_FUNCTION_ARGS);
extern Datum nvarchar2 (PG_FUNCTION_ARGS);
extern Datum nvarchar2in (PG_FUNCTION_ARGS);
extern Datum nvarchar2out (PG_FUNCTION_ARGS);
extern Datum nvarchar2recv (PG_FUNCTION_ARGS);
extern Datum nvarchar2send (PG_FUNCTION_ARGS);
extern Datum nvarchar2typmodin (PG_FUNCTION_ARGS);
extern Datum nvarchar2typmodout (PG_FUNCTION_ARGS);
extern Datum bpcharoctetlen (PG_FUNCTION_ARGS);
extern Datum bitoctetlength (PG_FUNCTION_ARGS);
extern Datum i8tooid (PG_FUNCTION_ARGS);
extern Datum oideq (PG_FUNCTION_ARGS);
extern Datum oidge (PG_FUNCTION_ARGS);
extern Datum oidgt (PG_FUNCTION_ARGS);
extern Datum oidin (PG_FUNCTION_ARGS);
extern Datum oidlarger (PG_FUNCTION_ARGS);
extern Datum oidle (PG_FUNCTION_ARGS);
extern Datum oidlt (PG_FUNCTION_ARGS);
extern Datum oidne (PG_FUNCTION_ARGS);
extern Datum oidout (PG_FUNCTION_ARGS);
extern Datum oidrecv (PG_FUNCTION_ARGS);
extern Datum oidsend (PG_FUNCTION_ARGS);
extern Datum oidsmaller (PG_FUNCTION_ARGS);
extern Datum oidvectoreq (PG_FUNCTION_ARGS);
extern Datum oidvectorge (PG_FUNCTION_ARGS);
extern Datum oidvectorgt (PG_FUNCTION_ARGS);
extern Datum oidvectorin (PG_FUNCTION_ARGS);
extern Datum oidvectorin_extend (PG_FUNCTION_ARGS);
extern Datum oidvectorle (PG_FUNCTION_ARGS);
extern Datum oidvectorlt (PG_FUNCTION_ARGS);
extern Datum oidvectorne (PG_FUNCTION_ARGS);
extern Datum oidvectorout (PG_FUNCTION_ARGS);
extern Datum oidvectorout_extend (PG_FUNCTION_ARGS);
extern Datum oidvectorrecv (PG_FUNCTION_ARGS);
extern Datum oidvectorrecv_extend (PG_FUNCTION_ARGS);
extern Datum oidvectorsend (PG_FUNCTION_ARGS);
extern Datum oidvectorsend_extend (PG_FUNCTION_ARGS);
extern Datum oidvectortypes (PG_FUNCTION_ARGS);
extern Datum on_pb (PG_FUNCTION_ARGS);
extern Datum on_pl (PG_FUNCTION_ARGS);
extern Datum on_ppath (PG_FUNCTION_ARGS);
extern Datum on_ps (PG_FUNCTION_ARGS);
extern Datum on_sb (PG_FUNCTION_ARGS);
extern Datum on_sl (PG_FUNCTION_ARGS);
extern Datum opaque_in (PG_FUNCTION_ARGS);
extern Datum opaque_out (PG_FUNCTION_ARGS);
extern Datum ordered_set_transition (PG_FUNCTION_ARGS);
extern Datum overlaps_timetz (PG_FUNCTION_ARGS);
extern Datum overlaps_timestamp (PG_FUNCTION_ARGS);
extern Datum overlaps_time (PG_FUNCTION_ARGS);
extern Datum byteaoverlay (PG_FUNCTION_ARGS);
extern Datum byteaoverlay_no_len (PG_FUNCTION_ARGS);
extern Datum textoverlay (PG_FUNCTION_ARGS);
extern Datum textoverlay_no_len (PG_FUNCTION_ARGS);
extern Datum bitoverlay (PG_FUNCTION_ARGS);
extern Datum bitoverlay_no_len (PG_FUNCTION_ARGS);
extern Datum poly_path (PG_FUNCTION_ARGS);
extern Datum path_add (PG_FUNCTION_ARGS);
extern Datum path_add_pt (PG_FUNCTION_ARGS);
extern Datum path_center (PG_FUNCTION_ARGS);
extern Datum path_distance (PG_FUNCTION_ARGS);
extern Datum path_div_pt (PG_FUNCTION_ARGS);
extern Datum path_in (PG_FUNCTION_ARGS);
extern Datum path_inter (PG_FUNCTION_ARGS);
extern Datum path_mul_pt (PG_FUNCTION_ARGS);
extern Datum path_n_eq (PG_FUNCTION_ARGS);
extern Datum path_n_ge (PG_FUNCTION_ARGS);
extern Datum path_n_gt (PG_FUNCTION_ARGS);
extern Datum path_n_le (PG_FUNCTION_ARGS);
extern Datum path_n_lt (PG_FUNCTION_ARGS);
extern Datum path_out (PG_FUNCTION_ARGS);
extern Datum path_recv (PG_FUNCTION_ARGS);
extern Datum path_send (PG_FUNCTION_ARGS);
extern Datum path_sub_pt (PG_FUNCTION_ARGS);
extern Datum path_close (PG_FUNCTION_ARGS);
extern Datum window_percent_rank (PG_FUNCTION_ARGS);
extern Datum percentile_cont_float8_final (PG_FUNCTION_ARGS);
extern Datum percentile_cont_interval_final (PG_FUNCTION_ARGS);
extern Datum pg_advisory_lock_int8 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_lock_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_lock_sp_db_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_lock_shared_int8 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_lock_shared_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_unlock_int8 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_unlock_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_unlock_sp_db_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_unlock_all (PG_FUNCTION_ARGS);
extern Datum pg_advisory_unlock_shared_int8 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_unlock_shared_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_xact_lock_int8 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_xact_lock_int4 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_xact_lock_shared_int8 (PG_FUNCTION_ARGS);
extern Datum pg_advisory_xact_lock_shared_int4 (PG_FUNCTION_ARGS);
extern Datum pg_autovac_coordinator (PG_FUNCTION_ARGS);
extern Datum pg_autovac_status (PG_FUNCTION_ARGS);
extern Datum pg_autovac_timeout (PG_FUNCTION_ARGS);
extern Datum pg_available_extension_versions (PG_FUNCTION_ARGS);
extern Datum pg_available_extensions (PG_FUNCTION_ARGS);
extern Datum pg_backend_pid (PG_FUNCTION_ARGS);
extern Datum pg_buffercache_pages (PG_FUNCTION_ARGS);
extern Datum pg_cancel_backend (PG_FUNCTION_ARGS);
extern Datum pg_cancel_invalid_query (PG_FUNCTION_ARGS);
extern Datum pg_cbm_force_track (PG_FUNCTION_ARGS);
extern Datum pg_cbm_get_changed_block (PG_FUNCTION_ARGS);
extern Datum pg_cbm_get_merged_file (PG_FUNCTION_ARGS);
extern Datum pg_cbm_recycle_file (PG_FUNCTION_ARGS);
extern Datum pg_cbm_rotate_file (PG_FUNCTION_ARGS);
extern Datum pg_cbm_tracked_location (PG_FUNCTION_ARGS);
extern Datum PG_char_to_encoding (PG_FUNCTION_ARGS);
extern Datum pg_check_authid (PG_FUNCTION_ARGS);
extern Datum pg_check_xidlimit (PG_FUNCTION_ARGS);
extern Datum pg_clean_region_info (PG_FUNCTION_ARGS);
extern Datum pg_client_encoding (PG_FUNCTION_ARGS);
extern Datum pg_collation_for (PG_FUNCTION_ARGS);
extern Datum pg_collation_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_column_size (PG_FUNCTION_ARGS);
extern Datum pg_comm_delay (PG_FUNCTION_ARGS);
extern Datum pg_comm_recv_stream (PG_FUNCTION_ARGS);
extern Datum pg_comm_send_stream (PG_FUNCTION_ARGS);
extern Datum pg_comm_status (PG_FUNCTION_ARGS);
extern Datum pg_conf_load_time (PG_FUNCTION_ARGS);
extern Datum pg_control_checkpoint (PG_FUNCTION_ARGS);
extern Datum pg_control_group_config (PG_FUNCTION_ARGS);
extern Datum pg_control_system (PG_FUNCTION_ARGS);
extern Datum pg_conversion_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_create_logical_replication_slot (PG_FUNCTION_ARGS);
extern Datum pg_create_physical_replication_slot (PG_FUNCTION_ARGS);
extern Datum pg_create_physical_replication_slot_extern (PG_FUNCTION_ARGS);
extern Datum pg_create_restore_point (PG_FUNCTION_ARGS);
extern Datum pg_current_sessid (PG_FUNCTION_ARGS);
extern Datum pg_current_sessionid (PG_FUNCTION_ARGS);
extern Datum pg_current_userid (PG_FUNCTION_ARGS);
extern Datum pg_current_xlog_insert_location (PG_FUNCTION_ARGS);
extern Datum pg_current_xlog_location (PG_FUNCTION_ARGS);
extern Datum pg_cursor (PG_FUNCTION_ARGS);
extern Datum pg_database_size_name (PG_FUNCTION_ARGS);
extern Datum pg_database_size_oid (PG_FUNCTION_ARGS);
extern Datum pg_delete_audit (PG_FUNCTION_ARGS);
extern Datum pg_describe_object (PG_FUNCTION_ARGS);
extern Datum pg_disable_delay_ddl_recycle (PG_FUNCTION_ARGS);
extern Datum pg_disable_delay_xlog_recycle (PG_FUNCTION_ARGS);
extern Datum pg_drop_replication_slot (PG_FUNCTION_ARGS);
extern Datum pg_enable_delay_ddl_recycle (PG_FUNCTION_ARGS);
extern Datum pg_enable_delay_xlog_recycle (PG_FUNCTION_ARGS);
extern Datum pg_encoding_max_length_sql (PG_FUNCTION_ARGS);
extern Datum PG_encoding_to_char (PG_FUNCTION_ARGS);
extern Datum pg_export_snapshot (PG_FUNCTION_ARGS);
extern Datum pg_export_snapshot_and_csn (PG_FUNCTION_ARGS);
extern Datum pg_extension_config_dump (PG_FUNCTION_ARGS);
extern Datum pg_extension_update_paths (PG_FUNCTION_ARGS);
extern Datum pg_filenode_relation (PG_FUNCTION_ARGS);
extern Datum pg_function_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_get_constraintdef (PG_FUNCTION_ARGS);
extern Datum pg_get_constraintdef_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_expr (PG_FUNCTION_ARGS);
extern Datum pg_get_expr_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_flush_lsn (PG_FUNCTION_ARGS);
extern Datum pg_get_function_arguments (PG_FUNCTION_ARGS);
extern Datum pg_get_function_identity_arguments (PG_FUNCTION_ARGS);
extern Datum pg_get_function_result (PG_FUNCTION_ARGS);
extern Datum pg_get_functiondef (PG_FUNCTION_ARGS);
extern Datum pg_get_gtt_relstats (PG_FUNCTION_ARGS);
extern Datum pg_get_gtt_statistics (PG_FUNCTION_ARGS);
extern Datum pg_get_indexdef (PG_FUNCTION_ARGS);
extern Datum pg_get_indexdef_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_keywords (PG_FUNCTION_ARGS);
extern Datum pg_get_replication_slot_name (PG_FUNCTION_ARGS);
extern Datum pg_get_replication_slots (PG_FUNCTION_ARGS);
extern Datum pg_get_ruledef (PG_FUNCTION_ARGS);
extern Datum pg_get_ruledef_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_running_xacts (PG_FUNCTION_ARGS);
extern Datum pg_get_serial_sequence (PG_FUNCTION_ARGS);
extern Datum pg_get_sync_flush_lsn (PG_FUNCTION_ARGS);
extern Datum pg_get_tabledef_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_triggerdef (PG_FUNCTION_ARGS);
extern Datum pg_get_triggerdef_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_userbyid (PG_FUNCTION_ARGS);
extern Datum pg_get_variable_info (PG_FUNCTION_ARGS);
extern Datum pg_get_viewdef_name (PG_FUNCTION_ARGS);
extern Datum pg_get_viewdef (PG_FUNCTION_ARGS);
extern Datum pg_get_viewdef_name_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_viewdef_ext (PG_FUNCTION_ARGS);
extern Datum pg_get_viewdef_wrap (PG_FUNCTION_ARGS);
extern Datum pg_get_xidlimit (PG_FUNCTION_ARGS);
extern Datum pg_gtt_attached_pid (PG_FUNCTION_ARGS);
extern Datum pg_has_role_name_name (PG_FUNCTION_ARGS);
extern Datum pg_has_role_name_id (PG_FUNCTION_ARGS);
extern Datum pg_has_role_id_name (PG_FUNCTION_ARGS);
extern Datum pg_has_role_id_id (PG_FUNCTION_ARGS);
extern Datum pg_has_role_name (PG_FUNCTION_ARGS);
extern Datum pg_has_role_id (PG_FUNCTION_ARGS);
extern Datum pg_indexes_size (PG_FUNCTION_ARGS);
extern Datum pg_is_in_recovery (PG_FUNCTION_ARGS);
extern Datum pg_is_other_temp_schema (PG_FUNCTION_ARGS);
extern Datum pg_is_xlog_replay_paused (PG_FUNCTION_ARGS);
extern Datum pg_last_xact_replay_timestamp (PG_FUNCTION_ARGS);
extern Datum pg_last_xlog_receive_location (PG_FUNCTION_ARGS);
extern Datum pg_last_xlog_replay_location (PG_FUNCTION_ARGS);
extern Datum pg_list_gtt_relfrozenxids (PG_FUNCTION_ARGS);
extern Datum pg_listening_channels (PG_FUNCTION_ARGS);
extern Datum pg_lock_status (PG_FUNCTION_ARGS);
extern Datum pg_log_comm_status (PG_FUNCTION_ARGS);
extern Datum pg_logical_slot_get_binary_changes (PG_FUNCTION_ARGS);
extern Datum pg_logical_slot_get_changes (PG_FUNCTION_ARGS);
extern Datum pg_logical_slot_peek_binary_changes (PG_FUNCTION_ARGS);
extern Datum pg_logical_slot_peek_changes (PG_FUNCTION_ARGS);
extern Datum pg_ls_dir (PG_FUNCTION_ARGS);
extern Datum pg_my_temp_schema (PG_FUNCTION_ARGS);
extern Datum pg_node_tree_in (PG_FUNCTION_ARGS);
extern Datum pg_node_tree_out (PG_FUNCTION_ARGS);
extern Datum pg_node_tree_recv (PG_FUNCTION_ARGS);
extern Datum pg_node_tree_send (PG_FUNCTION_ARGS);
extern Datum pg_notify (PG_FUNCTION_ARGS);
extern Datum pg_opclass_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_operator_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_opfamily_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_options_to_table (PG_FUNCTION_ARGS);
extern Datum pg_parse_clog (PG_FUNCTION_ARGS);
extern Datum pg_partition_filenode (PG_FUNCTION_ARGS);
extern Datum pg_partition_filepath (PG_FUNCTION_ARGS);
extern Datum pg_partition_indexes_size_name (PG_FUNCTION_ARGS);
extern Datum pg_partition_indexes_size_oid (PG_FUNCTION_ARGS);
extern Datum pg_partition_size_name (PG_FUNCTION_ARGS);
extern Datum pg_partition_size_oid (PG_FUNCTION_ARGS);
extern Datum pg_pool_ping (PG_FUNCTION_ARGS);
extern Datum pg_pool_validate (PG_FUNCTION_ARGS);
extern Datum pg_postmaster_start_time (PG_FUNCTION_ARGS);
extern Datum pg_prepared_statement (PG_FUNCTION_ARGS);
extern Datum pg_prepared_xact (PG_FUNCTION_ARGS);
extern Datum pg_query_audit (PG_FUNCTION_ARGS);
extern Datum pg_read_binary_file (PG_FUNCTION_ARGS);
extern Datum pg_read_binary_file_all (PG_FUNCTION_ARGS);
extern Datum pg_read_file (PG_FUNCTION_ARGS);
extern Datum pg_read_file_all (PG_FUNCTION_ARGS);
extern Datum pg_relation_compression_ratio (PG_FUNCTION_ARGS);
extern Datum pg_relation_filenode (PG_FUNCTION_ARGS);
extern Datum pg_relation_filepath (PG_FUNCTION_ARGS);
extern Datum pg_relation_size (PG_FUNCTION_ARGS);
extern Datum pg_relation_with_compression (PG_FUNCTION_ARGS);
extern Datum pg_reload_conf (PG_FUNCTION_ARGS);
extern Datum pg_replication_slot_advance (PG_FUNCTION_ARGS);
extern Datum pg_resume_bkp_flag (PG_FUNCTION_ARGS);
extern Datum pg_rotate_logfile (PG_FUNCTION_ARGS);
extern Datum pg_sequence_parameters (PG_FUNCTION_ARGS);
extern Datum pg_shared_memctx_detail (PG_FUNCTION_ARGS);
extern Datum pg_shared_memory_detail (PG_FUNCTION_ARGS);
extern Datum show_all_settings (PG_FUNCTION_ARGS);
extern Datum pg_size_pretty (PG_FUNCTION_ARGS);
extern Datum pg_size_pretty_numeric (PG_FUNCTION_ARGS);
extern Datum pg_sleep (PG_FUNCTION_ARGS);
extern Datum pg_start_backup (PG_FUNCTION_ARGS);
extern Datum pg_start_backup_v2 (PG_FUNCTION_ARGS);
extern Datum pg_stat_bad_block (PG_FUNCTION_ARGS);
extern Datum pg_stat_bad_block_clear (PG_FUNCTION_ARGS);
extern Datum pg_stat_clear_snapshot (PG_FUNCTION_ARGS);
extern Datum pg_stat_file (PG_FUNCTION_ARGS);
extern Datum pg_stat_file_recursive (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_activity (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_activity_for_temptable (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_activity_ng (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_activity_with_conninfo (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_analyze_count (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_autoanalyze_count (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_autovacuum_count (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_activity (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_activity_start (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_client_addr (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_client_port (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_dbid (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_idset (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_pid (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_start (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_userid (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_waiting (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_backend_xact_start (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_bgwriter_buf_written_checkpoints (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_bgwriter_buf_written_clean (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_bgwriter_maxwritten_clean (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_bgwriter_requested_checkpoints (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_bgwriter_stat_reset_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_bgwriter_timed_checkpoints (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_blocks_fetched (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_blocks_hit (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_buf_alloc (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_buf_fsync_backend (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_buf_written_backend (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_cgroup_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_checkpoint_sync_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_checkpoint_write_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_cu_hdd_asyn (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_cu_hdd_sync (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_cu_mem_hit (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_data_senders (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_blk_read_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_blk_write_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_blocks_fetched (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_blocks_hit (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_conflict_all (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_conflict_bufferpin (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_conflict_lock (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_conflict_snapshot (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_conflict_startup_deadlock (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_conflict_tablespace (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_cu_hdd_asyn (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_cu_hdd_sync (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_cu_mem_hit (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_deadlocks (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_numbackends (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_stat_reset_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_temp_bytes (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_temp_files (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_tuples_deleted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_tuples_fetched (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_tuples_inserted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_tuples_returned (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_tuples_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_xact_commit (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_db_xact_rollback (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_dead_tuples (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_env (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_file_stat (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_function_calls (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_function_self_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_function_total_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_last_analyze_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_last_autoanalyze_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_last_autovacuum_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_last_data_changed_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_last_vacuum_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_live_tuples (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_mem_mbytes_reserved (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_numscans (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_dead_tuples (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_live_tuples (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_tuples_changed (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_tuples_deleted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_tuples_hot_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_tuples_inserted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_partition_tuples_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_pooler_status (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_realtime_info_internal (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_redo_stat (PG_FUNCTION_ARGS);
extern Datum gs_get_role_name (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_session_wlmstat (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_sql_count (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_status (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_stream_replications (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_thread (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_changed (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_deleted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_fetched (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_hot_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_inserted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_returned (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_tuples_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_vacuum_count (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wal_receiver (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wal_senders (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_ec_operator_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_instance_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_instance_info_with_cleanup (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_node_resource_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_operator_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_realtime_ec_operator_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_realtime_operator_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_realtime_session_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_session_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_session_info_internal (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_session_iostat_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_statistics (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_workload_struct_info (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_blocks_fetched (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_blocks_hit (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_function_calls (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_function_self_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_function_total_time (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_numscans (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_partition_tuples_deleted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_partition_tuples_hot_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_partition_tuples_inserted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_partition_tuples_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_tuples_deleted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_tuples_fetched (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_tuples_hot_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_tuples_inserted (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_tuples_returned (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_xact_tuples_updated (PG_FUNCTION_ARGS);
extern Datum pg_stat_reset (PG_FUNCTION_ARGS);
extern Datum pg_stat_reset_shared (PG_FUNCTION_ARGS);
extern Datum pg_stat_reset_single_function_counters (PG_FUNCTION_ARGS);
extern Datum pg_stat_reset_single_table_counters (PG_FUNCTION_ARGS);
extern Datum pg_stat_set_last_data_changed_time (PG_FUNCTION_ARGS);
extern Datum pg_stop_backup (PG_FUNCTION_ARGS);
extern Datum pg_stop_backup_v2 (PG_FUNCTION_ARGS);
extern Datum pg_switch_xlog (PG_FUNCTION_ARGS);
extern Datum pg_sync_cstore_delta (PG_FUNCTION_ARGS);
extern Datum pg_sync_all_cstore_delta (PG_FUNCTION_ARGS);
extern Datum pg_system_timestamp (PG_FUNCTION_ARGS);
extern Datum pg_table_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_table_size (PG_FUNCTION_ARGS);
extern Datum pg_tablespace_databases (PG_FUNCTION_ARGS);
extern Datum pg_tablespace_location (PG_FUNCTION_ARGS);
extern Datum pg_tablespace_size_oid (PG_FUNCTION_ARGS);
extern Datum pg_tablespace_size_name (PG_FUNCTION_ARGS);
extern Datum pg_tde_info (PG_FUNCTION_ARGS);
extern Datum pg_terminate_backend (PG_FUNCTION_ARGS);
extern Datum pg_terminate_session (PG_FUNCTION_ARGS);
extern Datum pg_test_err_contain_err (PG_FUNCTION_ARGS);
extern Datum pg_timezone_abbrevs (PG_FUNCTION_ARGS);
extern Datum pg_timezone_names (PG_FUNCTION_ARGS);
extern Datum pg_total_autovac_tuples (PG_FUNCTION_ARGS);
extern Datum pg_total_relation_size (PG_FUNCTION_ARGS);
extern Datum pg_trigger_depth (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_lock_int8 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_lock_int4 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_lock_shared_int8 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_lock_shared_int4 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_xact_lock_int8 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_xact_lock_int4 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_xact_lock_shared_int8 (PG_FUNCTION_ARGS);
extern Datum pg_try_advisory_xact_lock_shared_int4 (PG_FUNCTION_ARGS);
extern Datum pg_ts_config_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_ts_dict_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_ts_parser_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_ts_template_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_type_is_visible (PG_FUNCTION_ARGS);
extern Datum pg_typeof (PG_FUNCTION_ARGS);
extern Datum pg_stat_get_wlm_user_iostat_info (PG_FUNCTION_ARGS);
extern Datum pg_wlm_jump_queue (PG_FUNCTION_ARGS);
extern Datum pg_xlog_location_diff (PG_FUNCTION_ARGS);
extern Datum pg_xlog_replay_pause (PG_FUNCTION_ARGS);
extern Datum pg_xlog_replay_resume (PG_FUNCTION_ARGS);
extern Datum pg_xlogfile_name (PG_FUNCTION_ARGS);
extern Datum pg_xlogfile_name_offset (PG_FUNCTION_ARGS);
extern Datum pgxc_get_csn (PG_FUNCTION_ARGS);
extern Datum pgxc_stat_get_status (PG_FUNCTION_ARGS);
extern Datum pgxc_gtm_snapshot_status (PG_FUNCTION_ARGS);
extern Datum pgxc_is_committed (PG_FUNCTION_ARGS);
extern Datum pgxc_lock_for_backup (PG_FUNCTION_ARGS);
extern Datum pgxc_lock_for_sp_database (PG_FUNCTION_ARGS);
extern Datum pgxc_lock_for_transfer (PG_FUNCTION_ARGS);
extern Datum pgxc_max_datanode_size_name (PG_FUNCTION_ARGS);
extern Datum pgxc_node_str (PG_FUNCTION_ARGS);
extern Datum pgxc_pool_check (PG_FUNCTION_ARGS);
extern Datum pgxc_pool_connection_status (PG_FUNCTION_ARGS);
extern Datum pgxc_pool_reload (PG_FUNCTION_ARGS);
extern Datum pgxc_snapshot_status (PG_FUNCTION_ARGS);
extern Datum pgxc_stat_all_dirty_tables (PG_FUNCTION_ARGS);
extern Datum pgxc_stat_schema_dirty_tables (PG_FUNCTION_ARGS);
extern Datum pgxc_unlock_for_sp_database (PG_FUNCTION_ARGS);
extern Datum pgxc_unlock_for_transfer (PG_FUNCTION_ARGS);
extern Datum pgxc_version (PG_FUNCTION_ARGS);
extern Datum dpi (PG_FUNCTION_ARGS);
extern Datum plainto_tsquery_byid (PG_FUNCTION_ARGS);
extern Datum plainto_tsquery (PG_FUNCTION_ARGS);
extern Datum get_plan_seed (PG_FUNCTION_ARGS);
extern Datum GPCPlanClean (PG_FUNCTION_ARGS);
extern Datum gs_globalplancache_status (PG_FUNCTION_ARGS);
extern Datum construct_point (PG_FUNCTION_ARGS);
extern Datum poly_center (PG_FUNCTION_ARGS);
extern Datum point_above (PG_FUNCTION_ARGS);
extern Datum point_add (PG_FUNCTION_ARGS);
extern Datum point_below (PG_FUNCTION_ARGS);
extern Datum point_distance (PG_FUNCTION_ARGS);
extern Datum point_div (PG_FUNCTION_ARGS);
extern Datum point_eq (PG_FUNCTION_ARGS);
extern Datum point_in (PG_FUNCTION_ARGS);
extern Datum point_left (PG_FUNCTION_ARGS);
extern Datum point_mul (PG_FUNCTION_ARGS);
extern Datum point_ne (PG_FUNCTION_ARGS);
extern Datum point_out (PG_FUNCTION_ARGS);
extern Datum point_recv (PG_FUNCTION_ARGS);
extern Datum point_right (PG_FUNCTION_ARGS);
extern Datum point_send (PG_FUNCTION_ARGS);
extern Datum point_sub (PG_FUNCTION_ARGS);
extern Datum poly_above (PG_FUNCTION_ARGS);
extern Datum poly_below (PG_FUNCTION_ARGS);
extern Datum poly_contain (PG_FUNCTION_ARGS);
extern Datum poly_contain_pt (PG_FUNCTION_ARGS);
extern Datum poly_contained (PG_FUNCTION_ARGS);
extern Datum poly_distance (PG_FUNCTION_ARGS);
extern Datum poly_in (PG_FUNCTION_ARGS);
extern Datum poly_left (PG_FUNCTION_ARGS);
extern Datum poly_out (PG_FUNCTION_ARGS);
extern Datum poly_overabove (PG_FUNCTION_ARGS);
extern Datum poly_overbelow (PG_FUNCTION_ARGS);
extern Datum poly_overlap (PG_FUNCTION_ARGS);
extern Datum poly_overleft (PG_FUNCTION_ARGS);
extern Datum poly_overright (PG_FUNCTION_ARGS);
extern Datum poly_recv (PG_FUNCTION_ARGS);
extern Datum poly_right (PG_FUNCTION_ARGS);
extern Datum poly_same (PG_FUNCTION_ARGS);
extern Datum poly_send (PG_FUNCTION_ARGS);
extern Datum box_poly (PG_FUNCTION_ARGS);
extern Datum path_poly (PG_FUNCTION_ARGS);
extern Datum circle_poly (PG_FUNCTION_ARGS);
extern Datum path_open (PG_FUNCTION_ARGS);
extern Datum bitposition (PG_FUNCTION_ARGS);
extern Datum byteapos (PG_FUNCTION_ARGS);
extern Datum positionjoinsel (PG_FUNCTION_ARGS);
extern Datum positionsel (PG_FUNCTION_ARGS);
extern Datum postgresql_fdw_validator (PG_FUNCTION_ARGS);
extern Datum pound_end (PG_FUNCTION_ARGS);
extern Datum pound_lextype (PG_FUNCTION_ARGS);
extern Datum pound_nexttoken (PG_FUNCTION_ARGS);
extern Datum pound_start (PG_FUNCTION_ARGS);
extern Datum gs_globalplancache_prepare_status (PG_FUNCTION_ARGS);
extern Datum prsd_end (PG_FUNCTION_ARGS);
extern Datum prsd_headline (PG_FUNCTION_ARGS);
extern Datum prsd_lextype (PG_FUNCTION_ARGS);
extern Datum prsd_nexttoken (PG_FUNCTION_ARGS);
extern Datum prsd_start (PG_FUNCTION_ARGS);
extern Datum psortbuild (PG_FUNCTION_ARGS);
extern Datum psortcanreturn (PG_FUNCTION_ARGS);
extern Datum psortcostestimate (PG_FUNCTION_ARGS);
extern Datum psortgetbitmap (PG_FUNCTION_ARGS);
extern Datum psortgettuple (PG_FUNCTION_ARGS);
extern Datum psortoptions (PG_FUNCTION_ARGS);
extern Datum pt_contained_circle (PG_FUNCTION_ARGS);
extern Datum pt_contained_poly (PG_FUNCTION_ARGS);
extern Datum pv_builtin_functions (PG_FUNCTION_ARGS);
extern Datum pv_compute_pool_workload (PG_FUNCTION_ARGS);
extern Datum pv_instance_time (PG_FUNCTION_ARGS);
extern Datum pv_os_run_info (PG_FUNCTION_ARGS);
extern Datum pv_session_memctx_detail (PG_FUNCTION_ARGS);
extern Datum pv_session_memory (PG_FUNCTION_ARGS);
extern Datum pv_session_memory_detail (PG_FUNCTION_ARGS);
extern Datum pv_session_stat (PG_FUNCTION_ARGS);
extern Datum pv_session_time (PG_FUNCTION_ARGS);
extern Datum pv_thread_memory_detail (PG_FUNCTION_ARGS);
extern Datum pv_total_memory_detail (PG_FUNCTION_ARGS);
extern Datum query_to_xml (PG_FUNCTION_ARGS);
extern Datum query_to_xml_and_xmlschema (PG_FUNCTION_ARGS);
extern Datum query_to_xmlschema (PG_FUNCTION_ARGS);
extern Datum tsquerytree (PG_FUNCTION_ARGS);
extern Datum quote_ident (PG_FUNCTION_ARGS);
extern Datum quote_literal (PG_FUNCTION_ARGS);
extern Datum quote_nullable (PG_FUNCTION_ARGS);
extern Datum radians (PG_FUNCTION_ARGS);
extern Datum circle_radius (PG_FUNCTION_ARGS);
extern Datum drandom (PG_FUNCTION_ARGS);
extern Datum range_adjacent (PG_FUNCTION_ARGS);
extern Datum range_after (PG_FUNCTION_ARGS);
extern Datum range_before (PG_FUNCTION_ARGS);
extern Datum range_cmp (PG_FUNCTION_ARGS);
extern Datum range_contained_by (PG_FUNCTION_ARGS);
extern Datum range_contains (PG_FUNCTION_ARGS);
extern Datum range_contains_elem (PG_FUNCTION_ARGS);
extern Datum range_eq (PG_FUNCTION_ARGS);
extern Datum range_ge (PG_FUNCTION_ARGS);
extern Datum range_gist_compress (PG_FUNCTION_ARGS);
extern Datum range_gist_consistent (PG_FUNCTION_ARGS);
extern Datum range_gist_decompress (PG_FUNCTION_ARGS);
extern Datum range_gist_penalty (PG_FUNCTION_ARGS);
extern Datum range_gist_picksplit (PG_FUNCTION_ARGS);
extern Datum range_gist_same (PG_FUNCTION_ARGS);
extern Datum range_gist_union (PG_FUNCTION_ARGS);
extern Datum range_gt (PG_FUNCTION_ARGS);
extern Datum range_in (PG_FUNCTION_ARGS);
extern Datum range_intersect (PG_FUNCTION_ARGS);
extern Datum range_le (PG_FUNCTION_ARGS);
extern Datum range_lt (PG_FUNCTION_ARGS);
extern Datum range_minus (PG_FUNCTION_ARGS);
extern Datum range_ne (PG_FUNCTION_ARGS);
extern Datum range_out (PG_FUNCTION_ARGS);
extern Datum range_overlaps (PG_FUNCTION_ARGS);
extern Datum range_overleft (PG_FUNCTION_ARGS);
extern Datum range_overright (PG_FUNCTION_ARGS);
extern Datum range_recv (PG_FUNCTION_ARGS);
extern Datum range_send (PG_FUNCTION_ARGS);
extern Datum range_typanalyze (PG_FUNCTION_ARGS);
extern Datum range_union (PG_FUNCTION_ARGS);
extern Datum window_rank (PG_FUNCTION_ARGS);
extern Datum rawcat (PG_FUNCTION_ARGS);
extern Datum rawcmp (PG_FUNCTION_ARGS);
extern Datum raweq (PG_FUNCTION_ARGS);
extern Datum rawge (PG_FUNCTION_ARGS);
extern Datum rawgt (PG_FUNCTION_ARGS);
extern Datum rawin (PG_FUNCTION_ARGS);
extern Datum rawle (PG_FUNCTION_ARGS);
extern Datum rawlike (PG_FUNCTION_ARGS);
extern Datum rawlt (PG_FUNCTION_ARGS);
extern Datum rawne (PG_FUNCTION_ARGS);
extern Datum rawnlike (PG_FUNCTION_ARGS);
extern Datum rawout (PG_FUNCTION_ARGS);
extern Datum rawtotext (PG_FUNCTION_ARGS);
extern Datum read_disable_conn_file (PG_FUNCTION_ARGS);
extern Datum record_eq (PG_FUNCTION_ARGS);
extern Datum record_ge (PG_FUNCTION_ARGS);
extern Datum record_gt (PG_FUNCTION_ARGS);
extern Datum record_in (PG_FUNCTION_ARGS);
extern Datum record_le (PG_FUNCTION_ARGS);
extern Datum record_lt (PG_FUNCTION_ARGS);
extern Datum record_ne (PG_FUNCTION_ARGS);
extern Datum record_out (PG_FUNCTION_ARGS);
extern Datum record_recv (PG_FUNCTION_ARGS);
extern Datum record_send (PG_FUNCTION_ARGS);
extern Datum text_regclass (PG_FUNCTION_ARGS);
extern Datum regclassin (PG_FUNCTION_ARGS);
extern Datum regclassout (PG_FUNCTION_ARGS);
extern Datum regclassrecv (PG_FUNCTION_ARGS);
extern Datum regclasssend (PG_FUNCTION_ARGS);
extern Datum regconfigin (PG_FUNCTION_ARGS);
extern Datum regconfigout (PG_FUNCTION_ARGS);
extern Datum regconfigrecv (PG_FUNCTION_ARGS);
extern Datum regconfigsend (PG_FUNCTION_ARGS);
extern Datum regdictionaryin (PG_FUNCTION_ARGS);
extern Datum regdictionaryout (PG_FUNCTION_ARGS);
extern Datum regdictionaryrecv (PG_FUNCTION_ARGS);
extern Datum regdictionarysend (PG_FUNCTION_ARGS);
extern Datum regexeqjoinsel (PG_FUNCTION_ARGS);
extern Datum regexeqsel (PG_FUNCTION_ARGS);
extern Datum regexnejoinsel (PG_FUNCTION_ARGS);
extern Datum regexnesel (PG_FUNCTION_ARGS);
extern Datum regexp_matches_no_flags (PG_FUNCTION_ARGS);
extern Datum regexp_matches (PG_FUNCTION_ARGS);
extern Datum textregexreplace_noopt (PG_FUNCTION_ARGS);
extern Datum textregexreplace (PG_FUNCTION_ARGS);
extern Datum regexp_split_to_array_no_flags (PG_FUNCTION_ARGS);
extern Datum regexp_split_to_array (PG_FUNCTION_ARGS);
extern Datum regexp_split_to_table_no_flags (PG_FUNCTION_ARGS);
extern Datum regexp_split_to_table (PG_FUNCTION_ARGS);
extern Datum regoperatorin (PG_FUNCTION_ARGS);
extern Datum regoperatorout (PG_FUNCTION_ARGS);
extern Datum regoperatorrecv (PG_FUNCTION_ARGS);
extern Datum regoperatorsend (PG_FUNCTION_ARGS);
extern Datum regoperin (PG_FUNCTION_ARGS);
extern Datum regoperout (PG_FUNCTION_ARGS);
extern Datum regoperrecv (PG_FUNCTION_ARGS);
extern Datum regopersend (PG_FUNCTION_ARGS);
extern Datum regprocedurein (PG_FUNCTION_ARGS);
extern Datum regprocedureout (PG_FUNCTION_ARGS);
extern Datum regprocedurerecv (PG_FUNCTION_ARGS);
extern Datum regproceduresend (PG_FUNCTION_ARGS);
extern Datum regprocin (PG_FUNCTION_ARGS);
extern Datum regprocout (PG_FUNCTION_ARGS);
extern Datum regprocrecv (PG_FUNCTION_ARGS);
extern Datum regprocsend (PG_FUNCTION_ARGS);
extern Datum regtypein (PG_FUNCTION_ARGS);
extern Datum regtypeout (PG_FUNCTION_ARGS);
extern Datum regtyperecv (PG_FUNCTION_ARGS);
extern Datum regtypesend (PG_FUNCTION_ARGS);
extern Datum interval_reltime (PG_FUNCTION_ARGS);
extern Datum reltimeeq (PG_FUNCTION_ARGS);
extern Datum reltimege (PG_FUNCTION_ARGS);
extern Datum reltimegt (PG_FUNCTION_ARGS);
extern Datum reltimein (PG_FUNCTION_ARGS);
extern Datum reltimele (PG_FUNCTION_ARGS);
extern Datum reltimelt (PG_FUNCTION_ARGS);
extern Datum reltimene (PG_FUNCTION_ARGS);
extern Datum reltimeout (PG_FUNCTION_ARGS);
extern Datum reltimerecv (PG_FUNCTION_ARGS);
extern Datum reltimesend (PG_FUNCTION_ARGS);
extern Datum remote_bgwriter_stat (PG_FUNCTION_ARGS);
extern Datum remote_ckpt_stat (PG_FUNCTION_ARGS);
extern Datum remote_double_write_stat (PG_FUNCTION_ARGS);
extern Datum remote_pagewriter_stat (PG_FUNCTION_ARGS);
extern Datum remote_recovery_status (PG_FUNCTION_ARGS);
extern Datum remote_redo_stat (PG_FUNCTION_ARGS);
extern Datum remote_rto_stat (PG_FUNCTION_ARGS);
extern Datum remote_single_flush_dw_stat (PG_FUNCTION_ARGS);
extern Datum repeat (PG_FUNCTION_ARGS);
extern Datum replace_text (PG_FUNCTION_ARGS);
extern Datum reset_unique_sql (PG_FUNCTION_ARGS);
extern Datum text_reverse (PG_FUNCTION_ARGS);
extern Datum text_right (PG_FUNCTION_ARGS);
extern Datum numeric_round (PG_FUNCTION_ARGS);
extern Datum window_row_number (PG_FUNCTION_ARGS);
extern Datum row_to_json (PG_FUNCTION_ARGS);
extern Datum row_to_json_pretty (PG_FUNCTION_ARGS);
extern Datum rpad (PG_FUNCTION_ARGS);
extern Datum rtrim (PG_FUNCTION_ARGS);
extern Datum rtrim1 (PG_FUNCTION_ARGS);
extern Datum scalargtjoinsel (PG_FUNCTION_ARGS);
extern Datum scalargtsel (PG_FUNCTION_ARGS);
extern Datum scalarltjoinsel (PG_FUNCTION_ARGS);
extern Datum scalarltsel (PG_FUNCTION_ARGS);
extern Datum schema_to_xml (PG_FUNCTION_ARGS);
extern Datum schema_to_xml_and_xmlschema (PG_FUNCTION_ARGS);
extern Datum schema_to_xmlschema (PG_FUNCTION_ARGS);
extern Datum session_user (PG_FUNCTION_ARGS);
extern Datum sessionid_to_pid (PG_FUNCTION_ARGS);
extern Datum byteaSetBit (PG_FUNCTION_ARGS);
extern Datum bitsetbit (PG_FUNCTION_ARGS);
extern Datum byteaSetByte (PG_FUNCTION_ARGS);
extern Datum set_config_by_name (PG_FUNCTION_ARGS);
extern Datum set_hashbucket_info (PG_FUNCTION_ARGS);
extern Datum inet_set_masklen (PG_FUNCTION_ARGS);
extern Datum cidr_set_masklen (PG_FUNCTION_ARGS);
extern Datum set_working_grand_version_num_manually (PG_FUNCTION_ARGS);
extern Datum setseed (PG_FUNCTION_ARGS);
extern Datum setval_oid (PG_FUNCTION_ARGS);
extern Datum setval3_oid (PG_FUNCTION_ARGS);
extern Datum tsvector_setweight (PG_FUNCTION_ARGS);
extern Datum shell_in (PG_FUNCTION_ARGS);
extern Datum shell_out (PG_FUNCTION_ARGS);
extern Datum numeric_sign (PG_FUNCTION_ARGS);
extern Datum dsign (PG_FUNCTION_ARGS);
extern Datum similar_escape (PG_FUNCTION_ARGS);
extern Datum dsin (PG_FUNCTION_ARGS);
extern Datum point_slope (PG_FUNCTION_ARGS);
extern Datum smalldatetime_cmp (PG_FUNCTION_ARGS);
extern Datum smalldatetime_eq (PG_FUNCTION_ARGS);
extern Datum smalldatetime_ge (PG_FUNCTION_ARGS);
extern Datum smalldatetime_gt (PG_FUNCTION_ARGS);
extern Datum smalldatetime_hash (PG_FUNCTION_ARGS);
extern Datum smalldatetime_in (PG_FUNCTION_ARGS);
extern Datum smalldatetime_larger (PG_FUNCTION_ARGS);
extern Datum smalldatetime_le (PG_FUNCTION_ARGS);
extern Datum smalldatetime_lt (PG_FUNCTION_ARGS);
extern Datum smalldatetime_ne (PG_FUNCTION_ARGS);
extern Datum smalldatetime_out (PG_FUNCTION_ARGS);
extern Datum smalldatetime_recv (PG_FUNCTION_ARGS);
extern Datum smalldatetime_send (PG_FUNCTION_ARGS);
extern Datum smalldatetime_smaller (PG_FUNCTION_ARGS);
extern Datum smgreq (PG_FUNCTION_ARGS);
extern Datum smgrin (PG_FUNCTION_ARGS);
extern Datum smgrne (PG_FUNCTION_ARGS);
extern Datum smgrout (PG_FUNCTION_ARGS);
extern Datum spg_kd_choose (PG_FUNCTION_ARGS);
extern Datum spg_kd_config (PG_FUNCTION_ARGS);
extern Datum spg_kd_inner_consistent (PG_FUNCTION_ARGS);
extern Datum spg_kd_picksplit (PG_FUNCTION_ARGS);
extern Datum spg_quad_choose (PG_FUNCTION_ARGS);
extern Datum spg_quad_config (PG_FUNCTION_ARGS);
extern Datum spg_quad_inner_consistent (PG_FUNCTION_ARGS);
extern Datum spg_quad_leaf_consistent (PG_FUNCTION_ARGS);
extern Datum spg_quad_picksplit (PG_FUNCTION_ARGS);
extern Datum spg_text_choose (PG_FUNCTION_ARGS);
extern Datum spg_text_config (PG_FUNCTION_ARGS);
extern Datum spg_text_inner_consistent (PG_FUNCTION_ARGS);
extern Datum spg_text_leaf_consistent (PG_FUNCTION_ARGS);
extern Datum spg_text_picksplit (PG_FUNCTION_ARGS);
extern Datum spgbeginscan (PG_FUNCTION_ARGS);
extern Datum spgbuild (PG_FUNCTION_ARGS);
extern Datum spgbuildempty (PG_FUNCTION_ARGS);
extern Datum spgbulkdelete (PG_FUNCTION_ARGS);
extern Datum spgcanreturn (PG_FUNCTION_ARGS);
extern Datum spgcostestimate (PG_FUNCTION_ARGS);
extern Datum spgendscan (PG_FUNCTION_ARGS);
extern Datum spggetbitmap (PG_FUNCTION_ARGS);
extern Datum spggettuple (PG_FUNCTION_ARGS);
extern Datum spginsert (PG_FUNCTION_ARGS);
extern Datum spgmarkpos (PG_FUNCTION_ARGS);
extern Datum spgmerge (PG_FUNCTION_ARGS);
extern Datum spgoptions (PG_FUNCTION_ARGS);
extern Datum spgrescan (PG_FUNCTION_ARGS);
extern Datum spgrestrpos (PG_FUNCTION_ARGS);
extern Datum spgvacuumcleanup (PG_FUNCTION_ARGS);
extern Datum split_text (PG_FUNCTION_ARGS);
extern Datum statement_detail_decode (PG_FUNCTION_ARGS);
extern Datum statement_timestamp (PG_FUNCTION_ARGS);
extern Datum string_agg_finalfn (PG_FUNCTION_ARGS);
extern Datum string_agg_transfn (PG_FUNCTION_ARGS);
extern Datum text_to_array_null (PG_FUNCTION_ARGS);
extern Datum text_to_array (PG_FUNCTION_ARGS);
extern Datum tsvector_strip (PG_FUNCTION_ARGS);
extern Datum submit_job_on_nodes (PG_FUNCTION_ARGS);
extern Datum text_substr_orclcompat (PG_FUNCTION_ARGS);
extern Datum text_substr_no_len_orclcompat (PG_FUNCTION_ARGS);
extern Datum bytea_substr_orclcompat (PG_FUNCTION_ARGS);
extern Datum bytea_substr_no_len_orclcompat (PG_FUNCTION_ARGS);
extern Datum substrb_with_lenth (PG_FUNCTION_ARGS);
extern Datum substrb_without_lenth (PG_FUNCTION_ARGS);
extern Datum text_substr_null (PG_FUNCTION_ARGS);
extern Datum text_substr_no_len_null (PG_FUNCTION_ARGS);
extern Datum bitsubstr (PG_FUNCTION_ARGS);
extern Datum bitsubstr_no_len (PG_FUNCTION_ARGS);
extern Datum bytea_substr (PG_FUNCTION_ARGS);
extern Datum bytea_substr_no_len (PG_FUNCTION_ARGS);
extern Datum textregexsubstr (PG_FUNCTION_ARGS);
extern Datum text_substr (PG_FUNCTION_ARGS);
extern Datum text_substr_no_len (PG_FUNCTION_ARGS);
extern Datum suppress_redundant_updates_trigger (PG_FUNCTION_ARGS);
extern Datum table_data_skewness (PG_FUNCTION_ARGS);
extern Datum all_table_distribution (PG_FUNCTION_ARGS);
extern Datum single_table_distribution (PG_FUNCTION_ARGS);
extern Datum table_to_xml (PG_FUNCTION_ARGS);
extern Datum table_to_xml_and_xmlschema (PG_FUNCTION_ARGS);
extern Datum table_to_xmlschema (PG_FUNCTION_ARGS);
extern Datum tablespace_oid_name (PG_FUNCTION_ARGS);
extern Datum dtan (PG_FUNCTION_ARGS);
extern Datum name_text (PG_FUNCTION_ARGS);
extern Datum network_show (PG_FUNCTION_ARGS);
extern Datum char_text (PG_FUNCTION_ARGS);
extern Datum xmltotext (PG_FUNCTION_ARGS);
extern Datum booltext (PG_FUNCTION_ARGS);
extern Datum text_date (PG_FUNCTION_ARGS);
extern Datum text_float4 (PG_FUNCTION_ARGS);
extern Datum text_float8 (PG_FUNCTION_ARGS);
extern Datum text_ge (PG_FUNCTION_ARGS);
extern Datum text_gt (PG_FUNCTION_ARGS);
extern Datum text_int1 (PG_FUNCTION_ARGS);
extern Datum text_int2 (PG_FUNCTION_ARGS);
extern Datum text_int4 (PG_FUNCTION_ARGS);
extern Datum text_int8 (PG_FUNCTION_ARGS);
extern Datum text_larger (PG_FUNCTION_ARGS);
extern Datum text_le (PG_FUNCTION_ARGS);
extern Datum text_lt (PG_FUNCTION_ARGS);
extern Datum text_numeric (PG_FUNCTION_ARGS);
extern Datum text_pattern_ge (PG_FUNCTION_ARGS);
extern Datum text_pattern_gt (PG_FUNCTION_ARGS);
extern Datum text_pattern_le (PG_FUNCTION_ARGS);
extern Datum text_pattern_lt (PG_FUNCTION_ARGS);
extern Datum text_smaller (PG_FUNCTION_ARGS);
extern Datum text_timestamp (PG_FUNCTION_ARGS);
extern Datum textcat (PG_FUNCTION_ARGS);
extern Datum texteq (PG_FUNCTION_ARGS);
extern Datum textin (PG_FUNCTION_ARGS);
extern Datum textne (PG_FUNCTION_ARGS);
extern Datum textout (PG_FUNCTION_ARGS);
extern Datum textrecv (PG_FUNCTION_ARGS);
extern Datum textsend (PG_FUNCTION_ARGS);
extern Datum thesaurus_init (PG_FUNCTION_ARGS);
extern Datum thesaurus_lexize (PG_FUNCTION_ARGS);
extern Datum gs_threadpool_status (PG_FUNCTION_ARGS);
extern Datum tideq (PG_FUNCTION_ARGS);
extern Datum tidge (PG_FUNCTION_ARGS);
extern Datum tidgt (PG_FUNCTION_ARGS);
extern Datum tidin (PG_FUNCTION_ARGS);
extern Datum tidlarger (PG_FUNCTION_ARGS);
extern Datum tidle (PG_FUNCTION_ARGS);
extern Datum tidlt (PG_FUNCTION_ARGS);
extern Datum tidne (PG_FUNCTION_ARGS);
extern Datum tidout (PG_FUNCTION_ARGS);
extern Datum tidrecv (PG_FUNCTION_ARGS);
extern Datum tidsend (PG_FUNCTION_ARGS);
extern Datum tidsmaller (PG_FUNCTION_ARGS);
extern Datum timestamp_time (PG_FUNCTION_ARGS);
extern Datum interval_time (PG_FUNCTION_ARGS);
extern Datum time_scale (PG_FUNCTION_ARGS);
extern Datum timestamptz_time (PG_FUNCTION_ARGS);
extern Datum timetz_time (PG_FUNCTION_ARGS);
extern Datum time_cmp (PG_FUNCTION_ARGS);
extern Datum time_eq (PG_FUNCTION_ARGS);
extern Datum time_ge (PG_FUNCTION_ARGS);
extern Datum time_gt (PG_FUNCTION_ARGS);
extern Datum time_hash (PG_FUNCTION_ARGS);
extern Datum time_in (PG_FUNCTION_ARGS);
extern Datum time_larger (PG_FUNCTION_ARGS);
extern Datum time_le (PG_FUNCTION_ARGS);
extern Datum time_lt (PG_FUNCTION_ARGS);
extern Datum time_mi_interval (PG_FUNCTION_ARGS);
extern Datum time_mi_time (PG_FUNCTION_ARGS);
extern Datum time_ne (PG_FUNCTION_ARGS);
extern Datum time_out (PG_FUNCTION_ARGS);
extern Datum time_pl_interval (PG_FUNCTION_ARGS);
extern Datum time_recv (PG_FUNCTION_ARGS);
extern Datum time_send (PG_FUNCTION_ARGS);
extern Datum time_smaller (PG_FUNCTION_ARGS);
extern Datum time_transform (PG_FUNCTION_ARGS);
extern Datum timemi (PG_FUNCTION_ARGS);
extern Datum timenow (PG_FUNCTION_ARGS);
extern Datum timeofday (PG_FUNCTION_ARGS);
extern Datum timepl (PG_FUNCTION_ARGS);
extern Datum timestamp_scale (PG_FUNCTION_ARGS);
extern Datum abstime_timestamp (PG_FUNCTION_ARGS);
extern Datum date_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamp_cmp (PG_FUNCTION_ARGS);
extern Datum timestamp_cmp_date (PG_FUNCTION_ARGS);
extern Datum timestamp_cmp_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_diff (PG_FUNCTION_ARGS);
extern Datum timestamp_eq (PG_FUNCTION_ARGS);
extern Datum timestamp_eq_date (PG_FUNCTION_ARGS);
extern Datum timestamp_eq_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_ge (PG_FUNCTION_ARGS);
extern Datum timestamp_ge_date (PG_FUNCTION_ARGS);
extern Datum timestamp_ge_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_gt (PG_FUNCTION_ARGS);
extern Datum timestamp_gt_date (PG_FUNCTION_ARGS);
extern Datum timestamp_gt_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_hash (PG_FUNCTION_ARGS);
extern Datum timestamp_in (PG_FUNCTION_ARGS);
extern Datum timestamp_larger (PG_FUNCTION_ARGS);
extern Datum timestamp_le (PG_FUNCTION_ARGS);
extern Datum timestamp_le_date (PG_FUNCTION_ARGS);
extern Datum timestamp_le_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum timestamp_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum timestamp_lt (PG_FUNCTION_ARGS);
extern Datum timestamp_lt_date (PG_FUNCTION_ARGS);
extern Datum timestamp_lt_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_mi (PG_FUNCTION_ARGS);
extern Datum timestamp_mi_interval (PG_FUNCTION_ARGS);
extern Datum timestamp_ne (PG_FUNCTION_ARGS);
extern Datum timestamp_ne_date (PG_FUNCTION_ARGS);
extern Datum timestamp_ne_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamp_out (PG_FUNCTION_ARGS);
extern Datum timestamp_pl_interval (PG_FUNCTION_ARGS);
extern Datum timestamp_recv (PG_FUNCTION_ARGS);
extern Datum timestamp_send (PG_FUNCTION_ARGS);
extern Datum timestamp_smaller (PG_FUNCTION_ARGS);
extern Datum timestamp_sortsupport (PG_FUNCTION_ARGS);
extern Datum timestamp_text (PG_FUNCTION_ARGS);
extern Datum timestamp_transform (PG_FUNCTION_ARGS);
extern Datum timestamp_varchar (PG_FUNCTION_ARGS);
extern Datum timestamptypmodin (PG_FUNCTION_ARGS);
extern Datum timestamptypmodout (PG_FUNCTION_ARGS);
extern Datum abstime_timestamptz (PG_FUNCTION_ARGS);
extern Datum date_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamptz_scale (PG_FUNCTION_ARGS);
extern Datum timestamp_timestamptz (PG_FUNCTION_ARGS);
extern Datum timestamptz_cmp_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_cmp_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_eq_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_eq_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_ge_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_ge_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_gt_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_gt_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_in (PG_FUNCTION_ARGS);
extern Datum timestamptz_le_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_le_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_list_agg_noarg2_transfn (PG_FUNCTION_ARGS);
extern Datum timestamptz_list_agg_transfn (PG_FUNCTION_ARGS);
extern Datum timestamptz_lt_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_lt_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_mi_interval (PG_FUNCTION_ARGS);
extern Datum timestamptz_ne_date (PG_FUNCTION_ARGS);
extern Datum timestamptz_ne_timestamp (PG_FUNCTION_ARGS);
extern Datum timestamptz_out (PG_FUNCTION_ARGS);
extern Datum timestamptz_pl_interval (PG_FUNCTION_ARGS);
extern Datum timestamptz_recv (PG_FUNCTION_ARGS);
extern Datum timestamptz_send (PG_FUNCTION_ARGS);
extern Datum timestamptztypmodin (PG_FUNCTION_ARGS);
extern Datum timestamptztypmodout (PG_FUNCTION_ARGS);
extern Datum timestampzone_text (PG_FUNCTION_ARGS);
extern Datum timetypmodin (PG_FUNCTION_ARGS);
extern Datum timetypmodout (PG_FUNCTION_ARGS);
extern Datum timestamptz_timetz (PG_FUNCTION_ARGS);
extern Datum timetz_scale (PG_FUNCTION_ARGS);
extern Datum time_timetz (PG_FUNCTION_ARGS);
extern Datum timetz_cmp (PG_FUNCTION_ARGS);
extern Datum timetz_eq (PG_FUNCTION_ARGS);
extern Datum timetz_ge (PG_FUNCTION_ARGS);
extern Datum timetz_gt (PG_FUNCTION_ARGS);
extern Datum timetz_hash (PG_FUNCTION_ARGS);
extern Datum timetz_in (PG_FUNCTION_ARGS);
extern Datum timetz_larger (PG_FUNCTION_ARGS);
extern Datum timetz_le (PG_FUNCTION_ARGS);
extern Datum timetz_lt (PG_FUNCTION_ARGS);
extern Datum timetz_mi_interval (PG_FUNCTION_ARGS);
extern Datum timetz_ne (PG_FUNCTION_ARGS);
extern Datum timetz_out (PG_FUNCTION_ARGS);
extern Datum timetz_pl_interval (PG_FUNCTION_ARGS);
extern Datum timetz_recv (PG_FUNCTION_ARGS);
extern Datum timetz_send (PG_FUNCTION_ARGS);
extern Datum timetz_smaller (PG_FUNCTION_ARGS);
extern Datum timetztypmodin (PG_FUNCTION_ARGS);
extern Datum timetztypmodout (PG_FUNCTION_ARGS);
extern Datum timestamptz_izone (PG_FUNCTION_ARGS);
extern Datum timestamptz_zone (PG_FUNCTION_ARGS);
extern Datum timetz_zone (PG_FUNCTION_ARGS);
extern Datum timetz_izone (PG_FUNCTION_ARGS);
extern Datum timestamp_zone (PG_FUNCTION_ARGS);
extern Datum timestamp_izone (PG_FUNCTION_ARGS);
extern Datum tintervalct (PG_FUNCTION_ARGS);
extern Datum tintervalend (PG_FUNCTION_ARGS);
extern Datum tintervaleq (PG_FUNCTION_ARGS);
extern Datum tintervalge (PG_FUNCTION_ARGS);
extern Datum tintervalgt (PG_FUNCTION_ARGS);
extern Datum tintervalin (PG_FUNCTION_ARGS);
extern Datum tintervalle (PG_FUNCTION_ARGS);
extern Datum tintervalleneq (PG_FUNCTION_ARGS);
extern Datum tintervallenge (PG_FUNCTION_ARGS);
extern Datum tintervallengt (PG_FUNCTION_ARGS);
extern Datum tintervallenle (PG_FUNCTION_ARGS);
extern Datum tintervallenlt (PG_FUNCTION_ARGS);
extern Datum tintervallenne (PG_FUNCTION_ARGS);
extern Datum tintervallt (PG_FUNCTION_ARGS);
extern Datum tintervalne (PG_FUNCTION_ARGS);
extern Datum tintervalout (PG_FUNCTION_ARGS);
extern Datum tintervalov (PG_FUNCTION_ARGS);
extern Datum tintervalrecv (PG_FUNCTION_ARGS);
extern Datum tintervalrel (PG_FUNCTION_ARGS);
extern Datum tintervalsame (PG_FUNCTION_ARGS);
extern Datum tintervalsend (PG_FUNCTION_ARGS);
extern Datum tintervalstart (PG_FUNCTION_ARGS);
extern Datum to_ascii_default (PG_FUNCTION_ARGS);
extern Datum to_ascii_enc (PG_FUNCTION_ARGS);
extern Datum to_ascii_encname (PG_FUNCTION_ARGS);
extern Datum interval_to_char (PG_FUNCTION_ARGS);
extern Datum timestamptz_to_char (PG_FUNCTION_ARGS);
extern Datum numeric_to_char (PG_FUNCTION_ARGS);
extern Datum int4_to_char (PG_FUNCTION_ARGS);
extern Datum int8_to_char (PG_FUNCTION_ARGS);
extern Datum float4_to_char (PG_FUNCTION_ARGS);
extern Datum float8_to_char (PG_FUNCTION_ARGS);
extern Datum timestamp_to_char (PG_FUNCTION_ARGS);
extern Datum timestamp_to_char_default_format (PG_FUNCTION_ARGS);
extern Datum timestamptz_to_char_default_format (PG_FUNCTION_ARGS);
extern Datum to_timestamp (PG_FUNCTION_ARGS);
extern Datum to_date_default_format (PG_FUNCTION_ARGS);
extern Datum to_hex32 (PG_FUNCTION_ARGS);
extern Datum to_hex64 (PG_FUNCTION_ARGS);
extern Datum numeric_to_number (PG_FUNCTION_ARGS);
extern Datum to_timestamp_default_format (PG_FUNCTION_ARGS);
extern Datum to_tsquery_byid (PG_FUNCTION_ARGS);
extern Datum to_tsquery (PG_FUNCTION_ARGS);
extern Datum to_tsvector_byid (PG_FUNCTION_ARGS);
extern Datum to_tsvector (PG_FUNCTION_ARGS);
extern Datum total_cpu (PG_FUNCTION_ARGS);
extern Datum total_memory (PG_FUNCTION_ARGS);
extern Datum track_memory_context (PG_FUNCTION_ARGS);
extern Datum track_memory_context_detail (PG_FUNCTION_ARGS);
extern Datum track_model_train_opt (PG_FUNCTION_ARGS);
extern Datum translate (PG_FUNCTION_ARGS);
extern Datum trigger_in (PG_FUNCTION_ARGS);
extern Datum trigger_out (PG_FUNCTION_ARGS);
extern Datum macaddr_trunc (PG_FUNCTION_ARGS);
extern Datum numeric_trunc (PG_FUNCTION_ARGS);
extern Datum ts_headline_byid_opt (PG_FUNCTION_ARGS);
extern Datum ts_headline_byid (PG_FUNCTION_ARGS);
extern Datum ts_headline_opt (PG_FUNCTION_ARGS);
extern Datum ts_headline (PG_FUNCTION_ARGS);
extern Datum ts_lexize (PG_FUNCTION_ARGS);
extern Datum ts_match_qv (PG_FUNCTION_ARGS);
extern Datum ts_match_tq (PG_FUNCTION_ARGS);
extern Datum ts_match_tt (PG_FUNCTION_ARGS);
extern Datum ts_match_vq (PG_FUNCTION_ARGS);
extern Datum ts_parse_byid (PG_FUNCTION_ARGS);
extern Datum ts_parse_byname (PG_FUNCTION_ARGS);
extern Datum ts_rank_wttf (PG_FUNCTION_ARGS);
extern Datum ts_rank_wtt (PG_FUNCTION_ARGS);
extern Datum ts_rank_ttf (PG_FUNCTION_ARGS);
extern Datum ts_rank_tt (PG_FUNCTION_ARGS);
extern Datum ts_rankcd_wttf (PG_FUNCTION_ARGS);
extern Datum ts_rankcd_wtt (PG_FUNCTION_ARGS);
extern Datum ts_rankcd_ttf (PG_FUNCTION_ARGS);
extern Datum ts_rankcd_tt (PG_FUNCTION_ARGS);
extern Datum tsquery_rewrite (PG_FUNCTION_ARGS);
extern Datum tsquery_rewrite_query (PG_FUNCTION_ARGS);
extern Datum ts_stat1 (PG_FUNCTION_ARGS);
extern Datum ts_stat2 (PG_FUNCTION_ARGS);
extern Datum ts_token_type_byid (PG_FUNCTION_ARGS);
extern Datum ts_token_type_byname (PG_FUNCTION_ARGS);
extern Datum ts_typanalyze (PG_FUNCTION_ARGS);
extern Datum tsmatchjoinsel (PG_FUNCTION_ARGS);
extern Datum tsmatchsel (PG_FUNCTION_ARGS);
extern Datum tsq_mcontained (PG_FUNCTION_ARGS);
extern Datum tsq_mcontains (PG_FUNCTION_ARGS);
extern Datum tsquery_and (PG_FUNCTION_ARGS);
extern Datum tsquery_cmp (PG_FUNCTION_ARGS);
extern Datum tsquery_eq (PG_FUNCTION_ARGS);
extern Datum tsquery_ge (PG_FUNCTION_ARGS);
extern Datum tsquery_gt (PG_FUNCTION_ARGS);
extern Datum tsquery_le (PG_FUNCTION_ARGS);
extern Datum tsquery_lt (PG_FUNCTION_ARGS);
extern Datum tsquery_ne (PG_FUNCTION_ARGS);
extern Datum tsquery_not (PG_FUNCTION_ARGS);
extern Datum tsquery_or (PG_FUNCTION_ARGS);
extern Datum tsqueryin (PG_FUNCTION_ARGS);
extern Datum tsqueryout (PG_FUNCTION_ARGS);
extern Datum tsqueryrecv (PG_FUNCTION_ARGS);
extern Datum tsquerysend (PG_FUNCTION_ARGS);
extern Datum tsrange_subdiff (PG_FUNCTION_ARGS);
extern Datum tstzrange_subdiff (PG_FUNCTION_ARGS);
extern Datum tsvector_cmp (PG_FUNCTION_ARGS);
extern Datum tsvector_concat (PG_FUNCTION_ARGS);
extern Datum tsvector_eq (PG_FUNCTION_ARGS);
extern Datum tsvector_ge (PG_FUNCTION_ARGS);
extern Datum tsvector_gt (PG_FUNCTION_ARGS);
extern Datum tsvector_le (PG_FUNCTION_ARGS);
extern Datum tsvector_lt (PG_FUNCTION_ARGS);
extern Datum tsvector_ne (PG_FUNCTION_ARGS);
extern Datum tsvector_update_trigger_byid (PG_FUNCTION_ARGS);
extern Datum tsvector_update_trigger_bycolumn (PG_FUNCTION_ARGS);
extern Datum tsvectorin (PG_FUNCTION_ARGS);
extern Datum tsvectorout (PG_FUNCTION_ARGS);
extern Datum tsvectorrecv (PG_FUNCTION_ARGS);
extern Datum tsvectorsend (PG_FUNCTION_ARGS);
extern Datum txid_current (PG_FUNCTION_ARGS);
extern Datum txid_current_snapshot (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_in (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_out (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_recv (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_send (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_xip (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_xmax (PG_FUNCTION_ARGS);
extern Datum txid_snapshot_xmin (PG_FUNCTION_ARGS);
extern Datum txid_visible_in_snapshot (PG_FUNCTION_ARGS);
extern Datum unique_key_recheck (PG_FUNCTION_ARGS);
extern Datum unknownin (PG_FUNCTION_ARGS);
extern Datum unknownout (PG_FUNCTION_ARGS);
extern Datum unknownrecv (PG_FUNCTION_ARGS);
extern Datum unknownsend (PG_FUNCTION_ARGS);
extern Datum array_unnest (PG_FUNCTION_ARGS);
extern Datum syn_update_pg_job (PG_FUNCTION_ARGS);
extern Datum upper (PG_FUNCTION_ARGS);
extern Datum range_upper (PG_FUNCTION_ARGS);
extern Datum range_upper_inc (PG_FUNCTION_ARGS);
extern Datum range_upper_inf (PG_FUNCTION_ARGS);
extern Datum uuid_cmp (PG_FUNCTION_ARGS);
extern Datum uuid_eq (PG_FUNCTION_ARGS);
extern Datum uuid_ge (PG_FUNCTION_ARGS);
extern Datum uuid_gt (PG_FUNCTION_ARGS);
extern Datum uuid_hash (PG_FUNCTION_ARGS);
extern Datum uuid_in (PG_FUNCTION_ARGS);
extern Datum uuid_le (PG_FUNCTION_ARGS);
extern Datum uuid_lt (PG_FUNCTION_ARGS);
extern Datum uuid_ne (PG_FUNCTION_ARGS);
extern Datum uuid_out (PG_FUNCTION_ARGS);
extern Datum uuid_recv (PG_FUNCTION_ARGS);
extern Datum uuid_send (PG_FUNCTION_ARGS);
extern Datum varbit (PG_FUNCTION_ARGS);
extern Datum varbit_in (PG_FUNCTION_ARGS);
extern Datum varbit_out (PG_FUNCTION_ARGS);
extern Datum varbit_recv (PG_FUNCTION_ARGS);
extern Datum varbit_send (PG_FUNCTION_ARGS);
extern Datum varbit_transform (PG_FUNCTION_ARGS);
extern Datum varbittypmodin (PG_FUNCTION_ARGS);
extern Datum varbittypmodout (PG_FUNCTION_ARGS);
extern Datum varchar (PG_FUNCTION_ARGS);
extern Datum varchar_date (PG_FUNCTION_ARGS);
extern Datum varchar_float4 (PG_FUNCTION_ARGS);
extern Datum varchar_float8 (PG_FUNCTION_ARGS);
extern Datum varchar_int4 (PG_FUNCTION_ARGS);
extern Datum varchar_int8 (PG_FUNCTION_ARGS);
extern Datum varchar_numeric (PG_FUNCTION_ARGS);
extern Datum varchar_timestamp (PG_FUNCTION_ARGS);
extern Datum varchar_transform (PG_FUNCTION_ARGS);
extern Datum varcharin (PG_FUNCTION_ARGS);
extern Datum varcharout (PG_FUNCTION_ARGS);
extern Datum varcharrecv (PG_FUNCTION_ARGS);
extern Datum varcharsend (PG_FUNCTION_ARGS);
extern Datum varchartypmodin (PG_FUNCTION_ARGS);
extern Datum varchartypmodout (PG_FUNCTION_ARGS);
extern Datum pgsql_version (PG_FUNCTION_ARGS);
extern Datum void_in (PG_FUNCTION_ARGS);
extern Datum void_out (PG_FUNCTION_ARGS);
extern Datum void_recv (PG_FUNCTION_ARGS);
extern Datum void_send (PG_FUNCTION_ARGS);
extern Datum wdr_xdb_query (PG_FUNCTION_ARGS);
extern Datum box_width (PG_FUNCTION_ARGS);
extern Datum width_bucket_float8 (PG_FUNCTION_ARGS);
extern Datum width_bucket_numeric (PG_FUNCTION_ARGS);
extern Datum working_version_num (PG_FUNCTION_ARGS);
extern Datum xideq (PG_FUNCTION_ARGS);
extern Datum xideq4 (PG_FUNCTION_ARGS);
extern Datum xidin (PG_FUNCTION_ARGS);
extern Datum xidin4 (PG_FUNCTION_ARGS);
extern Datum xidlt (PG_FUNCTION_ARGS);
extern Datum xidlt4 (PG_FUNCTION_ARGS);
extern Datum xidout (PG_FUNCTION_ARGS);
extern Datum xidout4 (PG_FUNCTION_ARGS);
extern Datum xidrecv (PG_FUNCTION_ARGS);
extern Datum xidrecv4 (PG_FUNCTION_ARGS);
extern Datum xidsend (PG_FUNCTION_ARGS);
extern Datum xidsend4 (PG_FUNCTION_ARGS);
extern Datum texttoxml (PG_FUNCTION_ARGS);
extern Datum xml_in (PG_FUNCTION_ARGS);
extern Datum xml_is_well_formed (PG_FUNCTION_ARGS);
extern Datum xml_is_well_formed_content (PG_FUNCTION_ARGS);
extern Datum xml_is_well_formed_document (PG_FUNCTION_ARGS);
extern Datum xml_out (PG_FUNCTION_ARGS);
extern Datum xml_recv (PG_FUNCTION_ARGS);
extern Datum xml_send (PG_FUNCTION_ARGS);
extern Datum xmlcomment (PG_FUNCTION_ARGS);
extern Datum xmlconcat2 (PG_FUNCTION_ARGS);
extern Datum xmlexists (PG_FUNCTION_ARGS);
extern Datum xmlvalidate (PG_FUNCTION_ARGS);
extern Datum xpath (PG_FUNCTION_ARGS);
extern Datum xpath_exists (PG_FUNCTION_ARGS);
extern Datum zhprs_end (PG_FUNCTION_ARGS);
extern Datum zhprs_getlexeme (PG_FUNCTION_ARGS);
extern Datum zhprs_lextype (PG_FUNCTION_ARGS);
extern Datum zhprs_start (PG_FUNCTION_ARGS);

const FmgrBuiltin fmgr_builtins[] = {
  { 3958, "GPCPlanClean", 0, false, false, GPCPlanClean, 16 },
  { PGCHARTOENCODINGFUNCOID, "PG_char_to_encoding", 1, true, false, PG_char_to_encoding, 23 },
  { PGENCODINGTOCHARFUNCOID, "PG_encoding_to_char", 1, true, false, PG_encoding_to_char, 19 },
  { 1646, "RI_FKey_cascade_del", 0, true, false, RI_FKey_cascade_del, 2279 },
  { 1647, "RI_FKey_cascade_upd", 0, true, false, RI_FKey_cascade_upd, 2279 },
  { 1644, "RI_FKey_check_ins", 0, true, false, RI_FKey_check_ins, 2279 },
  { 1645, "RI_FKey_check_upd", 0, true, false, RI_FKey_check_upd, 2279 },
  { 1654, "RI_FKey_noaction_del", 0, true, false, RI_FKey_noaction_del, 2279 },
  { 1655, "RI_FKey_noaction_upd", 0, true, false, RI_FKey_noaction_upd, 2279 },
  { 1648, "RI_FKey_restrict_del", 0, true, false, RI_FKey_restrict_del, 2279 },
  { 1649, "RI_FKey_restrict_upd", 0, true, false, RI_FKey_restrict_upd, 2279 },
  { 1652, "RI_FKey_setdefault_del", 0, true, false, RI_FKey_setdefault_del, 2279 },
  { 1653, "RI_FKey_setdefault_upd", 0, true, false, RI_FKey_setdefault_upd, 2279 },
  { 1650, "RI_FKey_setnull_del", 0, true, false, RI_FKey_setnull_del, 2279 },
  { 1651, "RI_FKey_setnull_upd", 0, true, false, RI_FKey_setnull_upd, 2279 },
  { ABSTIME2DATEFUNCOID, "abstime_date", 1, true, false, abstime_date, 1082 },
  { 275, "abstime_finite", 1, true, false, abstime_finite, 16 },
  { ABSTIMETIMESTAMPFUNCOID, "abstime_timestamp", 1, true, false, abstime_timestamp, 1114 },
  { 1173, "abstime_timestamptz", 1, true, false, abstime_timestamptz, 1184 },
  { 251, "abstimeeq", 2, true, false, abstimeeq, 16 },
  { 256, "abstimege", 2, true, false, abstimege, 16 },
  { 254, "abstimegt", 2, true, false, abstimegt, 16 },
  { ABSTIMEINFUNCOID, "abstimein", 1, true, false, abstimein, 702 },
  { 255, "abstimele", 2, true, false, abstimele, 16 },
  { 253, "abstimelt", 2, true, false, abstimelt, 16 },
  { 252, "abstimene", 2, true, false, abstimene, 16 },
  { ABSTIMEOUTFUNCOID, "abstimeout", 1, true, false, abstimeout, 2275 },
  { 2462, "abstimerecv", 1, true, false, abstimerecv, 702 },
  { 2463, "abstimesend", 1, true, false, abstimesend, 17 },
  { 1037, "aclcontains", 2, true, false, aclcontains, 16 },
  { 3943, "acldefault_sql", 2, true, false, acldefault_sql, 1034 },
  { 1689, "aclexplode", 1, true, true, aclexplode, 2249 },
  { 1035, "aclinsert", 2, true, false, aclinsert, 1034 },
  { 1062, "aclitem_eq", 2, true, false, aclitem_eq, 16 },
  { 1031, "aclitemin", 1, true, false, aclitemin, 1033 },
  { 1032, "aclitemout", 1, true, false, aclitemout, 2275 },
  { 1036, "aclremove", 2, true, false, aclremove, 1034 },
  { 4074, "add_months", 2, true, false, add_months, 1114 },
  { ARRAYAGGFUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 2277 },
  { 2100, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2101, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2102, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2103, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2104, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2105, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2106, "aggregate_dummy", 1, false, false, aggregate_dummy, 1186 },
  { 5537, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2236, "aggregate_dummy", 1, false, false, aggregate_dummy, 21 },
  { 2238, "aggregate_dummy", 1, false, false, aggregate_dummy, 23 },
  { 2240, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { 2242, "aggregate_dummy", 1, false, false, aggregate_dummy, 1560 },
  { 5539, "aggregate_dummy", 1, false, false, aggregate_dummy, 5545 },
  { 2237, "aggregate_dummy", 1, false, false, aggregate_dummy, 21 },
  { 2239, "aggregate_dummy", 1, false, false, aggregate_dummy, 23 },
  { 2241, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { 2243, "aggregate_dummy", 1, false, false, aggregate_dummy, 1560 },
  { 5540, "aggregate_dummy", 1, false, false, aggregate_dummy, 5545 },
  { 2517, "aggregate_dummy", 1, false, false, aggregate_dummy, 16 },
  { 2518, "aggregate_dummy", 1, false, false, aggregate_dummy, 16 },
  { 4600, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2829, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { ANYCOUNTOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { COUNTOID, "aggregate_dummy", 0, false, false, aggregate_dummy, 20 },
  { 2827, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2828, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { EVERYFUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 16 },
  { 4366, "aggregate_dummy", 1, false, false, aggregate_dummy, 4301 },
  { 4380, "aggregate_dummy", 2, false, false, aggregate_dummy, 4301 },
  { 4381, "aggregate_dummy", 3, false, false, aggregate_dummy, 4301 },
  { 4382, "aggregate_dummy", 4, false, false, aggregate_dummy, 4301 },
  { 4383, "aggregate_dummy", 5, false, false, aggregate_dummy, 4301 },
  { 4367, "aggregate_dummy", 1, false, false, aggregate_dummy, 4301 },
  { LISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { LISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { INT2LISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { INT2LISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { INT4LISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { INT4LISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { INT8LISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { INT8LISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { FLOAT4LISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { FLOAT4LISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { FLOAT8LISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { FLOAT8LISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { NUMERICLISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { NUMERICLISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { DATELISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { DATELISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { TIMESTAMPLISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { TIMESTAMPLISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { TIMESTAMPTZLISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { TIMESTAMPTZLISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { INTERVALLISTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { INTERVALLISTAGGNOARG2FUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { 2050, "aggregate_dummy", 1, false, false, aggregate_dummy, 2277 },
  { 2115, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { 2116, "aggregate_dummy", 1, false, false, aggregate_dummy, 23 },
  { 2117, "aggregate_dummy", 1, false, false, aggregate_dummy, 21 },
  { 2118, "aggregate_dummy", 1, false, false, aggregate_dummy, 26 },
  { 2119, "aggregate_dummy", 1, false, false, aggregate_dummy, 700 },
  { 2120, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2121, "aggregate_dummy", 1, false, false, aggregate_dummy, 702 },
  { 2122, "aggregate_dummy", 1, false, false, aggregate_dummy, 1082 },
  { 2123, "aggregate_dummy", 1, false, false, aggregate_dummy, 1083 },
  { 2124, "aggregate_dummy", 1, false, false, aggregate_dummy, 1266 },
  { 2125, "aggregate_dummy", 1, false, false, aggregate_dummy, 790 },
  { 2126, "aggregate_dummy", 1, false, false, aggregate_dummy, 1114 },
  { 2127, "aggregate_dummy", 1, false, false, aggregate_dummy, 1184 },
  { 2128, "aggregate_dummy", 1, false, false, aggregate_dummy, 1186 },
  { 2129, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { 2130, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2244, "aggregate_dummy", 1, false, false, aggregate_dummy, 1042 },
  { 2797, "aggregate_dummy", 1, false, false, aggregate_dummy, 27 },
  { 3526, "aggregate_dummy", 1, false, false, aggregate_dummy, 3500 },
  { 5538, "aggregate_dummy", 1, false, false, aggregate_dummy, 5545 },
  { 9010, "aggregate_dummy", 1, false, false, aggregate_dummy, 9003 },
  { 5555, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 5556, "aggregate_dummy", 1, false, false, aggregate_dummy, 1186 },
  { 2051, "aggregate_dummy", 1, false, false, aggregate_dummy, 2277 },
  { 2131, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { 2132, "aggregate_dummy", 1, false, false, aggregate_dummy, 23 },
  { 2133, "aggregate_dummy", 1, false, false, aggregate_dummy, 21 },
  { 2134, "aggregate_dummy", 1, false, false, aggregate_dummy, 26 },
  { 2135, "aggregate_dummy", 1, false, false, aggregate_dummy, 700 },
  { 2136, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2137, "aggregate_dummy", 1, false, false, aggregate_dummy, 702 },
  { 2138, "aggregate_dummy", 1, false, false, aggregate_dummy, 1082 },
  { 2139, "aggregate_dummy", 1, false, false, aggregate_dummy, 1083 },
  { 2140, "aggregate_dummy", 1, false, false, aggregate_dummy, 1266 },
  { 2141, "aggregate_dummy", 1, false, false, aggregate_dummy, 790 },
  { 2142, "aggregate_dummy", 1, false, false, aggregate_dummy, 1114 },
  { 2143, "aggregate_dummy", 1, false, false, aggregate_dummy, 1184 },
  { 2144, "aggregate_dummy", 1, false, false, aggregate_dummy, 1186 },
  { 2145, "aggregate_dummy", 1, false, false, aggregate_dummy, 25 },
  { 2146, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2245, "aggregate_dummy", 1, false, false, aggregate_dummy, 1042 },
  { 2798, "aggregate_dummy", 1, false, false, aggregate_dummy, 27 },
  { 3527, "aggregate_dummy", 1, false, false, aggregate_dummy, 3500 },
  { 9009, "aggregate_dummy", 1, false, false, aggregate_dummy, 9003 },
  { MODEAGGFUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 2283 },
  { PERCENTILECONTAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 4454, "aggregate_dummy", 2, false, false, aggregate_dummy, 1186 },
  { 2822, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2823, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2818, "aggregate_dummy", 2, false, false, aggregate_dummy, 20 },
  { 2826, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2824, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2825, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2819, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2821, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2820, "aggregate_dummy", 2, false, false, aggregate_dummy, 701 },
  { 2154, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2155, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2156, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2157, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2158, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2159, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2724, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2725, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2726, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2727, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2728, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2729, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2712, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2713, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2714, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2715, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2716, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2717, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { STRINGAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 25 },
  { BYTEASTRINGAGGFUNCOID, "aggregate_dummy", 2, false, false, aggregate_dummy, 17 },
  { 2107, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2108, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { 2109, "aggregate_dummy", 1, false, false, aggregate_dummy, 20 },
  { 2110, "aggregate_dummy", 1, false, false, aggregate_dummy, 700 },
  { 2111, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2112, "aggregate_dummy", 1, false, false, aggregate_dummy, 790 },
  { 2113, "aggregate_dummy", 1, false, false, aggregate_dummy, 1186 },
  { 2114, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2718, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2719, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2720, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2721, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2722, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2723, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2641, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2642, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2643, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2644, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2645, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2646, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2148, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2149, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2150, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { 2151, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2152, "aggregate_dummy", 1, false, false, aggregate_dummy, 701 },
  { 2153, "aggregate_dummy", 1, false, false, aggregate_dummy, 1700 },
  { XMLAGGFUNCOID, "aggregate_dummy", 1, false, false, aggregate_dummy, 142 },
  { 4441, "all_table_distribution", 0, false, true, all_table_distribution, 2249 },
  { 2294, "any_in", 1, true, false, any_in, 2276 },
  { 2295, "any_out", 1, true, false, any_out, 2275 },
  { ANYARRAYINFUNCOID, "anyarray_in", 1, true, false, anyarray_in, 2277 },
  { 2297, "anyarray_out", 1, true, false, anyarray_out, 2275 },
  { 2502, "anyarray_recv", 1, true, false, anyarray_recv, 2277 },
  { 2503, "anyarray_send", 1, true, false, anyarray_send, 17 },
  { 2312, "anyelement_in", 1, true, false, anyelement_in, 2283 },
  { 2313, "anyelement_out", 1, true, false, anyelement_out, 2275 },
  { 3504, "anyenum_in", 1, true, false, anyenum_in, 3500 },
  { 3505, "anyenum_out", 1, true, false, anyenum_out, 2275 },
  { 2777, "anynonarray_in", 1, true, false, anynonarray_in, 2776 },
  { 2778, "anynonarray_out", 1, true, false, anynonarray_out, 2275 },
  { 3832, "anyrange_in", 3, true, false, anyrange_in, 3831 },
  { 3833, "anyrange_out", 1, true, false, anyrange_out, 2275 },
  { 140, "areajoinsel", 5, true, false, areajoinsel, 701 },
  { 139, "areasel", 4, true, false, areasel, 701 },
  { 2334, "array_agg_finalfn", 1, false, false, array_agg_finalfn, 2277 },
  { 2333, "array_agg_transfn", 2, false, false, array_agg_transfn, 2281 },
  { 383, "array_cat", 2, false, false, array_cat, 2277 },
  { 747, "array_dims", 1, true, false, array_dims, 25 },
  { 744, "array_eq", 2, true, false, array_eq, 16 },
  { 3179, "array_extend", 1, true, false, array_extend, 2278 },
  { 1193, "array_fill", 2, false, false, array_fill, 2277 },
  { 1286, "array_fill_with_lower_bounds", 3, false, false, array_fill_with_lower_bounds, 2277 },
  { 396, "array_ge", 2, true, false, array_ge, 16 },
  { 392, "array_gt", 2, true, false, array_gt, 16 },
  { 750, "array_in", 3, true, false, array_in, 2277 },
  { 515, "array_larger", 2, true, false, array_larger, 2277 },
  { 393, "array_le", 2, true, false, array_le, 16 },
  { 2176, "array_length", 2, true, false, array_length, 23 },
  { 2091, "array_lower", 2, true, false, array_lower, 23 },
  { 391, "array_lt", 2, true, false, array_lt, 16 },
  { 748, "array_ndims", 1, true, false, array_ndims, 23 },
  { 390, "array_ne", 2, true, false, array_ne, 16 },
  { 751, "array_out", 1, true, false, array_out, 2275 },
  { 378, "array_push", 2, false, false, array_push, 2277 },
  { 379, "array_push", 2, false, false, array_push, 2277 },
  { 2400, "array_recv", 3, true, false, array_recv, 2277 },
  { 2401, "array_send", 1, true, false, array_send, 17 },
  { 516, "array_smaller", 2, true, false, array_smaller, 2277 },
  { 3153, "array_to_json", 1, true, false, array_to_json, 114 },
  { 3154, "array_to_json_pretty", 2, true, false, array_to_json_pretty, 114 },
  { ARRAYTOSTRINGFUNCOID, "array_to_text", 2, true, false, array_to_text, 25 },
  { ARRAYTOSTRINGNULLFUNCOID, "array_to_text_null", 3, false, false, array_to_text_null, 25 },
  { 3816, "array_typanalyze", 1, true, false, array_typanalyze, 16 },
  { 2331, "array_unnest", 1, true, true, array_unnest, 2283 },
  { 2092, "array_upper", 2, true, false, array_upper, 23 },
  { 2749, "arraycontained", 2, true, false, arraycontained, 16 },
  { 2748, "arraycontains", 2, true, false, arraycontains, 16 },
  { 3818, "arraycontjoinsel", 5, true, false, arraycontjoinsel, 701 },
  { 3817, "arraycontsel", 4, true, false, arraycontsel, 701 },
  { 2747, "arrayoverlap", 2, true, false, arrayoverlap, 16 },
  { 1620, "ascii", 1, true, false, ascii, 23 },
  { 3214, "bigint_tid", 1, true, false, bigint_tid, 27 },
  { 1947, "binary_decode", 2, true, false, binary_decode, 17 },
  { 1946, "binary_encode", 2, true, false, binary_encode, 25 },
  { 1685, "bit", 3, true, false, bit, 1560 },
  { 1673, "bit_and", 2, true, false, bit_and, 1560 },
  { 1564, "bit_in", 3, true, false, bit_in, 1560 },
  { 1674, "bit_or", 2, true, false, bit_or, 1560 },
  { 1565, "bit_out", 1, true, false, bit_out, 2275 },
  { 2456, "bit_recv", 3, true, false, bit_recv, 1560 },
  { 2457, "bit_send", 1, true, false, bit_send, 17 },
  { 1679, "bitcat", 2, true, false, bitcat, 1562 },
  { 1596, "bitcmp", 2, true, false, bitcmp, 23 },
  { 1672, "bitcmp", 2, true, false, bitcmp, 23 },
  { 1581, "biteq", 2, true, false, biteq, 16 },
  { 1666, "biteq", 2, true, false, biteq, 16 },
  { 1683, "bitfromint4", 2, true, false, bitfromint4, 1560 },
  { 2075, "bitfromint8", 2, true, false, bitfromint8, 1560 },
  { 1592, "bitge", 2, true, false, bitge, 16 },
  { 1668, "bitge", 2, true, false, bitge, 16 },
  { 3032, "bitgetbit", 2, true, false, bitgetbit, 23 },
  { 1593, "bitgt", 2, true, false, bitgt, 16 },
  { 1669, "bitgt", 2, true, false, bitgt, 16 },
  { 1594, "bitle", 2, true, false, bitle, 16 },
  { 1670, "bitle", 2, true, false, bitle, 16 },
  { 1681, "bitlength", 1, true, false, bitlength, 23 },
  { 1595, "bitlt", 2, true, false, bitlt, 16 },
  { 1671, "bitlt", 2, true, false, bitlt, 16 },
  { 1582, "bitne", 2, true, false, bitne, 16 },
  { 1667, "bitne", 2, true, false, bitne, 16 },
  { 1676, "bitnot", 1, true, false, bitnot, 1560 },
  { 1682, "bitoctetlength", 1, true, false, bitoctetlength, 23 },
  { 3030, "bitoverlay", 4, true, false, bitoverlay, 1560 },
  { 3031, "bitoverlay_no_len", 3, true, false, bitoverlay_no_len, 1560 },
  { BITPOSITIONFUNCOID, "bitposition", 2, true, false, bitposition, 23 },
  { 3033, "bitsetbit", 3, true, false, bitsetbit, 1560 },
  { 1677, "bitshiftleft", 2, true, false, bitshiftleft, 1560 },
  { 1678, "bitshiftright", 2, true, false, bitshiftright, 1560 },
  { BITSUBSTRINGFUNOID, "bitsubstr", 3, true, false, bitsubstr, 1560 },
  { BITSUBSTRINGNOLENFUNCOID, "bitsubstr_no_len", 2, true, false, bitsubstr_no_len, 1560 },
  { 1684, "bittoint4", 1, true, false, bittoint4, 23 },
  { 2076, "bittoint8", 1, true, false, bittoint8, 20 },
  { 2919, "bittypmodin", 1, true, false, bittypmodin, 23 },
  { 2920, "bittypmodout", 1, true, false, bittypmodout, 2275 },
  { 1675, "bitxor", 2, true, false, bitxor, 1560 },
  { 5534, "bool_int1", 1, true, false, bool_int1, 5545 },
  { 3181, "bool_int2", 1, true, false, bool_int2, 21 },
  { 2558, "bool_int4", 1, true, false, bool_int4, 23 },
  { 3178, "bool_int8", 1, true, false, bool_int8, 20 },
  { 2515, "booland_statefunc", 2, true, false, booland_statefunc, 16 },
  { 60, "booleq", 2, true, false, booleq, 16 },
  { 1692, "boolge", 2, true, false, boolge, 16 },
  { 57, "boolgt", 2, true, false, boolgt, 16 },
  { 1242, "boolin", 1, true, false, boolin, 16 },
  { 1691, "boolle", 2, true, false, boolle, 16 },
  { 56, "boollt", 2, true, false, boollt, 16 },
  { 84, "boolne", 2, true, false, boolne, 16 },
  { 2516, "boolor_statefunc", 2, true, false, boolor_statefunc, 16 },
  { 1243, "boolout", 1, true, false, boolout, 2275 },
  { 2436, "boolrecv", 1, true, false, boolrecv, 16 },
  { 2437, "boolsend", 1, true, false, boolsend, 17 },
  { 2971, "booltext", 1, true, false, booltext, 25 },
  { 2565, "box_above", 2, true, false, box_above, 16 },
  { 115, "box_above_eq", 2, true, false, box_above_eq, 16 },
  { 1422, "box_add", 2, true, false, box_add, 603 },
  { 975, "box_area", 1, true, false, box_area, 701 },
  { 2562, "box_below", 2, true, false, box_below, 16 },
  { 116, "box_below_eq", 2, true, false, box_below_eq, 16 },
  { 138, "box_center", 1, true, false, box_center, 600 },
  { 1542, "box_center", 1, true, false, box_center, 600 },
  { 1534, "box_center", 1, true, false, box_center, 600 },
  { 1479, "box_circle", 1, true, false, box_circle, 718 },
  { 187, "box_contain", 2, true, false, box_contain, 16 },
  { 193, "box_contain_pt", 2, true, false, box_contain_pt, 16 },
  { 192, "box_contained", 2, true, false, box_contained, 16 },
  { 981, "box_diagonal", 1, true, false, box_diagonal, 601 },
  { 1541, "box_diagonal", 1, true, false, box_diagonal, 601 },
  { 978, "box_distance", 2, true, false, box_distance, 701 },
  { 1425, "box_div", 2, true, false, box_div, 603 },
  { 128, "box_eq", 2, true, false, box_eq, 16 },
  { 126, "box_ge", 2, true, false, box_ge, 16 },
  { 127, "box_gt", 2, true, false, box_gt, 16 },
  { 977, "box_height", 1, true, false, box_height, 701 },
  { 123, "box_in", 1, true, false, box_in, 603 },
  { 980, "box_intersect", 2, true, false, box_intersect, 603 },
  { 130, "box_le", 2, true, false, box_le, 16 },
  { 188, "box_left", 2, true, false, box_left, 16 },
  { 129, "box_lt", 2, true, false, box_lt, 16 },
  { 1424, "box_mul", 2, true, false, box_mul, 603 },
  { 124, "box_out", 1, true, false, box_out, 2275 },
  { 2564, "box_overabove", 2, true, false, box_overabove, 16 },
  { 2563, "box_overbelow", 2, true, false, box_overbelow, 16 },
  { 125, "box_overlap", 2, true, false, box_overlap, 16 },
  { 189, "box_overleft", 2, true, false, box_overleft, 16 },
  { 190, "box_overright", 2, true, false, box_overright, 16 },
  { 1448, "box_poly", 1, true, false, box_poly, 604 },
  { 2484, "box_recv", 1, true, false, box_recv, 603 },
  { 191, "box_right", 2, true, false, box_right, 16 },
  { 186, "box_same", 2, true, false, box_same, 16 },
  { 2485, "box_send", 1, true, false, box_send, 17 },
  { 1423, "box_sub", 2, true, false, box_sub, 603 },
  { 976, "box_width", 1, true, false, box_width, 701 },
  { 668, "bpchar", 3, true, false, bpchar, 1042 },
  { 4163, "bpchar_date", 1, true, false, bpchar_date, 1082 },
  { 4196, "bpchar_float4", 1, true, false, bpchar_float4, 700 },
  { 4197, "bpchar_float8", 1, true, false, bpchar_float8, 701 },
  { 4175, "bpchar_int4", 1, true, false, bpchar_int4, 23 },
  { 4195, "bpchar_int8", 1, true, false, bpchar_int8, 20 },
  { 1063, "bpchar_larger", 2, true, false, bpchar_larger, 1042 },
  { 409, "bpchar_name", 1, true, false, bpchar_name, 19 },
  { 4172, "bpchar_numeric", 1, true, false, bpchar_numeric, 1700 },
  { 2177, "bpchar_pattern_ge", 2, true, false, bpchar_pattern_ge, 16 },
  { 2178, "bpchar_pattern_gt", 2, true, false, bpchar_pattern_gt, 16 },
  { 2175, "bpchar_pattern_le", 2, true, false, bpchar_pattern_le, 16 },
  { 2174, "bpchar_pattern_lt", 2, true, false, bpchar_pattern_lt, 16 },
  { 1064, "bpchar_smaller", 2, true, false, bpchar_smaller, 1042 },
  { 3256, "bpchar_sortsupport", 1, true, false, bpchar_sortsupport, 2278 },
  { 4187, "bpchar_timestamp", 1, true, false, bpchar_timestamp, 1114 },
  { 1078, "bpcharcmp", 2, true, false, bpcharcmp, 23 },
  { 1048, "bpchareq", 2, true, false, bpchareq, 16 },
  { 1052, "bpcharge", 2, true, false, bpcharge, 16 },
  { 1051, "bpchargt", 2, true, false, bpchargt, 16 },
  { 1044, "bpcharin", 3, true, false, bpcharin, 1042 },
  { 1050, "bpcharle", 2, true, false, bpcharle, 16 },
  { 1372, "bpcharlen", 1, true, false, bpcharlen, 23 },
  { 1367, "bpcharlen", 1, true, false, bpcharlen, 23 },
  { BPLENFUNCOID, "bpcharlen", 1, true, false, bpcharlen, 23 },
  { BPOCTLENFUNCOID, "bpcharlenb", 1, true, false, bpcharlenb, 23 },
  { 1049, "bpcharlt", 2, true, false, bpcharlt, 16 },
  { 1053, "bpcharne", 2, true, false, bpcharne, 16 },
  { 1375, "bpcharoctetlen", 1, true, false, bpcharoctetlen, 23 },
  { 1045, "bpcharout", 1, true, false, bpcharout, 2275 },
  { 2430, "bpcharrecv", 3, true, false, bpcharrecv, 1042 },
  { 2431, "bpcharsend", 1, true, false, bpcharsend, 17 },
  { 2913, "bpchartypmodin", 1, true, false, bpchartypmodin, 23 },
  { 2914, "bpchartypmodout", 1, true, false, bpchartypmodout, 2275 },
  { 357, "btabstimecmp", 2, true, false, btabstimecmp, 23 },
  { 382, "btarraycmp", 2, true, false, btarraycmp, 23 },
  { 333, "btbeginscan", 3, true, false, btbeginscan, 2281 },
  { 1693, "btboolcmp", 2, true, false, btboolcmp, 23 },
  { 2180, "btbpchar_pattern_cmp", 2, true, false, btbpchar_pattern_cmp, 23 },
  { 338, "btbuild", 3, true, false, btbuild, 2281 },
  { 328, "btbuildempty", 1, true, false, btbuildempty, 2278 },
  { 332, "btbulkdelete", 4, true, false, btbulkdelete, 2281 },
  { 276, "btcanreturn", 1, true, false, btcanreturn, 16 },
  { 358, "btcharcmp", 2, true, false, btcharcmp, 23 },
  { 1268, "btcostestimate", 7, true, false, btcostestimate, 2278 },
  { 335, "btendscan", 1, true, false, btendscan, 2278 },
  { 2194, "btfloat48cmp", 2, true, false, btfloat48cmp, 23 },
  { 354, "btfloat4cmp", 2, true, false, btfloat4cmp, 23 },
  { 3132, "btfloat4sortsupport", 1, true, false, btfloat4sortsupport, 2278 },
  { 2195, "btfloat84cmp", 2, true, false, btfloat84cmp, 23 },
  { 355, "btfloat8cmp", 2, true, false, btfloat8cmp, 23 },
  { 3133, "btfloat8sortsupport", 1, true, false, btfloat8sortsupport, 2278 },
  { 636, "btgetbitmap", 2, true, false, btgetbitmap, 20 },
  { 330, "btgettuple", 2, true, false, btgettuple, 16 },
  { 331, "btinsert", 6, true, false, btinsert, 16 },
  { 2190, "btint24cmp", 2, true, false, btint24cmp, 23 },
  { 2192, "btint28cmp", 2, true, false, btint28cmp, 23 },
  { 350, "btint2cmp", 2, true, false, btint2cmp, 23 },
  { 3129, "btint2sortsupport", 1, true, false, btint2sortsupport, 2278 },
  { 2191, "btint42cmp", 2, true, false, btint42cmp, 23 },
  { 2188, "btint48cmp", 2, true, false, btint48cmp, 23 },
  { 351, "btint4cmp", 2, true, false, btint4cmp, 23 },
  { 3130, "btint4sortsupport", 1, true, false, btint4sortsupport, 2278 },
  { 2193, "btint82cmp", 2, true, false, btint82cmp, 23 },
  { 2189, "btint84cmp", 2, true, false, btint84cmp, 23 },
  { 842, "btint8cmp", 2, true, false, btint8cmp, 23 },
  { 3131, "btint8sortsupport", 1, true, false, btint8sortsupport, 2278 },
  { 336, "btmarkpos", 1, true, false, btmarkpos, 2278 },
  { 3184, "btmerge", 5, true, false, btmerge, 2278 },
  { 359, "btnamecmp", 2, true, false, btnamecmp, 23 },
  { 3135, "btnamesortsupport", 1, true, false, btnamesortsupport, 2278 },
  { 356, "btoidcmp", 2, true, false, btoidcmp, 23 },
  { 3134, "btoidsortsupport", 1, true, false, btoidsortsupport, 2278 },
  { 404, "btoidvectorcmp", 2, true, false, btoidvectorcmp, 23 },
  { 2785, "btoptions", 2, true, false, btoptions, 17 },
  { 2987, "btrecordcmp", 2, true, false, btrecordcmp, 23 },
  { 380, "btreltimecmp", 2, true, false, btreltimecmp, 23 },
  { 334, "btrescan", 5, true, false, btrescan, 2278 },
  { 337, "btrestrpos", 1, true, false, btrestrpos, 2278 },
  { BTRIMPARAFUNCOID, "btrim", 2, true, false, btrim, 25 },
  { BTRIMFUNCOID, "btrim1", 1, true, false, btrim1, 25 },
  { 2166, "bttext_pattern_cmp", 2, true, false, bttext_pattern_cmp, 23 },
  { 360, "bttextcmp", 2, true, false, bttextcmp, 23 },
  { 3255, "bttextsortsupport", 1, true, false, bttextsortsupport, 2278 },
  { 2794, "bttidcmp", 2, true, false, bttidcmp, 23 },
  { 381, "bttintervalcmp", 2, true, false, bttintervalcmp, 23 },
  { 972, "btvacuumcleanup", 2, true, false, btvacuumcleanup, 2281 },
  { 4136, "bucketabstime", 2, true, false, bucketabstime, 23 },
  { 4135, "bucketabstime", 2, true, false, bucketabstime, 23 },
  { 4146, "bucketbool", 2, true, false, bucketbool, 23 },
  { 4145, "bucketbool", 2, true, false, bucketbool, 23 },
  { 4107, "bucketbpchar", 2, true, false, bucketbpchar, 23 },
  { 4106, "bucketbpchar", 2, true, false, bucketbpchar, 23 },
  { 4142, "bucketbytea", 2, true, false, bucketbytea, 23 },
  { 4141, "bucketbytea", 2, true, false, bucketbytea, 23 },
  { 4140, "bucketcash", 2, true, false, bucketcash, 23 },
  { 4139, "bucketcash", 2, true, false, bucketcash, 23 },
  { 4109, "bucketchar", 2, true, false, bucketchar, 23 },
  { 4108, "bucketchar", 2, true, false, bucketchar, 23 },
  { 4113, "bucketdate", 2, true, false, bucketdate, 23 },
  { 4112, "bucketdate", 2, true, false, bucketdate, 23 },
  { 4156, "bucketfloat4", 2, true, false, bucketfloat4, 23 },
  { 4155, "bucketfloat4", 2, true, false, bucketfloat4, 23 },
  { 4158, "bucketfloat8", 2, true, false, bucketfloat8, 23 },
  { 4157, "bucketfloat8", 2, true, false, bucketfloat8, 23 },
  { 4125, "bucketint1", 2, true, false, bucketint1, 23 },
  { 4124, "bucketint1", 2, true, false, bucketint1, 23 },
  { 4103, "bucketint2", 2, true, false, bucketint2, 23 },
  { 4102, "bucketint2", 2, true, false, bucketint2, 23 },
  { 4150, "bucketint2vector", 2, true, false, bucketint2vector, 23 },
  { 4149, "bucketint2vector", 2, true, false, bucketint2vector, 23 },
  { 4101, "bucketint4", 2, true, false, bucketint4, 23 },
  { 4100, "bucketint4", 2, true, false, bucketint4, 23 },
  { 4105, "bucketint8", 2, true, false, bucketint8, 23 },
  { 4104, "bucketint8", 2, true, false, bucketint8, 23 },
  { 4121, "bucketinterval", 2, true, false, bucketinterval, 23 },
  { 4120, "bucketinterval", 2, true, false, bucketinterval, 23 },
  { 4148, "bucketname", 2, true, false, bucketname, 23 },
  { 4147, "bucketname", 2, true, false, bucketname, 23 },
  { 4132, "bucketnumeric", 2, true, false, bucketnumeric, 23 },
  { 4131, "bucketnumeric", 2, true, false, bucketnumeric, 23 },
  { 4129, "bucketnvarchar2", 2, true, false, bucketnvarchar2, 23 },
  { 4128, "bucketnvarchar2", 2, true, false, bucketnvarchar2, 23 },
  { 4134, "bucketoid", 2, true, false, bucketoid, 23 },
  { 4133, "bucketoid", 2, true, false, bucketoid, 23 },
  { 4154, "bucketoidvector", 2, true, false, bucketoidvector, 23 },
  { 4153, "bucketoidvector", 2, true, false, bucketoidvector, 23 },
  { 4144, "bucketraw", 2, true, false, bucketraw, 23 },
  { 4143, "bucketraw", 2, true, false, bucketraw, 23 },
  { 4138, "bucketreltime", 2, true, false, bucketreltime, 23 },
  { 4137, "bucketreltime", 2, true, false, bucketreltime, 23 },
  { 4127, "bucketsmalldatetime", 2, true, false, bucketsmalldatetime, 23 },
  { 4126, "bucketsmalldatetime", 2, true, false, bucketsmalldatetime, 23 },
  { 4152, "buckettext", 2, true, false, buckettext, 23 },
  { 4151, "buckettext", 2, true, false, buckettext, 23 },
  { 4115, "buckettime", 2, true, false, buckettime, 23 },
  { 4114, "buckettime", 2, true, false, buckettime, 23 },
  { 4117, "buckettimestamp", 2, true, false, buckettimestamp, 23 },
  { 4116, "buckettimestamp", 2, true, false, buckettimestamp, 23 },
  { 4123, "buckettimestamptz", 2, true, false, buckettimestamptz, 23 },
  { 4122, "buckettimestamptz", 2, true, false, buckettimestamptz, 23 },
  { 4119, "buckettimetz", 2, true, false, buckettimetz, 23 },
  { 4118, "buckettimetz", 2, true, false, buckettimetz, 23 },
  { 6001, "bucketuuid", 2, true, false, bucketuuid, 23 },
  { 6000, "bucketuuid", 2, true, false, bucketuuid, 23 },
  { 4111, "bucketvarchar", 2, true, false, bucketvarchar, 23 },
  { 4110, "bucketvarchar", 2, true, false, bucketvarchar, 23 },
  { 723, "byteaGetBit", 2, true, false, byteaGetBit, 23 },
  { 721, "byteaGetByte", 2, true, false, byteaGetByte, 23 },
  { 724, "byteaSetBit", 3, true, false, byteaSetBit, 17 },
  { 722, "byteaSetByte", 3, true, false, byteaSetByte, 17 },
  { 3452, "bytea_sortsupport", 1, true, false, bytea_sortsupport, 2278 },
  { 3544, "bytea_string_agg_finalfn", 1, false, false, bytea_string_agg_finalfn, 17 },
  { 3543, "bytea_string_agg_transfn", 3, false, false, bytea_string_agg_transfn, 2281 },
  { BYTEASUBSTRINGFUNCOID, "bytea_substr", 3, true, false, bytea_substr, 17 },
  { BYTEASUBSTRINGNOLENOID, "bytea_substr_no_len", 2, true, false, bytea_substr_no_len, 17 },
  { BYTEASUBSTRNOLENFUNCOID, "bytea_substr_no_len_orclcompat", 2, true, false, bytea_substr_no_len_orclcompat, 17 },
  { BYTEASUBSTRFUNCOID, "bytea_substr_orclcompat", 3, true, false, bytea_substr_orclcompat, 17 },
  { 2011, "byteacat", 2, true, false, byteacat, 17 },
  { 1954, "byteacmp", 2, true, false, byteacmp, 23 },
  { 1948, "byteaeq", 2, true, false, byteaeq, 16 },
  { 1952, "byteage", 2, true, false, byteage, 16 },
  { 1951, "byteagt", 2, true, false, byteagt, 16 },
  { 1244, "byteain", 1, true, false, byteain, 17 },
  { 1950, "byteale", 2, true, false, byteale, 16 },
  { 2005, "bytealike", 2, true, false, bytealike, 16 },
  { 2007, "bytealike", 2, true, false, bytealike, 16 },
  { 1949, "bytealt", 2, true, false, bytealt, 16 },
  { 1953, "byteane", 2, true, false, byteane, 16 },
  { 2006, "byteanlike", 2, true, false, byteanlike, 16 },
  { 2008, "byteanlike", 2, true, false, byteanlike, 16 },
  { 2010, "byteaoctetlen", 1, true, false, byteaoctetlen, 23 },
  { 720, "byteaoctetlen", 1, true, false, byteaoctetlen, 23 },
  { 31, "byteaout", 1, true, false, byteaout, 2275 },
  { 749, "byteaoverlay", 4, true, false, byteaoverlay, 17 },
  { 752, "byteaoverlay_no_len", 3, true, false, byteaoverlay_no_len, 17 },
  { BYTEAPOSFUNCOID, "byteapos", 2, true, false, byteapos, 23 },
  { 2412, "bytearecv", 1, true, false, bytearecv, 17 },
  { 4033, "bytearecv", 1, true, false, bytearecv, 86 },
  { 2413, "byteasend", 1, true, false, byteasend, 17 },
  { 4034, "byteasend", 1, true, false, byteasend, 17 },
  { 2015, "byteatrim", 2, true, false, byteatrim, 17 },
  { 4423, "byteawithoutordercolin", 1, true, false, byteawithoutordercolin, 4403 },
  { 4428, "byteawithoutordercolout", 1, true, false, byteawithoutordercolout, 2275 },
  { 4424, "byteawithoutordercolrecv", 1, true, false, byteawithoutordercolrecv, 17 },
  { 4425, "byteawithoutordercolsend", 1, true, false, byteawithoutordercolsend, 17 },
  { 4418, "byteawithoutorderwithequalcolcmp", 2, true, false, byteawithoutorderwithequalcolcmp, 23 },
  { 4463, "byteawithoutorderwithequalcolcmpbyteal", 2, true, false, byteawithoutorderwithequalcolcmpbyteal, 23 },
  { 4456, "byteawithoutorderwithequalcolcmpbytear", 2, true, false, byteawithoutorderwithequalcolcmpbytear, 23 },
  { 4412, "byteawithoutorderwithequalcoleq", 2, true, false, byteawithoutorderwithequalcoleq, 16 },
  { 4457, "byteawithoutorderwithequalcoleqbyteal", 2, true, false, byteawithoutorderwithequalcoleqbyteal, 16 },
  { 4447, "byteawithoutorderwithequalcoleqbytear", 2, true, false, byteawithoutorderwithequalcoleqbytear, 16 },
  { 4440, "byteawithoutorderwithequalcolin", 1, true, false, byteawithoutorderwithequalcolin, 4402 },
  { 4417, "byteawithoutorderwithequalcolne", 2, true, false, byteawithoutorderwithequalcolne, 16 },
  { 4561, "byteawithoutorderwithequalcolnebyteal", 2, true, false, byteawithoutorderwithequalcolnebyteal, 16 },
  { 4460, "byteawithoutorderwithequalcolnebytear", 2, true, false, byteawithoutorderwithequalcolnebytear, 16 },
  { 4446, "byteawithoutorderwithequalcolout", 1, true, false, byteawithoutorderwithequalcolout, 2275 },
  { 4444, "byteawithoutorderwithequalcolrecv", 1, true, false, byteawithoutorderwithequalcolrecv, 17 },
  { 4451, "byteawithoutorderwithequalcolsend", 1, true, false, byteawithoutorderwithequalcolsend, 17 },
  { 4449, "byteawithoutorderwithequalcoltypmodin", 1, true, false, byteawithoutorderwithequalcoltypmodin, 23 },
  { 4450, "byteawithoutorderwithequalcoltypmodout", 1, true, false, byteawithoutorderwithequalcoltypmodout, 2275 },
  { 5719, "capture_view_to_json", 3, false, false, capture_view_to_json, 23 },
  { 377, "cash_cmp", 2, true, false, cash_cmp, 23 },
  { 3822, "cash_div_cash", 2, true, false, cash_div_cash, 701 },
  { 847, "cash_div_flt4", 2, true, false, cash_div_flt4, 790 },
  { 897, "cash_div_flt8", 2, true, false, cash_div_flt8, 790 },
  { 3351, "cash_div_int1", 2, true, false, cash_div_int1, 790 },
  { 867, "cash_div_int2", 2, true, false, cash_div_int2, 790 },
  { 865, "cash_div_int4", 2, true, false, cash_div_int4, 790 },
  { 3345, "cash_div_int8", 2, true, false, cash_div_int8, 790 },
  { 888, "cash_eq", 2, true, false, cash_eq, 16 },
  { 893, "cash_ge", 2, true, false, cash_ge, 16 },
  { 892, "cash_gt", 2, true, false, cash_gt, 16 },
  { CASHINFUNCOID, "cash_in", 1, true, false, cash_in, 790 },
  { 891, "cash_le", 2, true, false, cash_le, 16 },
  { 890, "cash_lt", 2, true, false, cash_lt, 16 },
  { 895, "cash_mi", 2, true, false, cash_mi, 790 },
  { 846, "cash_mul_flt4", 2, true, false, cash_mul_flt4, 790 },
  { 896, "cash_mul_flt8", 2, true, false, cash_mul_flt8, 790 },
  { 3350, "cash_mul_int1", 2, true, false, cash_mul_int1, 790 },
  { 866, "cash_mul_int2", 2, true, false, cash_mul_int2, 790 },
  { 864, "cash_mul_int4", 2, true, false, cash_mul_int4, 790 },
  { 3344, "cash_mul_int8", 2, true, false, cash_mul_int8, 790 },
  { 889, "cash_ne", 2, true, false, cash_ne, 16 },
  { CASH2NUMERICFUNCOID, "cash_numeric", 1, true, false, cash_numeric, 1700 },
  { CASHOUTFUNCOID, "cash_out", 1, true, false, cash_out, 2275 },
  { 894, "cash_pl", 2, true, false, cash_pl, 790 },
  { 2492, "cash_recv", 1, true, false, cash_recv, 790 },
  { 2493, "cash_send", 1, true, false, cash_send, 17 },
  { 935, "cash_words", 1, true, false, cash_words, 25 },
  { 898, "cashlarger", 2, true, false, cashlarger, 790 },
  { 899, "cashsmaller", 2, true, false, cashsmaller, 790 },
  { 4240, "cbtreebuild", 3, true, false, cbtreebuild, 2281 },
  { 4245, "cbtreecanreturn", 1, true, false, cbtreecanreturn, 16 },
  { 4243, "cbtreecostestimate", 7, true, false, cbtreecostestimate, 2278 },
  { 4246, "cbtreegetbitmap", 2, true, false, cbtreegetbitmap, 20 },
  { 4242, "cbtreegettuple", 2, true, false, cbtreegettuple, 16 },
  { 4241, "cbtreeoptions", 2, true, false, cbtreeoptions, 17 },
  { 4400, "cginbuild", 3, true, false, cginbuild, 2281 },
  { 4401, "cgingetbitmap", 2, true, false, cgingetbitmap, 20 },
  { 860, "char_bpchar", 1, true, false, char_bpchar, 1042 },
  { 946, "char_text", 1, true, false, char_text, 25 },
  { 61, "chareq", 2, true, false, chareq, 16 },
  { 74, "charge", 2, true, false, charge, 16 },
  { 73, "chargt", 2, true, false, chargt, 16 },
  { 1245, "charin", 1, true, false, charin, 18 },
  { 72, "charle", 2, true, false, charle, 16 },
  { 1246, "charlt", 2, true, false, charlt, 16 },
  { 70, "charne", 2, true, false, charne, 16 },
  { 33, "charout", 1, true, false, charout, 2275 },
  { 2434, "charrecv", 1, true, false, charrecv, 18 },
  { 2435, "charsend", 1, true, false, charsend, 17 },
  { 77, "chartoi4", 1, true, false, chartoi4, 23 },
  { 3466, "check_engine_status", 2, true, false, check_engine_status, 25 },
  { 4601, "checksumtext_agg_transfn", 2, false, false, checksumtext_agg_transfn, 1700 },
  { 1621, "chr", 1, true, false, chr, 25 },
  { 69, "cideq", 2, true, false, cideq, 16 },
  { 52, "cidin", 1, true, false, cidin, 29 },
  { 53, "cidout", 1, true, false, cidout, 2275 },
  { 599, "cidr_abbrev", 1, true, false, cidr_abbrev, 25 },
  { 1267, "cidr_in", 1, true, false, cidr_in, 650 },
  { 1427, "cidr_out", 1, true, false, cidr_out, 2275 },
  { 2498, "cidr_recv", 1, true, false, cidr_recv, 650 },
  { 2499, "cidr_send", 1, true, false, cidr_send, 17 },
  { 635, "cidr_set_masklen", 2, true, false, cidr_set_masklen, 650 },
  { 2442, "cidrecv", 1, true, false, cidrecv, 29 },
  { 2443, "cidsend", 1, true, false, cidsend, 17 },
  { 1461, "circle_above", 2, true, false, circle_above, 16 },
  { 1146, "circle_add_pt", 2, true, false, circle_add_pt, 718 },
  { 1468, "circle_area", 1, true, false, circle_area, 701 },
  { 1460, "circle_below", 2, true, false, circle_below, 16 },
  { 1480, "circle_box", 1, true, false, circle_box, 603 },
  { 1543, "circle_center", 1, true, false, circle_center, 600 },
  { 1472, "circle_center", 1, true, false, circle_center, 600 },
  { 1416, "circle_center", 1, true, false, circle_center, 600 },
  { 1453, "circle_contain", 2, true, false, circle_contain, 16 },
  { 1477, "circle_contain_pt", 2, true, false, circle_contain_pt, 16 },
  { 1458, "circle_contained", 2, true, false, circle_contained, 16 },
  { 1469, "circle_diameter", 1, true, false, circle_diameter, 701 },
  { 1471, "circle_distance", 2, true, false, circle_distance, 701 },
  { 1149, "circle_div_pt", 2, true, false, circle_div_pt, 718 },
  { 1462, "circle_eq", 2, true, false, circle_eq, 16 },
  { 1467, "circle_ge", 2, true, false, circle_ge, 16 },
  { 1465, "circle_gt", 2, true, false, circle_gt, 16 },
  { 1450, "circle_in", 1, true, false, circle_in, 718 },
  { 1466, "circle_le", 2, true, false, circle_le, 16 },
  { 1454, "circle_left", 2, true, false, circle_left, 16 },
  { 1464, "circle_lt", 2, true, false, circle_lt, 16 },
  { 1148, "circle_mul_pt", 2, true, false, circle_mul_pt, 718 },
  { 1463, "circle_ne", 2, true, false, circle_ne, 16 },
  { 1451, "circle_out", 1, true, false, circle_out, 2275 },
  { 2588, "circle_overabove", 2, true, false, circle_overabove, 16 },
  { 2587, "circle_overbelow", 2, true, false, circle_overbelow, 16 },
  { 1459, "circle_overlap", 2, true, false, circle_overlap, 16 },
  { 1455, "circle_overleft", 2, true, false, circle_overleft, 16 },
  { 1456, "circle_overright", 2, true, false, circle_overright, 16 },
  { 1475, "circle_poly", 2, true, false, circle_poly, 604 },
  { 1470, "circle_radius", 1, true, false, circle_radius, 701 },
  { 2490, "circle_recv", 1, true, false, circle_recv, 718 },
  { 1457, "circle_right", 2, true, false, circle_right, 16 },
  { 1452, "circle_same", 2, true, false, circle_same, 16 },
  { 2491, "circle_send", 1, true, false, circle_send, 17 },
  { 1147, "circle_sub_pt", 2, true, false, circle_sub_pt, 718 },
  { 2649, "clock_timestamp", 0, true, false, clock_timestamp, 1184 },
  { 963, "close_lb", 2, true, false, close_lb, 600 },
  { 1488, "close_ls", 2, true, false, close_ls, 600 },
  { 1489, "close_lseg", 2, true, false, close_lseg, 600 },
  { 367, "close_pb", 2, true, false, close_pb, 600 },
  { 961, "close_pl", 2, true, false, close_pl, 600 },
  { 366, "close_ps", 2, true, false, close_ps, 600 },
  { 368, "close_sb", 2, true, false, close_sb, 600 },
  { 962, "close_sl", 2, true, false, close_sl, 600 },
  { 1982, "comm_check_connection_status", 0, true, true, comm_check_connection_status, 2249 },
  { 1991, "comm_client_info", 0, true, true, comm_client_info, 2249 },
  { 756, "complex_array_in", 3, true, false, complex_array_in, 2277 },
  { 1440, "construct_point", 2, true, false, construct_point, 600 },
  { 1303, "contjoinsel", 5, true, false, contjoinsel, 701 },
  { 1302, "contsel", 4, true, false, contsel, 701 },
  { 1473, "cr_circle", 2, true, false, cr_circle, 718 },
  { 5711, "create_wdr_snapshot", 0, true, false, create_wdr_snapshot, 25 },
  { 3215, "cstore_tid_out", 1, true, false, cstore_tid_out, 2275 },
  { 2292, "cstring_in", 1, true, false, cstring_in, 2275 },
  { 2293, "cstring_out", 1, true, false, cstring_out, 2275 },
  { 2500, "cstring_recv", 1, true, false, cstring_recv, 2275 },
  { 2501, "cstring_send", 1, true, false, cstring_send, 17 },
  { 3217, "cupointer_bigint", 1, true, false, cupointer_bigint, 20 },
  { CURRENTDATABASEFUNCOID, "current_database", 0, true, false, current_database, 19 },
  { 817, "current_query", 0, false, false, current_query, 25 },
  { CURRENTSCHEMAFUNCOID, "current_schema", 0, true, false, current_schema, 19 },
  { 1403, "current_schemas", 1, true, false, current_schemas, 1003 },
  { CURRENTUSERFUNCOID, "current_user", 0, true, false, current_user, 19 },
  { GETPGUSERNAMEFUNCOID, "current_user", 0, true, false, current_user, 19 },
  { 1294, "currtid_byrelname", 2, true, false, currtid_byrelname, 27 },
  { 1293, "currtid_byreloid", 2, true, false, currtid_byreloid, 27 },
  { CURRVALFUNCOID, "currval_oid", 1, true, false, currval_oid, 20 },
  { 2925, "cursor_to_xml", 5, false, false, cursor_to_xml, 142 },
  { 2928, "cursor_to_xmlschema", 4, false, false, cursor_to_xmlschema, 142 },
  { 1601, "dacos", 1, true, false, dacos, 701 },
  { ARCSINEFUNCOID, "dasin", 1, true, false, dasin, 701 },
  { 2936, "database_to_xml", 3, true, false, database_to_xml, 142 },
  { 2938, "database_to_xml_and_xmlschema", 3, true, false, database_to_xml_and_xmlschema, 142 },
  { 2937, "database_to_xmlschema", 3, true, false, database_to_xmlschema, 142 },
  { 8050, "datalength", 1, true, false, datalength, 23 },
  { 1602, "datan", 1, true, false, datan, 701 },
  { 1603, "datan2", 2, true, false, datan2, 701 },
  { 4160, "date_bpchar", 1, true, false, date_bpchar, 1042 },
  { 1092, "date_cmp", 2, true, false, date_cmp, 23 },
  { 2344, "date_cmp_timestamp", 2, true, false, date_cmp_timestamp, 23 },
  { DATECMPTIMESTAMPTZFUNCOID, "date_cmp_timestamptz", 2, true, false, date_cmp_timestamptz, 23 },
  { 1086, "date_eq", 2, true, false, date_eq, 16 },
  { 2340, "date_eq_timestamp", 2, true, false, date_eq_timestamp, 16 },
  { DATEEQTIMESTAMPTZFUNCOID, "date_eq_timestamptz", 2, true, false, date_eq_timestamptz, 16 },
  { 1373, "date_finite", 1, true, false, date_finite, 16 },
  { 1090, "date_ge", 2, true, false, date_ge, 16 },
  { 2342, "date_ge_timestamp", 2, true, false, date_ge_timestamp, 16 },
  { DATEGETIMESTAMPTZFUNCOID, "date_ge_timestamptz", 2, true, false, date_ge_timestamptz, 16 },
  { 1089, "date_gt", 2, true, false, date_gt, 16 },
  { 2341, "date_gt_timestamp", 2, true, false, date_gt_timestamp, 16 },
  { DATEGTTIMESTAMPTZFUNCOID, "date_gt_timestamptz", 2, true, false, date_gt_timestamptz, 16 },
  { DATEINFUNCOID, "date_in", 1, true, false, date_in, 1082 },
  { 1138, "date_larger", 2, true, false, date_larger, 1082 },
  { 1088, "date_le", 2, true, false, date_le, 16 },
  { 2339, "date_le_timestamp", 2, true, false, date_le_timestamp, 16 },
  { DATELETIMESTAMPTZFUNCOID, "date_le_timestamptz", 2, true, false, date_le_timestamptz, 16 },
  { 3581, "date_list_agg_noarg2_transfn", 2, false, false, date_list_agg_noarg2_transfn, 2281 },
  { 3579, "date_list_agg_transfn", 3, false, false, date_list_agg_transfn, 2281 },
  { 1087, "date_lt", 2, true, false, date_lt, 16 },
  { 2338, "date_lt_timestamp", 2, true, false, date_lt_timestamp, 16 },
  { DATELTTIMESTAMPTZFUNCOID, "date_lt_timestamptz", 2, true, false, date_lt_timestamptz, 16 },
  { 1140, "date_mi", 2, true, false, date_mi, 23 },
  { 2072, "date_mi_interval", 2, true, false, date_mi_interval, 1114 },
  { 1142, "date_mii", 2, true, false, date_mii, 1082 },
  { 1091, "date_ne", 2, true, false, date_ne, 16 },
  { 2343, "date_ne_timestamp", 2, true, false, date_ne_timestamp, 16 },
  { DATENETIMESTAMPTZFUNCOID, "date_ne_timestamptz", 2, true, false, date_ne_timestamptz, 16 },
  { DATEOUTFUNCOID, "date_out", 1, true, false, date_out, 2275 },
  { 2071, "date_pl_interval", 2, true, false, date_pl_interval, 1114 },
  { 1141, "date_pli", 2, true, false, date_pli, 1082 },
  { 2468, "date_recv", 1, true, false, date_recv, 1082 },
  { 2469, "date_send", 1, true, false, date_send, 17 },
  { 1139, "date_smaller", 2, true, false, date_smaller, 1082 },
  { 3136, "date_sortsupport", 1, true, false, date_sortsupport, 2278 },
  { 4159, "date_text", 1, true, false, date_text, 25 },
  { 2024, "date_timestamp", 1, true, false, date_timestamp, 1114 },
  { DATETIMESTAMPTZFUNCOID, "date_timestamptz", 1, true, false, date_timestamptz, 1184 },
  { 4161, "date_varchar", 1, true, false, date_varchar, 1043 },
  { 3915, "daterange_canonical", 1, true, false, daterange_canonical, 3912 },
  { 3925, "daterange_subdiff", 2, true, false, daterange_subdiff, 701 },
  { 1272, "datetime_timestamp", 2, true, false, datetime_timestamp, 1114 },
  { 2025, "datetime_timestamp", 2, true, false, datetime_timestamp, 1114 },
  { 1297, "datetimetz_timestamptz", 2, true, false, datetimetz_timestamptz, 1184 },
  { 1359, "datetimetz_timestamptz", 2, true, false, datetimetz_timestamptz, 1184 },
  { 1345, "dcbrt", 1, true, false, dcbrt, 701 },
  { 231, "dcbrt", 1, true, false, dcbrt, 701 },
  { 2308, "dceil", 1, true, false, dceil, 701 },
  { 2320, "dceil", 1, true, false, dceil, 701 },
  { COSINEFUNCOID, "dcos", 1, true, false, dcos, 701 },
  { 1607, "dcot", 1, true, false, dcot, 701 },
  { 1608, "degrees", 1, true, false, degrees, 701 },
  { 233, "dexp", 1, true, false, dexp, 701 },
  { 1347, "dexp", 1, true, false, dexp, 701 },
  { 2309, "dfloor", 1, true, false, dfloor, 701 },
  { 4221, "disable_conn", 3, false, false, disable_conn, 2278 },
  { 3731, "dispell_init", 1, true, false, dispell_init, 2281 },
  { 3732, "dispell_lexize", 4, true, false, dispell_lexize, 2281 },
  { 728, "dist_cpoly", 2, true, false, dist_cpoly, 701 },
  { 726, "dist_lb", 2, true, false, dist_lb, 701 },
  { 364, "dist_pb", 2, true, false, dist_pb, 701 },
  { 1476, "dist_pc", 2, true, false, dist_pc, 701 },
  { 725, "dist_pl", 2, true, false, dist_pl, 701 },
  { 371, "dist_ppath", 2, true, false, dist_ppath, 701 },
  { 363, "dist_ps", 2, true, false, dist_ps, 701 },
  { 365, "dist_sb", 2, true, false, dist_sb, 701 },
  { 727, "dist_sl", 2, true, false, dist_sl, 701 },
  { 234, "dlog1", 1, true, false, dlog1, 701 },
  { 1341, "dlog1", 1, true, false, dlog1, 701 },
  { 1339, "dlog10", 1, true, false, dlog10, 701 },
  { 1340, "dlog10", 1, true, false, dlog10, 701 },
  { 2597, "domain_in", 3, false, false, domain_in, 2276 },
  { 2598, "domain_recv", 3, false, false, domain_recv, 2276 },
  { 1610, "dpi", 0, true, false, dpi, 701 },
  { 232, "dpow", 2, true, false, dpow, 701 },
  { POWFUNCOID, "dpow", 2, true, false, dpow, 701 },
  { POWERFUNCOID, "dpow", 2, true, false, dpow, 701 },
  { RANDOMFUNCOID, "drandom", 0, true, false, drandom, 701 },
  { 228, "dround", 1, true, false, dround, 701 },
  { 1342, "dround", 1, true, false, dround, 701 },
  { 2310, "dsign", 1, true, false, dsign, 701 },
  { 3725, "dsimple_init", 1, true, false, dsimple_init, 2281 },
  { 3726, "dsimple_lexize", 4, true, false, dsimple_lexize, 2281 },
  { SINEFUNCOID, "dsin", 1, true, false, dsin, 701 },
  { 230, "dsqrt", 1, true, false, dsqrt, 701 },
  { SQRTFUNCOID, "dsqrt", 1, true, false, dsqrt, 701 },
  { 3728, "dsynonym_init", 1, true, false, dsynonym_init, 2281 },
  { 3729, "dsynonym_lexize", 4, true, false, dsynonym_lexize, 2281 },
  { 1606, "dtan", 1, true, false, dtan, 701 },
  { 312, "dtof", 1, true, false, dtof, 700 },
  { 237, "dtoi2", 1, true, false, dtoi2, 21 },
  { 317, "dtoi4", 1, true, false, dtoi4, 23 },
  { 483, "dtoi8", 1, true, false, dtoi8, 20 },
  { 229, "dtrunc", 1, true, false, dtrunc, 701 },
  { 1343, "dtrunc", 1, true, false, dtrunc, 701 },
  { 3860, "elem_contained_by_range", 2, true, false, elem_contained_by_range, 16 },
  { 3467, "encode_plan_node", 7, false, false, encode_plan_node, 25 },
  { 3514, "enum_cmp", 2, true, false, enum_cmp, 23 },
  { 3508, "enum_eq", 2, true, false, enum_eq, 16 },
  { 3528, "enum_first", 1, false, false, enum_first, 3500 },
  { 3513, "enum_ge", 2, true, false, enum_ge, 16 },
  { 3511, "enum_gt", 2, true, false, enum_gt, 16 },
  { 3506, "enum_in", 2, true, false, enum_in, 3500 },
  { 3525, "enum_larger", 2, true, false, enum_larger, 3500 },
  { 3529, "enum_last", 1, false, false, enum_last, 3500 },
  { 3512, "enum_le", 2, true, false, enum_le, 16 },
  { 3510, "enum_lt", 2, true, false, enum_lt, 16 },
  { 3509, "enum_ne", 2, true, false, enum_ne, 16 },
  { 3507, "enum_out", 1, true, false, enum_out, 2275 },
  { 3531, "enum_range_all", 1, false, false, enum_range_all, 2277 },
  { 3530, "enum_range_bounds", 2, false, false, enum_range_bounds, 2277 },
  { 3532, "enum_recv", 2, true, false, enum_recv, 3500 },
  { 3533, "enum_send", 1, true, false, enum_send, 17 },
  { 3524, "enum_smaller", 2, true, false, enum_smaller, 3500 },
  { 105, "eqjoinsel", 5, true, false, eqjoinsel, 701 },
  { EQSELRETURNOID, "eqsel", 4, true, false, eqsel, 701 },
  { ECHADOOPFUNCOID, "exec_hadoop_sql", 3, false, true, exec_hadoop_sql, 2249 },
  { ECEXTENSIONFUNCOID, "exec_on_extension", 2, false, true, exec_on_extension, 2249 },
  { 5530, "f4toi1", 1, true, false, f4toi1, 5545 },
  { 5532, "f8toi1", 1, true, false, f8toi1, 5545 },
  { 3116, "fdw_handler_in", 1, false, false, fdw_handler_in, 3115 },
  { 3117, "fdw_handler_out", 1, true, false, fdw_handler_out, 2275 },
  { 4207, "fenced_udf_process", 1, true, false, fenced_udf_process, 25 },
  { 280, "float48div", 2, true, false, float48div, 701 },
  { 299, "float48eq", 2, true, false, float48eq, 16 },
  { 304, "float48ge", 2, true, false, float48ge, 16 },
  { 303, "float48gt", 2, true, false, float48gt, 16 },
  { 302, "float48le", 2, true, false, float48le, 16 },
  { 301, "float48lt", 2, true, false, float48lt, 16 },
  { 282, "float48mi", 2, true, false, float48mi, 701 },
  { 279, "float48mul", 2, true, false, float48mul, 701 },
  { 300, "float48ne", 2, true, false, float48ne, 16 },
  { 281, "float48pl", 2, true, false, float48pl, 701 },
  { 208, "float4_accum", 2, true, false, float4_accum, 1022 },
  { 4070, "float4_bpchar", 1, true, false, float4_bpchar, 1042 },
  { 3569, "float4_list_agg_noarg2_transfn", 2, false, false, float4_list_agg_noarg2_transfn, 2281 },
  { 3567, "float4_list_agg_transfn", 3, false, false, float4_list_agg_transfn, 2281 },
  { 1742, "float4_numeric", 1, true, false, float4_numeric, 1700 },
  { 4169, "float4_text", 1, true, false, float4_text, 25 },
  { FLOAT4TOCHARFUNCOID, "float4_to_char", 2, true, false, float4_to_char, 25 },
  { 4184, "float4_varchar", 1, true, false, float4_varchar, 1043 },
  { 1394, "float4abs", 1, true, false, float4abs, 700 },
  { 207, "float4abs", 1, true, false, float4abs, 700 },
  { 203, "float4div", 2, true, false, float4div, 700 },
  { 287, "float4eq", 2, true, false, float4eq, 16 },
  { 292, "float4ge", 2, true, false, float4ge, 16 },
  { 291, "float4gt", 2, true, false, float4gt, 16 },
  { 200, "float4in", 1, true, false, float4in, 700 },
  { 209, "float4larger", 2, true, false, float4larger, 700 },
  { 290, "float4le", 2, true, false, float4le, 16 },
  { 289, "float4lt", 2, true, false, float4lt, 16 },
  { 205, "float4mi", 2, true, false, float4mi, 700 },
  { 202, "float4mul", 2, true, false, float4mul, 700 },
  { 288, "float4ne", 2, true, false, float4ne, 16 },
  { 201, "float4out", 1, true, false, float4out, 2275 },
  { 204, "float4pl", 2, true, false, float4pl, 700 },
  { 2424, "float4recv", 1, true, false, float4recv, 700 },
  { 2425, "float4send", 1, true, false, float4send, 17 },
  { 211, "float4smaller", 2, true, false, float4smaller, 700 },
  { 206, "float4um", 1, true, false, float4um, 700 },
  { 1913, "float4up", 1, true, false, float4up, 700 },
  { 284, "float84div", 2, true, false, float84div, 701 },
  { 305, "float84eq", 2, true, false, float84eq, 16 },
  { 310, "float84ge", 2, true, false, float84ge, 16 },
  { 309, "float84gt", 2, true, false, float84gt, 16 },
  { 308, "float84le", 2, true, false, float84le, 16 },
  { 307, "float84lt", 2, true, false, float84lt, 16 },
  { 286, "float84mi", 2, true, false, float84mi, 701 },
  { 283, "float84mul", 2, true, false, float84mul, 701 },
  { 306, "float84ne", 2, true, false, float84ne, 16 },
  { 285, "float84pl", 2, true, false, float84pl, 701 },
  { 222, "float8_accum", 2, true, false, float8_accum, 1022 },
  { 1830, "float8_avg", 1, true, false, float8_avg, 701 },
  { 4071, "float8_bpchar", 1, true, false, float8_bpchar, 1042 },
  { 2966, "float8_collect", 2, true, false, float8_collect, 1022 },
  { 2817, "float8_corr", 1, true, false, float8_corr, 701 },
  { 2815, "float8_covar_pop", 1, true, false, float8_covar_pop, 701 },
  { 2816, "float8_covar_samp", 1, true, false, float8_covar_samp, 701 },
  { 4229, "float8_interval", 1, true, false, float8_interval, 1186 },
  { 3573, "float8_list_agg_noarg2_transfn", 2, false, false, float8_list_agg_noarg2_transfn, 2281 },
  { 3571, "float8_list_agg_transfn", 3, false, false, float8_list_agg_transfn, 2281 },
  { 3171, "float8_multiply_text", 2, true, false, float8_multiply_text, 701 },
  { 1743, "float8_numeric", 1, true, false, float8_numeric, 1700 },
  { 2806, "float8_regr_accum", 3, true, false, float8_regr_accum, 1022 },
  { 2810, "float8_regr_avgx", 1, true, false, float8_regr_avgx, 701 },
  { 2811, "float8_regr_avgy", 1, true, false, float8_regr_avgy, 701 },
  { 2995, "float8_regr_collect", 2, true, false, float8_regr_collect, 1022 },
  { 2814, "float8_regr_intercept", 1, true, false, float8_regr_intercept, 701 },
  { 2812, "float8_regr_r2", 1, true, false, float8_regr_r2, 701 },
  { 2813, "float8_regr_slope", 1, true, false, float8_regr_slope, 701 },
  { 2807, "float8_regr_sxx", 1, true, false, float8_regr_sxx, 701 },
  { 2809, "float8_regr_sxy", 1, true, false, float8_regr_sxy, 701 },
  { 2808, "float8_regr_syy", 1, true, false, float8_regr_syy, 701 },
  { 2513, "float8_stddev_pop", 1, true, false, float8_stddev_pop, 701 },
  { 1832, "float8_stddev_samp", 1, true, false, float8_stddev_samp, 701 },
  { 4170, "float8_text", 1, true, false, float8_text, 25 },
  { FLOAT8TOCHARFUNCOID, "float8_to_char", 2, true, false, float8_to_char, 25 },
  { 2512, "float8_var_pop", 1, true, false, float8_var_pop, 701 },
  { 1831, "float8_var_samp", 1, true, false, float8_var_samp, 701 },
  { 4185, "float8_varchar", 1, true, false, float8_varchar, 1043 },
  { 1395, "float8abs", 1, true, false, float8abs, 701 },
  { 221, "float8abs", 1, true, false, float8abs, 701 },
  { 217, "float8div", 2, true, false, float8div, 701 },
  { 293, "float8eq", 2, true, false, float8eq, 16 },
  { 298, "float8ge", 2, true, false, float8ge, 16 },
  { 297, "float8gt", 2, true, false, float8gt, 16 },
  { 214, "float8in", 1, true, false, float8in, 701 },
  { 223, "float8larger", 2, true, false, float8larger, 701 },
  { 296, "float8le", 2, true, false, float8le, 16 },
  { 295, "float8lt", 2, true, false, float8lt, 16 },
  { 219, "float8mi", 2, true, false, float8mi, 701 },
  { 216, "float8mul", 2, true, false, float8mul, 701 },
  { 294, "float8ne", 2, true, false, float8ne, 16 },
  { 215, "float8out", 1, true, false, float8out, 2275 },
  { 218, "float8pl", 2, true, false, float8pl, 701 },
  { 2426, "float8recv", 1, true, false, float8recv, 701 },
  { 2427, "float8send", 1, true, false, float8send, 17 },
  { 224, "float8smaller", 2, true, false, float8smaller, 701 },
  { 220, "float8um", 1, true, false, float8um, 701 },
  { 1914, "float8up", 1, true, false, float8up, 701 },
  { 848, "flt4_mul_cash", 2, true, false, flt4_mul_cash, 790 },
  { 919, "flt8_mul_cash", 2, true, false, flt8_mul_cash, 790 },
  { 2247, "fmgr_c_validator", 1, true, false, fmgr_c_validator, 2278 },
  { 2246, "fmgr_internal_validator", 1, true, false, fmgr_internal_validator, 2278 },
  { 2248, "fmgr_sql_validator", 1, true, false, fmgr_sql_validator, 2278 },
  { 1081, "format_type", 2, false, false, format_type, 25 },
  { 311, "ftod", 1, true, false, ftod, 701 },
  { 238, "ftoi2", 1, true, false, ftoi2, 21 },
  { 319, "ftoi4", 1, true, false, ftoi4, 23 },
  { 653, "ftoi8", 1, true, false, ftoi8, 20 },
  { 1067, "generate_series_int4", 2, true, true, generate_series_int4, 23 },
  { 1069, "generate_series_int8", 2, true, true, generate_series_int8, 20 },
  { 1071, "generate_series_numeric", 2, true, true, generate_series_numeric, 1700 },
  { 1066, "generate_series_step_int4", 3, true, true, generate_series_step_int4, 23 },
  { 1068, "generate_series_step_int8", 3, true, true, generate_series_step_int8, 20 },
  { 1070, "generate_series_step_numeric", 3, true, true, generate_series_step_numeric, 1700 },
  { 938, "generate_series_timestamp", 3, true, true, generate_series_timestamp, 1114 },
  { GENERATESERIESFUNCOID, "generate_series_timestamptz", 3, true, true, generate_series_timestamptz, 1184 },
  { 1191, "generate_subscripts", 3, true, true, generate_subscripts, 23 },
  { 1192, "generate_subscripts_nodir", 2, true, true, generate_subscripts_nodir, 23 },
  { 5703, "generate_wdr_report", 5, false, false, generate_wdr_report, 25 },
  { 4047, "getDistributeKey", 1, true, false, getDistributeKey, 25 },
  { 3759, "get_current_ts_config", 0, true, false, get_current_ts_config, 3734 },
  { 4208, "get_db_source_datasize", 0, true, false, get_db_source_datasize, 20 },
  { 3814, "get_empty_blob", 0, true, false, get_empty_blob, 88 },
  { 5999, "get_gtm_lite_status", 0, true, true, get_gtm_lite_status, 2249 },
  { 3977, "get_hostname", 0, true, false, get_hostname, 25 },
  { 5712, "get_instr_rt_percentile", 1, false, true, get_instr_rt_percentile, 2249 },
  { 5702, "get_instr_unique_sql", 0, false, true, get_instr_unique_sql, 2249 },
  { 5706, "get_instr_user_login", 0, false, true, get_instr_user_login, 2249 },
  { 5705, "get_instr_wait_event", 1, false, true, get_instr_wait_event, 2249 },
  { 5000, "get_instr_workload_info", 1, false, true, get_instr_workload_info, 2249 },
  { 5721, "get_local_active_session", 1, false, true, get_local_active_session, 2249 },
  { 3332, "get_local_prepared_xact", 0, false, true, get_local_prepared_xact, 2249 },
  { 5708, "get_local_rel_iostat", 0, false, true, get_local_rel_iostat, 2249 },
  { 5720, "get_node_stat_reset_time", 0, true, false, get_node_stat_reset_time, 1184 },
  { 4200, "get_plan_seed", 0, true, false, get_plan_seed, 20 },
  { 3199, "get_prepared_pending_xid", 0, true, false, get_prepared_pending_xid, 25 },
  { 3333, "get_remote_prepared_xacts", 0, false, true, get_remote_prepared_xacts, 2249 },
  { 3953, "get_schema_oid", 1, true, false, get_schema_oid, 26 },
  { 5723, "get_wait_event_info", 1, false, true, get_wait_event_info, 2249 },
  { 4046, "getbucket", 2, true, false, getbucket, 23 },
  { 1039, "getdatabaseencoding", 0, true, false, getdatabaseencoding, 19 },
  { 3989, "gin_clean_pending_list", 1, true, false, gin_clean_pending_list, 20 },
  { 2700, "gin_cmp_prefix", 4, true, false, gin_cmp_prefix, 23 },
  { 3724, "gin_cmp_tslexeme", 2, true, false, gin_cmp_tslexeme, 23 },
  { 3657, "gin_extract_tsquery", 7, true, false, gin_extract_tsquery, 2281 },
  { 3087, "gin_extract_tsquery_5args", 5, true, false, gin_extract_tsquery_5args, 2281 },
  { 3656, "gin_extract_tsvector", 3, true, false, gin_extract_tsvector, 2281 },
  { 3077, "gin_extract_tsvector_2args", 2, true, false, gin_extract_tsvector_2args, 2281 },
  { 3658, "gin_tsquery_consistent", 8, true, false, gin_tsquery_consistent, 16 },
  { 3088, "gin_tsquery_consistent_6args", 6, true, false, gin_tsquery_consistent_6args, 16 },
  { 3921, "gin_tsquery_triconsistent", 7, true, false, gin_tsquery_triconsistent, 16 },
  { 2744, "ginarrayconsistent", 8, true, false, ginarrayconsistent, 16 },
  { 2743, "ginarrayextract", 3, true, false, ginarrayextract, 2281 },
  { 3076, "ginarrayextract_2args", 2, true, false, ginarrayextract_2args, 2281 },
  { 3920, "ginarraytriconsistent", 7, true, false, ginarraytriconsistent, 16 },
  { 2733, "ginbeginscan", 3, true, false, ginbeginscan, 2281 },
  { 2738, "ginbuild", 3, true, false, ginbuild, 2281 },
  { 325, "ginbuildempty", 1, true, false, ginbuildempty, 2278 },
  { 2739, "ginbulkdelete", 4, true, false, ginbulkdelete, 2281 },
  { 2741, "gincostestimate", 7, true, false, gincostestimate, 2278 },
  { 2735, "ginendscan", 1, true, false, ginendscan, 2278 },
  { 2731, "gingetbitmap", 2, true, false, gingetbitmap, 20 },
  { 2732, "gininsert", 6, true, false, gininsert, 16 },
  { 2736, "ginmarkpos", 1, true, false, ginmarkpos, 2278 },
  { 3186, "ginmerge", 5, true, false, ginmerge, 2281 },
  { 2788, "ginoptions", 2, true, false, ginoptions, 17 },
  { 2774, "ginqueryarrayextract", 7, true, false, ginqueryarrayextract, 2281 },
  { 2734, "ginrescan", 5, true, false, ginrescan, 2278 },
  { 2737, "ginrestrpos", 1, true, false, ginrestrpos, 2278 },
  { 2740, "ginvacuumcleanup", 2, true, false, ginvacuumcleanup, 2281 },
  { 2579, "gist_box_compress", 1, true, false, gist_box_compress, 2281 },
  { 2578, "gist_box_consistent", 5, true, false, gist_box_consistent, 16 },
  { 2580, "gist_box_decompress", 1, true, false, gist_box_decompress, 2281 },
  { 2581, "gist_box_penalty", 3, true, false, gist_box_penalty, 2281 },
  { 2582, "gist_box_picksplit", 2, true, false, gist_box_picksplit, 2281 },
  { 2584, "gist_box_same", 3, true, false, gist_box_same, 2281 },
  { 2583, "gist_box_union", 2, true, false, gist_box_union, 603 },
  { 2592, "gist_circle_compress", 1, true, false, gist_circle_compress, 2281 },
  { 2591, "gist_circle_consistent", 5, true, false, gist_circle_consistent, 16 },
  { 1030, "gist_point_compress", 1, true, false, gist_point_compress, 2281 },
  { 2179, "gist_point_consistent", 5, true, false, gist_point_consistent, 16 },
  { 3064, "gist_point_distance", 4, true, false, gist_point_distance, 701 },
  { 2586, "gist_poly_compress", 1, true, false, gist_poly_compress, 2281 },
  { 2585, "gist_poly_consistent", 5, true, false, gist_poly_consistent, 16 },
  { 777, "gistbeginscan", 3, true, false, gistbeginscan, 2281 },
  { 782, "gistbuild", 3, true, false, gistbuild, 2281 },
  { 326, "gistbuildempty", 1, true, false, gistbuildempty, 2278 },
  { 776, "gistbulkdelete", 4, true, false, gistbulkdelete, 2281 },
  { 772, "gistcostestimate", 7, true, false, gistcostestimate, 2278 },
  { 779, "gistendscan", 1, true, false, gistendscan, 2278 },
  { 638, "gistgetbitmap", 2, true, false, gistgetbitmap, 20 },
  { 774, "gistgettuple", 2, true, false, gistgettuple, 16 },
  { 775, "gistinsert", 6, true, false, gistinsert, 16 },
  { 780, "gistmarkpos", 1, true, false, gistmarkpos, 2278 },
  { 3187, "gistmerge", 5, true, false, gistmerge, 2281 },
  { 2787, "gistoptions", 2, true, false, gistoptions, 17 },
  { 778, "gistrescan", 5, true, false, gistrescan, 2278 },
  { 781, "gistrestrpos", 1, true, false, gistrestrpos, 2278 },
  { 2561, "gistvacuumcleanup", 2, true, false, gistvacuumcleanup, 2281 },
  { 3334, "global_clean_prepared_xacts", 2, true, false, global_clean_prepared_xacts, 16 },
  { 1992, "global_comm_get_client_info", 0, true, true, global_comm_get_client_info, 2249 },
  { 1988, "global_comm_get_recv_stream", 0, true, true, global_comm_get_recv_stream, 2249 },
  { 1989, "global_comm_get_send_stream", 0, true, true, global_comm_get_send_stream, 2249 },
  { 1990, "global_comm_get_status", 0, true, true, global_comm_get_status, 2249 },
  { 3900, "global_stat_clean_hotkeys", 0, true, true, global_stat_clean_hotkeys, 16 },
  { 3903, "global_stat_get_hotkeys_info", 0, true, true, global_stat_get_hotkeys_info, 2249 },
  { 4502, "gs_all_control_group_info", 0, true, true, gs_all_control_group_info, 2249 },
  { 4504, "gs_all_nodegroup_control_group_info", 1, true, true, gs_all_nodegroup_control_group_info, 2249 },
  { 4503, "gs_cgroup_map_ng_conf", 1, false, true, gs_cgroup_map_ng_conf, 16 },
  { 4500, "gs_control_group_info", 1, false, true, gs_control_group_info, 2249 },
  { 3465, "gs_decrypt_aes128", 2, false, false, gs_decrypt_aes128, 25 },
  { GSENCRYPTAES128FUNCOID, "gs_encrypt_aes128", 2, false, false, gs_encrypt_aes128, 25 },
  { 4210, "gs_extend_library", 2, false, false, gs_extend_library, 2275 },
  { 4000, "gs_fault_inject", 6, true, false, gs_fault_inject, 20 },
  { 9032, "gs_get_global_barrier_status", 0, true, false, gs_get_global_barrier_status, 2249 },
  { 9033, "gs_get_local_barrier_status", 0, true, false, gs_get_local_barrier_status, 2249 },
  { 6224, "gs_get_next_xid_csn", 1, true, true, gs_get_next_xid_csn, 2249 },
  { 5027, "gs_get_nodegroup_tablecount", 1, false, true, gs_get_nodegroup_tablecount, 23 },
  { 5010, "gs_get_role_name", 1, true, false, gs_get_role_name, 25 },
  { 3959, "gs_globalplancache_prepare_status", 0, false, true, gs_globalplancache_prepare_status, 2249 },
  { 3957, "gs_globalplancache_status", 0, false, true, gs_globalplancache_status, 2249 },
  { 4888, "gs_index_advise", 1, false, true, gs_index_advise, 2249 },
  { 3469, "gs_password_deadline", 0, true, false, gs_password_deadline, 1186 },
  { 3470, "gs_password_notifytime", 0, true, false, gs_password_notifytime, 23 },
  { 4501, "gs_respool_exception_info", 1, true, true, gs_respool_exception_info, 2249 },
  { 2202, "gs_roach_disable_delay_ddl_recycle", 1, true, false, gs_roach_disable_delay_ddl_recycle, 2249 },
  { 2201, "gs_roach_enable_delay_ddl_recycle", 1, true, false, gs_roach_enable_delay_ddl_recycle, 25 },
  { 2200, "gs_roach_stop_backup", 1, true, false, gs_roach_stop_backup, 25 },
  { 2203, "gs_roach_switch_xlog", 1, true, false, gs_roach_switch_xlog, 25 },
  { 9031, "gs_set_obs_delete_location", 1, true, false, gs_set_obs_delete_location, 25 },
  { 4520, "gs_stat_activity_timeout", 1, false, true, gs_stat_activity_timeout, 2249 },
  { 3805, "gs_stat_clean_hotkeys", 0, true, true, gs_stat_clean_hotkeys, 16 },
  { 3803, "gs_stat_get_hotkeys_info", 0, true, true, gs_stat_get_hotkeys_info, 2249 },
  { 5033, "gs_stat_get_wlm_plan_operator_info", 1, false, true, gs_stat_get_wlm_plan_operator_info, 2249 },
  { 3956, "gs_threadpool_status", 0, false, true, gs_threadpool_status, 2249 },
  { 2847, "gs_total_nodegroup_memory_detail", 0, true, true, gs_total_nodegroup_memory_detail, 2249 },
  { 5016, "gs_wlm_node_clean", 1, true, false, gs_wlm_node_clean, 16 },
  { 5017, "gs_wlm_node_recover", 1, true, false, gs_wlm_node_recover, 16 },
  { 5011, "gs_wlm_readjust_user_space", 1, true, false, gs_wlm_readjust_user_space, 25 },
  { 5030, "gs_wlm_readjust_user_space_through_username", 1, true, false, gs_wlm_readjust_user_space_through_username, 25 },
  { 5029, "gs_wlm_readjust_user_space_with_reset_flag", 2, true, false, gs_wlm_readjust_user_space_with_reset_flag, 25 },
  { 5006, "gs_wlm_rebuild_user_resource_pool", 1, true, false, gs_wlm_rebuild_user_resource_pool, 16 },
  { 5005, "gs_wlm_switch_cgroup", 2, true, false, gs_wlm_switch_cgroup, 16 },
  { 3695, "gtsquery_compress", 1, true, false, gtsquery_compress, 2281 },
  { 3701, "gtsquery_consistent", 5, true, false, gtsquery_consistent, 16 },
  { 3696, "gtsquery_decompress", 1, true, false, gtsquery_decompress, 2281 },
  { 3700, "gtsquery_penalty", 3, true, false, gtsquery_penalty, 2281 },
  { 3697, "gtsquery_picksplit", 2, true, false, gtsquery_picksplit, 2281 },
  { 3699, "gtsquery_same", 3, true, false, gtsquery_same, 2281 },
  { 3698, "gtsquery_union", 2, true, false, gtsquery_union, 2281 },
  { 3648, "gtsvector_compress", 1, true, false, gtsvector_compress, 2281 },
  { 3654, "gtsvector_consistent", 5, true, false, gtsvector_consistent, 16 },
  { 3649, "gtsvector_decompress", 1, true, false, gtsvector_decompress, 2281 },
  { 3653, "gtsvector_penalty", 3, true, false, gtsvector_penalty, 2281 },
  { 3650, "gtsvector_picksplit", 2, true, false, gtsvector_picksplit, 2281 },
  { 3652, "gtsvector_same", 3, true, false, gtsvector_same, 2281 },
  { 3651, "gtsvector_union", 2, true, false, gtsvector_union, 2281 },
  { 3646, "gtsvectorin", 1, true, false, gtsvectorin, 3642 },
  { 3647, "gtsvectorout", 1, true, false, gtsvectorout, 2275 },
  { 3029, "has_any_column_privilege_id", 2, true, false, has_any_column_privilege_id, 16 },
  { 3027, "has_any_column_privilege_id_id", 3, true, false, has_any_column_privilege_id_id, 16 },
  { 3026, "has_any_column_privilege_id_name", 3, true, false, has_any_column_privilege_id_name, 16 },
  { 3028, "has_any_column_privilege_name", 2, true, false, has_any_column_privilege_name, 16 },
  { 3025, "has_any_column_privilege_name_id", 3, true, false, has_any_column_privilege_name_id, 16 },
  { 3024, "has_any_column_privilege_name_name", 3, true, false, has_any_column_privilege_name_name, 16 },
  { 9135, "has_cek_privilege_id", 2, true, false, has_cek_privilege_id, 16 },
  { 9133, "has_cek_privilege_id_id", 3, true, false, has_cek_privilege_id_id, 16 },
  { 9132, "has_cek_privilege_id_name", 3, true, false, has_cek_privilege_id_name, 16 },
  { 9134, "has_cek_privilege_name", 2, true, false, has_cek_privilege_name, 16 },
  { 9131, "has_cek_privilege_name_id", 3, true, false, has_cek_privilege_name_id, 16 },
  { 9130, "has_cek_privilege_name_name", 3, true, false, has_cek_privilege_name_name, 16 },
  { 9029, "has_cmk_privilege_id", 2, true, false, has_cmk_privilege_id, 16 },
  { 9027, "has_cmk_privilege_id_id", 3, true, false, has_cmk_privilege_id_id, 16 },
  { 9026, "has_cmk_privilege_id_name", 3, true, false, has_cmk_privilege_id_name, 16 },
  { 9028, "has_cmk_privilege_name", 2, true, false, has_cmk_privilege_name, 16 },
  { 9025, "has_cmk_privilege_name_id", 3, true, false, has_cmk_privilege_name_id, 16 },
  { 9024, "has_cmk_privilege_name_name", 3, true, false, has_cmk_privilege_name_name, 16 },
  { 3023, "has_column_privilege_id_attnum", 3, true, false, has_column_privilege_id_attnum, 16 },
  { 3019, "has_column_privilege_id_id_attnum", 4, true, false, has_column_privilege_id_id_attnum, 16 },
  { 3018, "has_column_privilege_id_id_name", 4, true, false, has_column_privilege_id_id_name, 16 },
  { 3022, "has_column_privilege_id_name", 3, true, false, has_column_privilege_id_name, 16 },
  { 3017, "has_column_privilege_id_name_attnum", 4, true, false, has_column_privilege_id_name_attnum, 16 },
  { 3016, "has_column_privilege_id_name_name", 4, true, false, has_column_privilege_id_name_name, 16 },
  { 3021, "has_column_privilege_name_attnum", 3, true, false, has_column_privilege_name_attnum, 16 },
  { 3015, "has_column_privilege_name_id_attnum", 4, true, false, has_column_privilege_name_id_attnum, 16 },
  { 3014, "has_column_privilege_name_id_name", 4, true, false, has_column_privilege_name_id_name, 16 },
  { 3020, "has_column_privilege_name_name", 3, true, false, has_column_privilege_name_name, 16 },
  { 3013, "has_column_privilege_name_name_attnum", 4, true, false, has_column_privilege_name_name_attnum, 16 },
  { 3012, "has_column_privilege_name_name_name", 4, true, false, has_column_privilege_name_name_name, 16 },
  { 2255, "has_database_privilege_id", 2, true, false, has_database_privilege_id, 16 },
  { 2253, "has_database_privilege_id_id", 3, true, false, has_database_privilege_id_id, 16 },
  { 2252, "has_database_privilege_id_name", 3, true, false, has_database_privilege_id_name, 16 },
  { 2254, "has_database_privilege_name", 2, true, false, has_database_privilege_name, 16 },
  { 2251, "has_database_privilege_name_id", 3, true, false, has_database_privilege_name_id, 16 },
  { 2250, "has_database_privilege_name_name", 3, true, false, has_database_privilege_name_name, 16 },
  { 4705, "has_directory_privilege_id", 2, true, false, has_directory_privilege_id, 16 },
  { 4703, "has_directory_privilege_id_id", 3, true, false, has_directory_privilege_id_id, 16 },
  { 4702, "has_directory_privilege_id_name", 3, true, false, has_directory_privilege_id_name, 16 },
  { 4704, "has_directory_privilege_name", 2, true, false, has_directory_privilege_name, 16 },
  { 4701, "has_directory_privilege_name_id", 3, true, false, has_directory_privilege_name_id, 16 },
  { 4700, "has_directory_privilege_name_name", 3, true, false, has_directory_privilege_name_name, 16 },
  { 3005, "has_foreign_data_wrapper_privilege_id", 2, true, false, has_foreign_data_wrapper_privilege_id, 16 },
  { 3003, "has_foreign_data_wrapper_privilege_id_id", 3, true, false, has_foreign_data_wrapper_privilege_id_id, 16 },
  { 3002, "has_foreign_data_wrapper_privilege_id_name", 3, true, false, has_foreign_data_wrapper_privilege_id_name, 16 },
  { 3004, "has_foreign_data_wrapper_privilege_name", 2, true, false, has_foreign_data_wrapper_privilege_name, 16 },
  { 3001, "has_foreign_data_wrapper_privilege_name_id", 3, true, false, has_foreign_data_wrapper_privilege_name_id, 16 },
  { 3000, "has_foreign_data_wrapper_privilege_name_name", 3, true, false, has_foreign_data_wrapper_privilege_name_name, 16 },
  { 2261, "has_function_privilege_id", 2, true, false, has_function_privilege_id, 16 },
  { 2259, "has_function_privilege_id_id", 3, true, false, has_function_privilege_id_id, 16 },
  { 2258, "has_function_privilege_id_name", 3, true, false, has_function_privilege_id_name, 16 },
  { 2260, "has_function_privilege_name", 2, true, false, has_function_privilege_name, 16 },
  { 2257, "has_function_privilege_name_id", 3, true, false, has_function_privilege_name_id, 16 },
  { 2256, "has_function_privilege_name_name", 3, true, false, has_function_privilege_name_name, 16 },
  { 2267, "has_language_privilege_id", 2, true, false, has_language_privilege_id, 16 },
  { 2265, "has_language_privilege_id_id", 3, true, false, has_language_privilege_id_id, 16 },
  { 2264, "has_language_privilege_id_name", 3, true, false, has_language_privilege_id_name, 16 },
  { 2266, "has_language_privilege_name", 2, true, false, has_language_privilege_name, 16 },
  { 2263, "has_language_privilege_name_id", 3, true, false, has_language_privilege_name_id, 16 },
  { 2262, "has_language_privilege_name_name", 3, true, false, has_language_privilege_name_name, 16 },
  { 4206, "has_nodegroup_privilege_id", 2, true, false, has_nodegroup_privilege_id, 16 },
  { 4204, "has_nodegroup_privilege_id_id", 3, true, false, has_nodegroup_privilege_id_id, 16 },
  { 4203, "has_nodegroup_privilege_id_name", 3, true, false, has_nodegroup_privilege_id_name, 16 },
  { 4205, "has_nodegroup_privilege_name", 2, true, false, has_nodegroup_privilege_name, 16 },
  { 4202, "has_nodegroup_privilege_name_id", 3, true, false, has_nodegroup_privilege_name_id, 16 },
  { 4201, "has_nodegroup_privilege_name_name", 3, true, false, has_nodegroup_privilege_name_name, 16 },
  { 2273, "has_schema_privilege_id", 2, true, false, has_schema_privilege_id, 16 },
  { 2271, "has_schema_privilege_id_id", 3, true, false, has_schema_privilege_id_id, 16 },
  { 2270, "has_schema_privilege_id_name", 3, true, false, has_schema_privilege_id_name, 16 },
  { 2272, "has_schema_privilege_name", 2, true, false, has_schema_privilege_name, 16 },
  { 2269, "has_schema_privilege_name_id", 3, true, false, has_schema_privilege_name_id, 16 },
  { 2268, "has_schema_privilege_name_name", 3, true, false, has_schema_privilege_name_name, 16 },
  { 2186, "has_sequence_privilege_id", 2, true, false, has_sequence_privilege_id, 16 },
  { 2184, "has_sequence_privilege_id_id", 3, true, false, has_sequence_privilege_id_id, 16 },
  { 2183, "has_sequence_privilege_id_name", 3, true, false, has_sequence_privilege_id_name, 16 },
  { 2185, "has_sequence_privilege_name", 2, true, false, has_sequence_privilege_name, 16 },
  { 2182, "has_sequence_privilege_name_id", 3, true, false, has_sequence_privilege_name_id, 16 },
  { 2181, "has_sequence_privilege_name_name", 3, true, false, has_sequence_privilege_name_name, 16 },
  { 3011, "has_server_privilege_id", 2, true, false, has_server_privilege_id, 16 },
  { 3009, "has_server_privilege_id_id", 3, true, false, has_server_privilege_id_id, 16 },
  { 3008, "has_server_privilege_id_name", 3, true, false, has_server_privilege_id_name, 16 },
  { 3010, "has_server_privilege_name", 2, true, false, has_server_privilege_name, 16 },
  { 3007, "has_server_privilege_name_id", 3, true, false, has_server_privilege_name_id, 16 },
  { 3006, "has_server_privilege_name_name", 3, true, false, has_server_privilege_name_name, 16 },
  { 1927, "has_table_privilege_id", 2, true, false, has_table_privilege_id, 16 },
  { 1925, "has_table_privilege_id_id", 3, true, false, has_table_privilege_id_id, 16 },
  { 1924, "has_table_privilege_id_name", 3, true, false, has_table_privilege_id_name, 16 },
  { 1926, "has_table_privilege_name", 2, true, false, has_table_privilege_name, 16 },
  { 1923, "has_table_privilege_name_id", 3, true, false, has_table_privilege_name_id, 16 },
  { 1922, "has_table_privilege_name_name", 3, true, false, has_table_privilege_name_name, 16 },
  { 2395, "has_tablespace_privilege_id", 2, true, false, has_tablespace_privilege_id, 16 },
  { 2393, "has_tablespace_privilege_id_id", 3, true, false, has_tablespace_privilege_id_id, 16 },
  { 2392, "has_tablespace_privilege_id_name", 3, true, false, has_tablespace_privilege_id_name, 16 },
  { 2394, "has_tablespace_privilege_name", 2, true, false, has_tablespace_privilege_name, 16 },
  { 2391, "has_tablespace_privilege_name_id", 3, true, false, has_tablespace_privilege_name_id, 16 },
  { 2390, "has_tablespace_privilege_name_name", 3, true, false, has_tablespace_privilege_name_name, 16 },
  { 3143, "has_type_privilege_id", 2, true, false, has_type_privilege_id, 16 },
  { 3141, "has_type_privilege_id_id", 3, true, false, has_type_privilege_id_id, 16 },
  { 3140, "has_type_privilege_id_name", 3, true, false, has_type_privilege_id_name, 16 },
  { 3142, "has_type_privilege_name", 2, true, false, has_type_privilege_name, 16 },
  { 3139, "has_type_privilege_name_id", 3, true, false, has_type_privilege_name_id, 16 },
  { 3138, "has_type_privilege_name_name", 3, true, false, has_type_privilege_name_name, 16 },
  { 329, "hash_aclitem", 1, true, false, hash_aclitem, 23 },
  { 626, "hash_array", 1, true, false, hash_array, 23 },
  { 432, "hash_numeric", 1, true, false, hash_numeric, 23 },
  { 3902, "hash_range", 1, true, false, hash_range, 23 },
  { 443, "hashbeginscan", 3, true, false, hashbeginscan, 2281 },
  { HASHBPCHAROID, "hashbpchar", 1, true, false, hashbpchar, 23 },
  { 448, "hashbuild", 3, true, false, hashbuild, 2281 },
  { 327, "hashbuildempty", 1, true, false, hashbuildempty, 2278 },
  { 442, "hashbulkdelete", 4, true, false, hashbulkdelete, 2281 },
  { 454, "hashchar", 1, true, false, hashchar, 23 },
  { 438, "hashcostestimate", 7, true, false, hashcostestimate, 2278 },
  { 445, "hashendscan", 1, true, false, hashendscan, 2278 },
  { 3515, "hashenum", 1, true, false, hashenum, 23 },
  { 451, "hashfloat4", 1, true, false, hashfloat4, 23 },
  { 452, "hashfloat8", 1, true, false, hashfloat8, 23 },
  { 637, "hashgetbitmap", 2, true, false, hashgetbitmap, 20 },
  { 440, "hashgettuple", 2, true, false, hashgettuple, 16 },
  { 422, "hashinet", 1, true, false, hashinet, 23 },
  { 441, "hashinsert", 6, true, false, hashinsert, 16 },
  { 5520, "hashint1", 1, true, false, hashint1, 23 },
  { 449, "hashint2", 1, true, false, hashint2, 23 },
  { 398, "hashint2vector", 1, true, false, hashint2vector, 23 },
  { HASHINT4OID, "hashint4", 1, true, false, hashint4, 23 },
  { HASHINT8OID, "hashint8", 1, true, false, hashint8, 23 },
  { 399, "hashmacaddr", 1, true, false, hashmacaddr, 23 },
  { 446, "hashmarkpos", 1, true, false, hashmarkpos, 2278 },
  { 3185, "hashmerge", 5, true, false, hashmerge, 2281 },
  { 455, "hashname", 1, true, false, hashname, 23 },
  { 453, "hashoid", 1, true, false, hashoid, 23 },
  { 457, "hashoidvector", 1, true, false, hashoidvector, 23 },
  { 2786, "hashoptions", 2, true, false, hashoptions, 17 },
  { 444, "hashrescan", 5, true, false, hashrescan, 2278 },
  { 447, "hashrestrpos", 1, true, false, hashrestrpos, 2278 },
  { HASHTEXTOID, "hashtext", 1, true, false, hashtext, 23 },
  { 425, "hashvacuumcleanup", 2, true, false, hashvacuumcleanup, 2281 },
  { 456, "hashvarlena", 1, true, false, hashvarlena, 23 },
  { 4311, "hll", 3, true, false, hll, 4301 },
  { 4322, "hll_add", 2, true, false, hll_add, 4301 },
  { 4323, "hll_add_rev", 2, true, false, hll_add_rev, 4301 },
  { 4351, "hll_add_trans0", 2, false, false, hll_add_trans0, 4370 },
  { 4336, "hll_add_trans1", 3, false, false, hll_add_trans1, 4370 },
  { 4337, "hll_add_trans2", 4, false, false, hll_add_trans2, 4370 },
  { 4338, "hll_add_trans3", 5, false, false, hll_add_trans3, 4370 },
  { 4360, "hll_add_trans4", 6, false, false, hll_add_trans4, 4370 },
  { 4320, "hll_cardinality", 1, true, false, hll_cardinality, 701 },
  { 4325, "hll_empty0", 0, true, false, hll_empty0, 4301 },
  { 4326, "hll_empty1", 1, true, false, hll_empty1, 4301 },
  { 4327, "hll_empty2", 2, true, false, hll_empty2, 4301 },
  { 4328, "hll_empty3", 3, true, false, hll_empty3, 4301 },
  { 4329, "hll_empty4", 4, true, false, hll_empty4, 4301 },
  { 4318, "hll_eq", 2, true, false, hll_eq, 16 },
  { 4334, "hll_expthresh", 1, true, false, hll_expthresh, 2249 },
  { 4339, "hll_hash_1byte", 1, true, false, hll_hash_1byte, 4303 },
  { 4353, "hll_hash_1bytes", 2, true, false, hll_hash_1bytes, 4303 },
  { 4340, "hll_hash_2byte", 1, true, false, hll_hash_2byte, 4303 },
  { 4354, "hll_hash_2bytes", 2, true, false, hll_hash_2bytes, 4303 },
  { 4341, "hll_hash_4byte", 1, true, false, hll_hash_4byte, 4303 },
  { 4355, "hll_hash_4bytes", 2, true, false, hll_hash_4bytes, 4303 },
  { 4342, "hll_hash_8byte", 1, true, false, hll_hash_8byte, 4303 },
  { 4356, "hll_hash_8bytes", 2, true, false, hll_hash_8bytes, 4303 },
  { 4345, "hll_hash_any", 1, true, false, hll_hash_any, 4303 },
  { 4359, "hll_hash_anys", 2, true, false, hll_hash_anys, 4303 },
  { 4343, "hll_hash_varlena", 1, true, false, hll_hash_varlena, 4303 },
  { 4369, "hll_hash_varlena", 1, true, false, hll_hash_varlena, 4303 },
  { 4344, "hll_hash_varlena", 1, true, false, hll_hash_varlena, 4303 },
  { 4357, "hll_hash_varlenas", 2, true, false, hll_hash_varlenas, 4303 },
  { 4358, "hll_hash_varlenas", 2, true, false, hll_hash_varlenas, 4303 },
  { 4316, "hll_hashval", 1, true, false, hll_hashval, 4303 },
  { 4314, "hll_hashval_eq", 2, true, false, hll_hashval_eq, 16 },
  { 4312, "hll_hashval_in", 3, true, false, hll_hashval_in, 4303 },
  { 4317, "hll_hashval_int4", 1, true, false, hll_hashval_int4, 4303 },
  { 4315, "hll_hashval_ne", 2, true, false, hll_hashval_ne, 16 },
  { 4313, "hll_hashval_out", 1, true, false, hll_hashval_out, 2275 },
  { 4305, "hll_in", 3, true, false, hll_in, 4301 },
  { 4332, "hll_log2m", 1, true, false, hll_log2m, 23 },
  { 4319, "hll_ne", 2, true, false, hll_ne, 16 },
  { 4306, "hll_out", 1, true, false, hll_out, 2275 },
  { 4352, "hll_pack", 1, false, false, hll_pack, 4301 },
  { 4324, "hll_print", 1, true, false, hll_print, 2275 },
  { 4307, "hll_recv", 1, true, false, hll_recv, 4301 },
  { 4333, "hll_regwidth", 1, true, false, hll_regwidth, 23 },
  { 4330, "hll_schema_version", 1, true, false, hll_schema_version, 23 },
  { 4308, "hll_send", 1, true, false, hll_send, 17 },
  { 4335, "hll_sparseon", 1, true, false, hll_sparseon, 23 },
  { 4364, "hll_trans_in", 1, true, false, hll_trans_in, 4370 },
  { 4365, "hll_trans_out", 1, true, false, hll_trans_out, 2275 },
  { 4362, "hll_trans_recv", 1, true, false, hll_trans_recv, 4370 },
  { 4363, "hll_trans_send", 1, true, false, hll_trans_send, 17 },
  { 4331, "hll_type", 1, true, false, hll_type, 23 },
  { 4309, "hll_typmod_in", 1, true, false, hll_typmod_in, 23 },
  { 4310, "hll_typmod_out", 1, true, false, hll_typmod_out, 2275 },
  { 4321, "hll_union", 2, true, false, hll_union, 4301 },
  { 4348, "hll_union_collect", 2, false, false, hll_union_collect, 4370 },
  { 4346, "hll_union_trans", 2, false, false, hll_union_trans, 4370 },
  { 4889, "hypopg_create_index", 1, false, true, hypopg_create_index, 2249 },
  { 4890, "hypopg_display_index", 0, false, true, hypopg_display_index, 2249 },
  { 4891, "hypopg_drop_index", 1, false, false, hypopg_drop_index, 16 },
  { 4892, "hypopg_estimate_size", 1, false, false, hypopg_estimate_size, 20 },
  { 4893, "hypopg_reset_index", 0, false, false, hypopg_reset_index, 2278 },
  { 5529, "i1tof4", 1, true, false, i1tof4, 700 },
  { 5531, "i1tof8", 1, true, false, i1tof8, 701 },
  { 5523, "i1toi2", 1, true, false, i1toi2, 21 },
  { 5525, "i1toi4", 1, true, false, i1toi4, 23 },
  { 5527, "i1toi8", 1, true, false, i1toi8, 20 },
  { 235, "i2tod", 1, true, false, i2tod, 701 },
  { 236, "i2tof", 1, true, false, i2tof, 700 },
  { 5524, "i2toi1", 1, true, false, i2toi1, 5545 },
  { 313, "i2toi4", 1, true, false, i2toi4, 23 },
  { 78, "i4tochar", 1, true, false, i4tochar, 18 },
  { INT4TOFLOAT8FUNCOID, "i4tod", 1, true, false, i4tod, 701 },
  { 318, "i4tof", 1, true, false, i4tof, 700 },
  { 5526, "i4toi1", 1, true, false, i4toi1, 5545 },
  { 314, "i4toi2", 1, true, false, i4toi2, 21 },
  { 482, "i8tod", 1, true, false, i8tod, 701 },
  { 652, "i8tof", 1, true, false, i8tof, 700 },
  { 5528, "i8toi1", 1, true, false, i8toi1, 5545 },
  { 1287, "i8tooid", 1, true, false, i8tooid, 26 },
  { 1816, "iclikejoinsel", 5, true, false, iclikejoinsel, 701 },
  { 1814, "iclikesel", 4, true, false, iclikesel, 701 },
  { 1817, "icnlikejoinsel", 5, true, false, icnlikejoinsel, 701 },
  { 1815, "icnlikesel", 4, true, false, icnlikesel, 701 },
  { 1826, "icregexeqjoinsel", 5, true, false, icregexeqjoinsel, 701 },
  { 1820, "icregexeqsel", 4, true, false, icregexeqsel, 701 },
  { 1829, "icregexnejoinsel", 5, true, false, icregexnejoinsel, 701 },
  { 1823, "icregexnesel", 4, true, false, icregexnesel, 701 },
  { 598, "inet_abbrev", 1, true, false, inet_abbrev, 25 },
  { 2196, "inet_client_addr", 0, false, false, inet_client_addr, 869 },
  { 2197, "inet_client_port", 0, false, false, inet_client_port, 23 },
  { 910, "inet_in", 1, true, false, inet_in, 869 },
  { 911, "inet_out", 1, true, false, inet_out, 2275 },
  { 2496, "inet_recv", 1, true, false, inet_recv, 869 },
  { 2497, "inet_send", 1, true, false, inet_send, 17 },
  { 2198, "inet_server_addr", 0, false, false, inet_server_addr, 869 },
  { 2199, "inet_server_port", 0, false, false, inet_server_port, 23 },
  { 605, "inet_set_masklen", 2, true, false, inet_set_masklen, 869 },
  { 1715, "inet_to_cidr", 1, true, false, inet_to_cidr, 650 },
  { 2628, "inetand", 2, true, false, inetand, 869 },
  { 2633, "inetmi", 2, true, false, inetmi, 20 },
  { 2632, "inetmi_int8", 2, true, false, inetmi_int8, 869 },
  { 2627, "inetnot", 1, true, false, inetnot, 869 },
  { 2629, "inetor", 2, true, false, inetor, 869 },
  { 2630, "inetpl", 2, true, false, inetpl, 869 },
  { 872, "initcap", 1, true, false, initcap, 25 },
  { INSTR3FUNCOID, "instr_3args", 3, true, false, instr_3args, 23 },
  { INSTR4FUNCOID, "instr_4args", 4, true, false, instr_4args, 23 },
  { 5548, "int1_avg_accum", 2, true, false, int1_avg_accum, 1016 },
  { 5533, "int1_bool", 1, true, false, int1_bool, 16 },
  { 4067, "int1_bpchar", 1, true, false, int1_bpchar, 1042 },
  { 3189, "int1_interval", 1, true, false, int1_interval, 1186 },
  { 3348, "int1_mul_cash", 2, true, false, int1_mul_cash, 790 },
  { 5521, "int1_numeric", 1, true, false, int1_numeric, 1700 },
  { 4066, "int1_nvarchar2", 1, true, false, int1_nvarchar2, 3969 },
  { 4165, "int1_text", 1, true, false, int1_text, 25 },
  { 4065, "int1_varchar", 1, true, false, int1_varchar, 1043 },
  { 6113, "int1abs", 1, true, false, int1abs, 5545 },
  { 6101, "int1and", 2, true, false, int1and, 5545 },
  { 5519, "int1cmp", 2, true, false, int1cmp, 23 },
  { 6112, "int1div", 2, true, false, int1div, 5545 },
  { 5547, "int1eq", 2, true, false, int1eq, 16 },
  { 5512, "int1ge", 2, true, false, int1ge, 16 },
  { 5511, "int1gt", 2, true, false, int1gt, 16 },
  { 5541, "int1in", 1, true, false, int1in, 5545 },
  { 6117, "int1inc", 1, true, false, int1inc, 5545 },
  { 6115, "int1larger", 2, true, false, int1larger, 5545 },
  { 5510, "int1le", 2, true, false, int1le, 16 },
  { 5509, "int1lt", 2, true, false, int1lt, 16 },
  { 6110, "int1mi", 2, true, false, int1mi, 5545 },
  { 6114, "int1mod", 2, true, false, int1mod, 5545 },
  { 6111, "int1mul", 2, true, false, int1mul, 5545 },
  { 5508, "int1ne", 2, true, false, int1ne, 16 },
  { 6104, "int1not", 1, true, false, int1not, 5545 },
  { 6102, "int1or", 2, true, false, int1or, 5545 },
  { 5542, "int1out", 1, true, false, int1out, 2275 },
  { 6109, "int1pl", 2, true, false, int1pl, 5545 },
  { 5543, "int1recv", 1, true, false, int1recv, 5545 },
  { 5544, "int1send", 1, true, false, int1send, 17 },
  { 6105, "int1shl", 2, true, false, int1shl, 5545 },
  { 6106, "int1shr", 2, true, false, int1shr, 5545 },
  { 6116, "int1smaller", 2, true, false, int1smaller, 5545 },
  { 6108, "int1um", 1, true, false, int1um, 21 },
  { 6107, "int1up", 1, true, false, int1up, 5545 },
  { 6103, "int1xor", 2, true, false, int1xor, 5545 },
  { 172, "int24div", 2, true, false, int24div, 701 },
  { 158, "int24eq", 2, true, false, int24eq, 16 },
  { 168, "int24ge", 2, true, false, int24ge, 16 },
  { 162, "int24gt", 2, true, false, int24gt, 16 },
  { 166, "int24le", 2, true, false, int24le, 16 },
  { 160, "int24lt", 2, true, false, int24lt, 16 },
  { 182, "int24mi", 2, true, false, int24mi, 23 },
  { 170, "int24mul", 2, true, false, int24mul, 23 },
  { 164, "int24ne", 2, true, false, int24ne, 16 },
  { 178, "int24pl", 2, true, false, int24pl, 23 },
  { 754, "int28", 1, true, false, int28, 20 },
  { 948, "int28div", 2, true, false, int28div, 701 },
  { 1850, "int28eq", 2, true, false, int28eq, 16 },
  { 1855, "int28ge", 2, true, false, int28ge, 16 },
  { 1853, "int28gt", 2, true, false, int28gt, 16 },
  { 1854, "int28le", 2, true, false, int28le, 16 },
  { 1852, "int28lt", 2, true, false, int28lt, 16 },
  { 942, "int28mi", 2, true, false, int28mi, 20 },
  { 943, "int28mul", 2, true, false, int28mul, 20 },
  { 1851, "int28ne", 2, true, false, int28ne, 16 },
  { 841, "int28pl", 2, true, false, int28pl, 20 },
  { 1834, "int2_accum", 2, true, false, int2_accum, 1231 },
  { 1962, "int2_avg_accum", 2, true, false, int2_avg_accum, 1016 },
  { 3180, "int2_bool", 1, true, false, int2_bool, 16 },
  { 4068, "int2_bpchar", 1, true, false, int2_bpchar, 1042 },
  { 3190, "int2_interval", 1, true, false, int2_interval, 1186 },
  { 3557, "int2_list_agg_noarg2_transfn", 2, false, false, int2_list_agg_noarg2_transfn, 2281 },
  { 3555, "int2_list_agg_transfn", 3, false, false, int2_list_agg_transfn, 2281 },
  { 863, "int2_mul_cash", 2, true, false, int2_mul_cash, 790 },
  { 1782, "int2_numeric", 1, true, false, int2_numeric, 1700 },
  { 1840, "int2_sum", 2, false, false, int2_sum, 20 },
  { 4166, "int2_text", 1, true, false, int2_text, 25 },
  { 4180, "int2_varchar", 1, true, false, int2_varchar, 1043 },
  { 1398, "int2abs", 1, true, false, int2abs, 21 },
  { 1253, "int2abs", 1, true, false, int2abs, 21 },
  { 1892, "int2and", 2, true, false, int2and, 21 },
  { 153, "int2div", 2, true, false, int2div, 701 },
  { 63, "int2eq", 2, true, false, int2eq, 16 },
  { 151, "int2ge", 2, true, false, int2ge, 16 },
  { 146, "int2gt", 2, true, false, int2gt, 16 },
  { 38, "int2in", 1, true, false, int2in, 21 },
  { 770, "int2larger", 2, true, false, int2larger, 21 },
  { 148, "int2le", 2, true, false, int2le, 16 },
  { 64, "int2lt", 2, true, false, int2lt, 16 },
  { 180, "int2mi", 2, true, false, int2mi, 21 },
  { 155, "int2mod", 2, true, false, int2mod, 21 },
  { 940, "int2mod", 2, true, false, int2mod, 21 },
  { 152, "int2mul", 2, true, false, int2mul, 21 },
  { 145, "int2ne", 2, true, false, int2ne, 16 },
  { 1895, "int2not", 1, true, false, int2not, 21 },
  { 1893, "int2or", 2, true, false, int2or, 21 },
  { 39, "int2out", 1, true, false, int2out, 2275 },
  { 176, "int2pl", 2, true, false, int2pl, 21 },
  { 2404, "int2recv", 1, true, false, int2recv, 21 },
  { 2405, "int2send", 1, true, false, int2send, 17 },
  { 1896, "int2shl", 2, true, false, int2shl, 21 },
  { 1897, "int2shr", 2, true, false, int2shr, 21 },
  { 771, "int2smaller", 2, true, false, int2smaller, 21 },
  { 213, "int2um", 1, true, false, int2um, 21 },
  { 1911, "int2up", 1, true, false, int2up, 21 },
  { 315, "int2vectoreq", 2, true, false, int2vectoreq, 16 },
  { 40, "int2vectorin", 1, true, false, int2vectorin, 22 },
  { 41, "int2vectorout", 1, true, false, int2vectorout, 2275 },
  { 2410, "int2vectorrecv", 1, true, false, int2vectorrecv, 22 },
  { 2411, "int2vectorsend", 1, true, false, int2vectorsend, 17 },
  { 1894, "int2xor", 2, true, false, int2xor, 21 },
  { 173, "int42div", 2, true, false, int42div, 701 },
  { 159, "int42eq", 2, true, false, int42eq, 16 },
  { 169, "int42ge", 2, true, false, int42ge, 16 },
  { 163, "int42gt", 2, true, false, int42gt, 16 },
  { 167, "int42le", 2, true, false, int42le, 16 },
  { 161, "int42lt", 2, true, false, int42lt, 16 },
  { 183, "int42mi", 2, true, false, int42mi, 23 },
  { 171, "int42mul", 2, true, false, int42mul, 23 },
  { 165, "int42ne", 2, true, false, int42ne, 16 },
  { 179, "int42pl", 2, true, false, int42pl, 23 },
  { 481, "int48", 1, true, false, int48, 20 },
  { 1281, "int48div", 2, true, false, int48div, 701 },
  { 852, "int48eq", 2, true, false, int48eq, 16 },
  { 857, "int48ge", 2, true, false, int48ge, 16 },
  { 855, "int48gt", 2, true, false, int48gt, 16 },
  { 856, "int48le", 2, true, false, int48le, 16 },
  { 854, "int48lt", 2, true, false, int48lt, 16 },
  { 1279, "int48mi", 2, true, false, int48mi, 20 },
  { 1280, "int48mul", 2, true, false, int48mul, 20 },
  { 853, "int48ne", 2, true, false, int48ne, 16 },
  { 1278, "int48pl", 2, true, false, int48pl, 20 },
  { 1835, "int4_accum", 2, true, false, int4_accum, 1231 },
  { 1963, "int4_avg_accum", 2, true, false, int4_avg_accum, 1016 },
  { 2557, "int4_bool", 1, true, false, int4_bool, 16 },
  { 3192, "int4_bpchar", 1, true, false, int4_bpchar, 1042 },
  { INTEGER2CASHFUNCOID, "int4_cash", 1, true, false, int4_cash, 790 },
  { 3191, "int4_interval", 1, true, false, int4_interval, 1186 },
  { 3561, "int4_list_agg_noarg2_transfn", 2, false, false, int4_list_agg_noarg2_transfn, 2281 },
  { 3559, "int4_list_agg_transfn", 3, false, false, int4_list_agg_transfn, 2281 },
  { 862, "int4_mul_cash", 2, true, false, int4_mul_cash, 790 },
  { 1740, "int4_numeric", 1, true, false, int4_numeric, 1700 },
  { 1841, "int4_sum", 2, false, false, int4_sum, 20 },
  { 4167, "int4_text", 1, true, false, int4_text, 25 },
  { INTEGER2CHARFUNCOID, "int4_to_char", 2, true, false, int4_to_char, 25 },
  { 4181, "int4_varchar", 1, true, false, int4_varchar, 1043 },
  { 1397, "int4abs", 1, true, false, int4abs, 23 },
  { 1251, "int4abs", 1, true, false, int4abs, 23 },
  { 1898, "int4and", 2, true, false, int4and, 23 },
  { 154, "int4div", 2, true, false, int4div, 701 },
  { 65, "int4eq", 2, true, false, int4eq, 16 },
  { 150, "int4ge", 2, true, false, int4ge, 16 },
  { 147, "int4gt", 2, true, false, int4gt, 16 },
  { 42, "int4in", 1, true, false, int4in, 23 },
  { 766, "int4inc", 1, true, false, int4inc, 23 },
  { 768, "int4larger", 2, true, false, int4larger, 23 },
  { 149, "int4le", 2, true, false, int4le, 16 },
  { 66, "int4lt", 2, true, false, int4lt, 16 },
  { 181, "int4mi", 2, true, false, int4mi, 23 },
  { 156, "int4mod", 2, true, false, int4mod, 23 },
  { 941, "int4mod", 2, true, false, int4mod, 23 },
  { 141, "int4mul", 2, true, false, int4mul, 23 },
  { 144, "int4ne", 2, true, false, int4ne, 16 },
  { 1901, "int4not", 1, true, false, int4not, 23 },
  { 1899, "int4or", 2, true, false, int4or, 23 },
  { 43, "int4out", 1, true, false, int4out, 2275 },
  { 177, "int4pl", 2, true, false, int4pl, 23 },
  { 3914, "int4range_canonical", 1, true, false, int4range_canonical, 3904 },
  { 3922, "int4range_subdiff", 2, true, false, int4range_subdiff, 701 },
  { 2406, "int4recv", 1, true, false, int4recv, 23 },
  { 2407, "int4send", 1, true, false, int4send, 17 },
  { 1902, "int4shl", 2, true, false, int4shl, 23 },
  { 1903, "int4shr", 2, true, false, int4shr, 23 },
  { 769, "int4smaller", 2, true, false, int4smaller, 23 },
  { 212, "int4um", 1, true, false, int4um, 23 },
  { 1912, "int4up", 1, true, false, int4up, 23 },
  { 1900, "int4xor", 2, true, false, int4xor, 23 },
  { 714, "int82", 1, true, false, int82, 21 },
  { 840, "int82div", 2, true, false, int82div, 701 },
  { 1856, "int82eq", 2, true, false, int82eq, 16 },
  { 1861, "int82ge", 2, true, false, int82ge, 16 },
  { 1859, "int82gt", 2, true, false, int82gt, 16 },
  { 1860, "int82le", 2, true, false, int82le, 16 },
  { 1858, "int82lt", 2, true, false, int82lt, 16 },
  { 838, "int82mi", 2, true, false, int82mi, 20 },
  { 839, "int82mul", 2, true, false, int82mul, 20 },
  { 1857, "int82ne", 2, true, false, int82ne, 16 },
  { 837, "int82pl", 2, true, false, int82pl, 20 },
  { 480, "int84", 1, true, false, int84, 23 },
  { 1277, "int84div", 2, true, false, int84div, 701 },
  { 474, "int84eq", 2, true, false, int84eq, 16 },
  { 479, "int84ge", 2, true, false, int84ge, 16 },
  { 477, "int84gt", 2, true, false, int84gt, 16 },
  { 478, "int84le", 2, true, false, int84le, 16 },
  { 476, "int84lt", 2, true, false, int84lt, 16 },
  { 1275, "int84mi", 2, true, false, int84mi, 20 },
  { 1276, "int84mul", 2, true, false, int84mul, 20 },
  { 475, "int84ne", 2, true, false, int84ne, 16 },
  { 1274, "int84pl", 2, true, false, int84pl, 20 },
  { 1836, "int8_accum", 2, true, false, int8_accum, 1231 },
  { 1964, "int8_avg", 1, true, false, int8_avg, 1700 },
  { 2746, "int8_avg_accum", 2, true, false, int8_avg_accum, 1231 },
  { 2965, "int8_avg_collect", 2, true, false, int8_avg_collect, 1016 },
  { 3177, "int8_bool", 1, true, false, int8_bool, 16 },
  { 4069, "int8_bpchar", 1, true, false, int8_bpchar, 1042 },
  { BIGINT2CASHFUNCOID, "int8_cash", 1, true, false, int8_cash, 790 },
  { 3565, "int8_list_agg_noarg2_transfn", 2, false, false, int8_list_agg_noarg2_transfn, 2281 },
  { 3563, "int8_list_agg_transfn", 3, false, false, int8_list_agg_transfn, 2281 },
  { 3343, "int8_mul_cash", 2, true, false, int8_mul_cash, 790 },
  { 1781, "int8_numeric", 1, true, false, int8_numeric, 1700 },
  { 1842, "int8_sum", 2, false, false, int8_sum, 1700 },
  { 2996, "int8_sum_to_int8", 2, false, false, int8_sum_to_int8, 20 },
  { 4168, "int8_text", 1, true, false, int8_text, 25 },
  { BIGINT2CHARFUNCOID, "int8_to_char", 2, true, false, int8_to_char, 25 },
  { 4182, "int8_varchar", 1, true, false, int8_varchar, 1043 },
  { 1396, "int8abs", 1, true, false, int8abs, 20 },
  { 1230, "int8abs", 1, true, false, int8abs, 20 },
  { 1904, "int8and", 2, true, false, int8and, 20 },
  { 466, "int8div", 2, true, false, int8div, 701 },
  { 467, "int8eq", 2, true, false, int8eq, 16 },
  { 472, "int8ge", 2, true, false, int8ge, 16 },
  { 470, "int8gt", 2, true, false, int8gt, 16 },
  { 460, "int8in", 1, true, false, int8in, 20 },
  { 1219, "int8inc", 1, true, false, int8inc, 20 },
  { 2804, "int8inc_any", 2, true, false, int8inc_any, 20 },
  { 2805, "int8inc_float8_float8", 3, true, false, int8inc_float8_float8, 20 },
  { 1236, "int8larger", 2, true, false, int8larger, 20 },
  { 471, "int8le", 2, true, false, int8le, 16 },
  { 469, "int8lt", 2, true, false, int8lt, 16 },
  { 464, "int8mi", 2, true, false, int8mi, 20 },
  { 945, "int8mod", 2, true, false, int8mod, 20 },
  { 947, "int8mod", 2, true, false, int8mod, 20 },
  { 465, "int8mul", 2, true, false, int8mul, 20 },
  { 468, "int8ne", 2, true, false, int8ne, 16 },
  { 1907, "int8not", 1, true, false, int8not, 20 },
  { 1905, "int8or", 2, true, false, int8or, 20 },
  { 461, "int8out", 1, true, false, int8out, 2275 },
  { 463, "int8pl", 2, true, false, int8pl, 20 },
  { 3928, "int8range_canonical", 1, true, false, int8range_canonical, 3926 },
  { 3923, "int8range_subdiff", 2, true, false, int8range_subdiff, 701 },
  { 2408, "int8recv", 1, true, false, int8recv, 20 },
  { 2409, "int8send", 1, true, false, int8send, 17 },
  { 1908, "int8shl", 2, true, false, int8shl, 20 },
  { 1909, "int8shr", 2, true, false, int8shr, 20 },
  { 1237, "int8smaller", 2, true, false, int8smaller, 20 },
  { 462, "int8um", 1, true, false, int8um, 20 },
  { 1910, "int8up", 1, true, false, int8up, 20 },
  { 1906, "int8xor", 2, true, false, int8xor, 20 },
  { 278, "inter_lb", 2, true, false, inter_lb, 16 },
  { 373, "inter_sb", 2, true, false, inter_sb, 16 },
  { 277, "inter_sl", 2, true, false, inter_sl, 16 },
  { 2304, "internal_in", 1, false, false, internal_in, 2281 },
  { 2305, "internal_out", 1, true, false, internal_out, 2275 },
  { INTERVALACCUMFUNCOID, "interval_accum", 2, true, false, interval_accum, 1187 },
  { INTERVALAVGFUNCOID, "interval_avg", 1, true, false, interval_avg, 1186 },
  { 1315, "interval_cmp", 2, true, false, interval_cmp, 23 },
  { 2967, "interval_collect", 2, true, false, interval_collect, 1187 },
  { 1326, "interval_div", 2, true, false, interval_div, 1186 },
  { 1162, "interval_eq", 2, true, false, interval_eq, 16 },
  { 1390, "interval_finite", 1, true, false, interval_finite, 16 },
  { 1166, "interval_ge", 2, true, false, interval_ge, 16 },
  { 1167, "interval_gt", 2, true, false, interval_gt, 16 },
  { 1697, "interval_hash", 1, true, false, interval_hash, 23 },
  { INTERVALINFUNCOID, "interval_in", 3, true, false, interval_in, 1186 },
  { 1295, "interval_justify_days", 1, true, false, interval_justify_days, 1186 },
  { 1175, "interval_justify_hours", 1, true, false, interval_justify_hours, 1186 },
  { 2711, "interval_justify_interval", 1, true, false, interval_justify_interval, 1186 },
  { 1198, "interval_larger", 2, true, false, interval_larger, 1186 },
  { 1165, "interval_le", 2, true, false, interval_le, 16 },
  { 4507, "interval_list_agg_noarg2_transfn", 2, false, false, interval_list_agg_noarg2_transfn, 2281 },
  { 4505, "interval_list_agg_transfn", 3, false, false, interval_list_agg_transfn, 2281 },
  { 1164, "interval_lt", 2, true, false, interval_lt, 16 },
  { 1170, "interval_mi", 2, true, false, interval_mi, 1186 },
  { 1618, "interval_mul", 2, true, false, interval_mul, 1186 },
  { 1163, "interval_ne", 2, true, false, interval_ne, 16 },
  { 1161, "interval_out", 1, true, false, interval_out, 2275 },
  { INTERVALPARTFUNCOID, "interval_part", 2, true, false, interval_part, 701 },
  { 1169, "interval_pl", 2, true, false, interval_pl, 1186 },
  { 2478, "interval_recv", 3, true, false, interval_recv, 1186 },
  { 1194, "interval_reltime", 1, true, false, interval_reltime, 703 },
  { 1200, "interval_scale", 2, true, false, interval_scale, 1186 },
  { 2479, "interval_send", 1, true, false, interval_send, 17 },
  { 1197, "interval_smaller", 2, true, false, interval_smaller, 1186 },
  { 1419, "interval_time", 1, true, false, interval_time, 1083 },
  { INTERVALTOCHARFUNCOID, "interval_to_char", 2, true, false, interval_to_char, 25 },
  { 3918, "interval_transform", 1, true, false, interval_transform, 2281 },
  { INTERVALTRUNCFUNCOID, "interval_trunc", 2, true, false, interval_trunc, 1186 },
  { 1168, "interval_um", 1, true, false, interval_um, 1186 },
  { 2903, "intervaltypmodin", 1, true, false, intervaltypmodin, 23 },
  { 2904, "intervaltypmodout", 1, true, false, intervaltypmodout, 2275 },
  { 248, "intinterval", 2, true, false, intinterval, 16 },
  { 5718, "isubmit_job_on_nodes", 4, false, false, isubmit_job_on_nodes, 23 },
  { 4800, "job_cancel", 1, false, false, job_cancel, 2278 },
  { 4801, "job_finish", 3, false, false, job_finish, 2278 },
  { 4802, "job_submit", 4, false, false, job_submit, 23 },
  { 4803, "job_update", 4, false, false, job_update, 2278 },
  { 321, "json_in", 1, true, false, json_in, 114 },
  { 322, "json_out", 1, true, false, json_out, 2275 },
  { 323, "json_recv", 1, true, false, json_recv, 114 },
  { 324, "json_send", 1, true, false, json_send, 17 },
  { 5714, "kill_snapshot", 0, true, false, kill_snapshot, 2278 },
  { 2302, "language_handler_in", 1, false, false, language_handler_in, 2280 },
  { 2303, "language_handler_out", 1, true, false, language_handler_out, 2275 },
  { 4075, "last_day", 1, true, false, last_day, 1114 },
  { LASTVALFUNCOID, "lastval", 0, true, false, lastval, 20 },
  { 1713, "length_in_encoding", 2, true, false, length_in_encoding, 23 },
  { 1637, "like_escape", 2, true, false, like_escape, 25 },
  { 2009, "like_escape_bytea", 2, true, false, like_escape_bytea, 17 },
  { 1825, "likejoinsel", 5, true, false, likejoinsel, 701 },
  { 1819, "likesel", 4, true, false, likesel, 701 },
  { 1493, "line_construct_pp", 2, true, false, line_construct_pp, 628 },
  { 239, "line_distance", 2, true, false, line_distance, 701 },
  { 1492, "line_eq", 2, true, false, line_eq, 16 },
  { 1415, "line_horizontal", 1, true, false, line_horizontal, 16 },
  { 1499, "line_horizontal", 1, true, false, line_horizontal, 16 },
  { 1490, "line_in", 1, true, false, line_in, 628 },
  { 1494, "line_interpt", 2, true, false, line_interpt, 600 },
  { 1495, "line_intersect", 2, true, false, line_intersect, 16 },
  { 1491, "line_out", 1, true, false, line_out, 2275 },
  { 1412, "line_parallel", 2, true, false, line_parallel, 16 },
  { 1496, "line_parallel", 2, true, false, line_parallel, 16 },
  { 1413, "line_perp", 2, true, false, line_perp, 16 },
  { 1497, "line_perp", 2, true, false, line_perp, 16 },
  { 2488, "line_recv", 1, true, false, line_recv, 628 },
  { 2489, "line_send", 1, true, false, line_send, 17 },
  { 1414, "line_vertical", 1, true, false, line_vertical, 16 },
  { 1498, "line_vertical", 1, true, false, line_vertical, 16 },
  { 3551, "list_agg_finalfn", 1, false, false, list_agg_finalfn, 25 },
  { 3553, "list_agg_noarg2_transfn", 2, false, false, list_agg_noarg2_transfn, 2281 },
  { 3550, "list_agg_transfn", 3, false, false, list_agg_transfn, 2281 },
  { 953, "lo_close", 1, true, false, lo_close, 23 },
  { 957, "lo_creat", 1, true, false, lo_creat, 26 },
  { 715, "lo_create", 1, true, false, lo_create, 26 },
  { 765, "lo_export", 2, true, false, lo_export, 23 },
  { 764, "lo_import", 1, true, false, lo_import, 26 },
  { 767, "lo_import_with_oid", 2, true, false, lo_import_with_oid, 26 },
  { 956, "lo_lseek", 3, true, false, lo_lseek, 23 },
  { 952, "lo_open", 2, true, false, lo_open, 23 },
  { 958, "lo_tell", 1, true, false, lo_tell, 23 },
  { 1004, "lo_truncate", 2, true, false, lo_truncate, 23 },
  { 964, "lo_unlink", 1, true, false, lo_unlink, 23 },
  { 4373, "local_bgwriter_stat", 0, false, true, local_bgwriter_stat, 2249 },
  { 4371, "local_ckpt_stat", 0, false, true, local_ckpt_stat, 2249 },
  { 4384, "local_double_write_stat", 0, false, true, local_double_write_stat, 2249 },
  { 4361, "local_pagewriter_stat", 0, false, true, local_pagewriter_stat, 2249 },
  { 3250, "local_recovery_status", 0, false, true, local_recovery_status, 2249 },
  { 4388, "local_redo_stat", 0, false, true, local_redo_stat, 2249 },
  { 3299, "local_rto_stat", 0, false, true, local_rto_stat, 2249 },
  { 4375, "local_single_flush_dw_stat", 0, false, true, local_single_flush_dw_stat, 2249 },
  { 5730, "locktag_decode", 1, true, false, locktag_decode, 25 },
  { 954, "loread", 2, true, false, loread, 17 },
  { 870, "lower", 1, true, false, lower, 25 },
  { 955, "lowrite", 2, true, false, lowrite, 23 },
  { LPADFUNCOID, "lpad", 3, true, false, lpad, 25 },
  { 225, "lseg_center", 1, true, false, lseg_center, 600 },
  { 1532, "lseg_center", 1, true, false, lseg_center, 600 },
  { 993, "lseg_construct", 2, true, false, lseg_construct, 601 },
  { 361, "lseg_distance", 2, true, false, lseg_distance, 701 },
  { 999, "lseg_eq", 2, true, false, lseg_eq, 16 },
  { 1486, "lseg_ge", 2, true, false, lseg_ge, 16 },
  { 1485, "lseg_gt", 2, true, false, lseg_gt, 16 },
  { 1411, "lseg_horizontal", 1, true, false, lseg_horizontal, 16 },
  { 998, "lseg_horizontal", 1, true, false, lseg_horizontal, 16 },
  { 119, "lseg_in", 1, true, false, lseg_in, 601 },
  { 362, "lseg_interpt", 2, true, false, lseg_interpt, 600 },
  { 994, "lseg_intersect", 2, true, false, lseg_intersect, 16 },
  { 1484, "lseg_le", 2, true, false, lseg_le, 16 },
  { 1530, "lseg_length", 1, true, false, lseg_length, 701 },
  { 1487, "lseg_length", 1, true, false, lseg_length, 701 },
  { 1483, "lseg_lt", 2, true, false, lseg_lt, 16 },
  { 1482, "lseg_ne", 2, true, false, lseg_ne, 16 },
  { 120, "lseg_out", 1, true, false, lseg_out, 2275 },
  { 1408, "lseg_parallel", 2, true, false, lseg_parallel, 16 },
  { 995, "lseg_parallel", 2, true, false, lseg_parallel, 16 },
  { 1409, "lseg_perp", 2, true, false, lseg_perp, 16 },
  { 996, "lseg_perp", 2, true, false, lseg_perp, 16 },
  { 2480, "lseg_recv", 1, true, false, lseg_recv, 601 },
  { 2481, "lseg_send", 1, true, false, lseg_send, 17 },
  { 1410, "lseg_vertical", 1, true, false, lseg_vertical, 16 },
  { 997, "lseg_vertical", 1, true, false, lseg_vertical, 16 },
  { LTRIMFUNCOID, "ltrim", 2, true, false, ltrim, 25 },
  { LTRIMPARAFUNCOID, "ltrim1", 1, true, false, ltrim1, 25 },
  { 3145, "macaddr_and", 2, true, false, macaddr_and, 829 },
  { 836, "macaddr_cmp", 2, true, false, macaddr_cmp, 23 },
  { 830, "macaddr_eq", 2, true, false, macaddr_eq, 16 },
  { 834, "macaddr_ge", 2, true, false, macaddr_ge, 16 },
  { 833, "macaddr_gt", 2, true, false, macaddr_gt, 16 },
  { 436, "macaddr_in", 1, true, false, macaddr_in, 829 },
  { 832, "macaddr_le", 2, true, false, macaddr_le, 16 },
  { 831, "macaddr_lt", 2, true, false, macaddr_lt, 16 },
  { 835, "macaddr_ne", 2, true, false, macaddr_ne, 16 },
  { 3144, "macaddr_not", 1, true, false, macaddr_not, 829 },
  { 3146, "macaddr_or", 2, true, false, macaddr_or, 829 },
  { 437, "macaddr_out", 1, true, false, macaddr_out, 2275 },
  { 2494, "macaddr_recv", 1, true, false, macaddr_recv, 829 },
  { 2495, "macaddr_send", 1, true, false, macaddr_send, 17 },
  { 753, "macaddr_trunc", 1, true, false, macaddr_trunc, 829 },
  { 1365, "makeaclitem", 4, true, false, makeaclitem, 1033 },
  { 2321, "md5_bytea", 1, true, false, md5_bytea, 25 },
  { 2311, "md5_text", 1, true, false, md5_text, 25 },
  { 5557, "median_float8_finalfn", 1, false, false, median_float8_finalfn, 701 },
  { 5558, "median_interval_finalfn", 1, false, false, median_interval_finalfn, 1186 },
  { 5559, "median_transfn", 2, false, false, median_transfn, 2281 },
  { 676, "mktinterval", 2, true, false, mktinterval, 704 },
  { 1481, "mktinterval", 2, true, false, mktinterval, 704 },
  { 4462, "mode_final", 1, false, false, mode_final, 2283 },
  { 3481, "model_train_opt", 2, true, true, model_train_opt, 2249 },
  { 6201, "mot_global_memory_detail", 0, false, true, mot_global_memory_detail, 2249 },
  { 6202, "mot_local_memory_detail", 0, false, true, mot_local_memory_detail, 2249 },
  { 6200, "mot_session_memory_detail", 0, false, true, mot_session_memory_detail, 2249 },
  { 1624, "mul_d_interval", 2, true, false, mul_d_interval, 1186 },
  { 408, "name_bpchar", 1, true, false, name_bpchar, 1042 },
  { 406, "name_text", 1, true, false, name_text, 25 },
  { 1401, "name_text", 1, true, false, name_text, 1043 },
  { 62, "nameeq", 2, true, false, nameeq, 16 },
  { 658, "namege", 2, true, false, namege, 16 },
  { 657, "namegt", 2, true, false, namegt, 16 },
  { 1635, "nameiclike", 2, true, false, nameiclike, 16 },
  { 1636, "nameicnlike", 2, true, false, nameicnlike, 16 },
  { 1240, "nameicregexeq", 2, true, false, nameicregexeq, 16 },
  { 1241, "nameicregexne", 2, true, false, nameicregexne, 16 },
  { 34, "namein", 1, true, false, namein, 19 },
  { 656, "namele", 2, true, false, namele, 16 },
  { 1571, "namelike", 2, true, false, namelike, 16 },
  { 858, "namelike", 2, true, false, namelike, 16 },
  { 655, "namelt", 2, true, false, namelt, 16 },
  { 659, "namene", 2, true, false, namene, 16 },
  { 859, "namenlike", 2, true, false, namenlike, 16 },
  { 1572, "namenlike", 2, true, false, namenlike, 16 },
  { 35, "nameout", 1, true, false, nameout, 2275 },
  { 2422, "namerecv", 1, true, false, namerecv, 19 },
  { 79, "nameregexeq", 2, true, false, nameregexeq, 16 },
  { 1252, "nameregexne", 2, true, false, nameregexne, 16 },
  { 2423, "namesend", 1, true, false, namesend, 17 },
  { 106, "neqjoinsel", 5, true, false, neqjoinsel, 701 },
  { NEQSELRETURNOID, "neqsel", 4, true, false, neqsel, 701 },
  { 698, "network_broadcast", 1, true, false, network_broadcast, 869 },
  { 926, "network_cmp", 2, true, false, network_cmp, 23 },
  { 920, "network_eq", 2, true, false, network_eq, 16 },
  { 711, "network_family", 1, true, false, network_family, 23 },
  { 924, "network_ge", 2, true, false, network_ge, 16 },
  { 923, "network_gt", 2, true, false, network_gt, 16 },
  { 699, "network_host", 1, true, false, network_host, 25 },
  { 1362, "network_hostmask", 1, true, false, network_hostmask, 869 },
  { 922, "network_le", 2, true, false, network_le, 16 },
  { 921, "network_lt", 2, true, false, network_lt, 16 },
  { 697, "network_masklen", 1, true, false, network_masklen, 23 },
  { 925, "network_ne", 2, true, false, network_ne, 16 },
  { 696, "network_netmask", 1, true, false, network_netmask, 869 },
  { 683, "network_network", 1, true, false, network_network, 650 },
  { 730, "network_show", 1, true, false, network_show, 25 },
  { 927, "network_sub", 2, true, false, network_sub, 16 },
  { 928, "network_subeq", 2, true, false, network_subeq, 16 },
  { 929, "network_sup", 2, true, false, network_sup, 16 },
  { 930, "network_supeq", 2, true, false, network_supeq, 16 },
  { 4076, "next_day_int", 2, true, false, next_day_int, 1114 },
  { 4077, "next_day_str", 2, true, false, next_day_str, 1114 },
  { NEXTVALFUNCOID, "nextval_oid", 1, true, false, nextval_oid, 20 },
  { 3788, "ngram_end", 1, true, false, ngram_end, 2278 },
  { 3789, "ngram_lextype", 1, true, false, ngram_lextype, 2281 },
  { 3787, "ngram_nexttoken", 3, true, false, ngram_nexttoken, 2281 },
  { 3786, "ngram_start", 3, true, false, ngram_start, 2281 },
  { 1828, "nlikejoinsel", 5, true, false, nlikejoinsel, 701 },
  { 1822, "nlikesel", 4, true, false, nlikesel, 701 },
  { 3950, "node_oid_name", 1, true, false, node_oid_name, 2275 },
  { NOWFUNCOID, "now", 0, true, false, now, 1184 },
  { TRANSACTIONTIMESTAMPFUNCOID, "now", 0, true, false, now, 1184 },
  { 1703, "numeric", 2, true, false, numeric, 1700 },
  { 1705, "numeric_abs", 1, true, false, numeric_abs, 1700 },
  { 1704, "numeric_abs", 1, true, false, numeric_abs, 1700 },
  { 1833, "numeric_accum", 2, true, false, numeric_accum, 1231 },
  { 1724, "numeric_add", 2, true, false, numeric_add, 1700 },
  { 1837, "numeric_avg", 1, true, false, numeric_avg, 1700 },
  { 2858, "numeric_avg_accum", 2, true, false, numeric_avg_accum, 1231 },
  { 2964, "numeric_avg_collect", 2, true, false, numeric_avg_collect, 1231 },
  { 4072, "numeric_bpchar", 1, true, false, numeric_bpchar, 1042 },
  { NUMERIC2CASHFUNCOID, "numeric_cash", 1, true, false, numeric_cash, 790 },
  { 1711, "numeric_ceil", 1, true, false, numeric_ceil, 1700 },
  { 2167, "numeric_ceil", 1, true, false, numeric_ceil, 1700 },
  { 1769, "numeric_cmp", 2, true, false, numeric_cmp, 23 },
  { 2968, "numeric_collect", 2, true, false, numeric_collect, 1231 },
  { 1727, "numeric_div", 2, true, false, numeric_div, 1700 },
  { 1973, "numeric_div_trunc", 2, true, false, numeric_div_trunc, 1700 },
  { 1980, "numeric_div_trunc", 2, true, false, numeric_div_trunc, 1700 },
  { 1718, "numeric_eq", 2, true, false, numeric_eq, 16 },
  { 1732, "numeric_exp", 1, true, false, numeric_exp, 1700 },
  { 1733, "numeric_exp", 1, true, false, numeric_exp, 1700 },
  { 1376, "numeric_fac", 1, true, false, numeric_fac, 1700 },
  { 111, "numeric_fac", 1, true, false, numeric_fac, 1700 },
  { 1745, "numeric_float4", 1, true, false, numeric_float4, 700 },
  { NUMTOFLOAT8FUNCOID, "numeric_float8", 1, true, false, numeric_float8, 701 },
  { 1712, "numeric_floor", 1, true, false, numeric_floor, 1700 },
  { 1721, "numeric_ge", 2, true, false, numeric_ge, 16 },
  { 1720, "numeric_gt", 2, true, false, numeric_gt, 16 },
  { 1701, "numeric_in", 3, true, false, numeric_in, 1700 },
  { 1764, "numeric_inc", 1, true, false, numeric_inc, 1700 },
  { 5522, "numeric_int1", 1, true, false, numeric_int1, 5545 },
  { 1783, "numeric_int2", 1, true, false, numeric_int2, 21 },
  { 1744, "numeric_int4", 1, true, false, numeric_int4, 23 },
  { 1779, "numeric_int8", 1, true, false, numeric_int8, 20 },
  { 3842, "numeric_interval", 1, true, false, numeric_interval, 1186 },
  { 1767, "numeric_larger", 2, true, false, numeric_larger, 1700 },
  { 1723, "numeric_le", 2, true, false, numeric_le, 16 },
  { 3577, "numeric_list_agg_noarg2_transfn", 2, false, false, numeric_list_agg_noarg2_transfn, 2281 },
  { 3575, "numeric_list_agg_transfn", 3, false, false, numeric_list_agg_transfn, 2281 },
  { 1734, "numeric_ln", 1, true, false, numeric_ln, 1700 },
  { 1735, "numeric_ln", 1, true, false, numeric_ln, 1700 },
  { 1736, "numeric_log", 2, true, false, numeric_log, 1700 },
  { 1737, "numeric_log", 2, true, false, numeric_log, 1700 },
  { 1722, "numeric_lt", 2, true, false, numeric_lt, 16 },
  { 1728, "numeric_mod", 2, true, false, numeric_mod, 1700 },
  { 1729, "numeric_mod", 2, true, false, numeric_mod, 1700 },
  { 1726, "numeric_mul", 2, true, false, numeric_mul, 1700 },
  { 1719, "numeric_ne", 2, true, false, numeric_ne, 16 },
  { 1702, "numeric_out", 1, true, false, numeric_out, 2275 },
  { 1739, "numeric_power", 2, true, false, numeric_power, 1700 },
  { 1738, "numeric_power", 2, true, false, numeric_power, 1700 },
  { 2169, "numeric_power", 2, true, false, numeric_power, 1700 },
  { 2460, "numeric_recv", 3, true, false, numeric_recv, 1700 },
  { 1707, "numeric_round", 2, true, false, numeric_round, 1700 },
  { 2461, "numeric_send", 1, true, false, numeric_send, 17 },
  { 1706, "numeric_sign", 1, true, false, numeric_sign, 1700 },
  { 1766, "numeric_smaller", 2, true, false, numeric_smaller, 1700 },
  { 3283, "numeric_sortsupport", 1, true, false, numeric_sortsupport, 2278 },
  { 1731, "numeric_sqrt", 1, true, false, numeric_sqrt, 1700 },
  { 1730, "numeric_sqrt", 1, true, false, numeric_sqrt, 1700 },
  { 2596, "numeric_stddev_pop", 1, true, false, numeric_stddev_pop, 1700 },
  { 1839, "numeric_stddev_samp", 1, true, false, numeric_stddev_samp, 1700 },
  { 1725, "numeric_sub", 2, true, false, numeric_sub, 1700 },
  { 4171, "numeric_text", 1, true, false, numeric_text, 25 },
  { NUMERIC2CHARFUNCOID, "numeric_to_char", 2, true, false, numeric_to_char, 25 },
  { TONUMBERFUNCOID, "numeric_to_number", 2, true, false, numeric_to_number, 1700 },
  { 3157, "numeric_transform", 1, true, false, numeric_transform, 2281 },
  { 1709, "numeric_trunc", 2, true, false, numeric_trunc, 1700 },
  { 1771, "numeric_uminus", 1, true, false, numeric_uminus, 1700 },
  { 1915, "numeric_uplus", 1, true, false, numeric_uplus, 1700 },
  { 2514, "numeric_var_pop", 1, true, false, numeric_var_pop, 1700 },
  { 1838, "numeric_var_samp", 1, true, false, numeric_var_samp, 1700 },
  { 4183, "numeric_varchar", 1, true, false, numeric_varchar, 1043 },
  { 2917, "numerictypmodin", 1, true, false, numerictypmodin, 23 },
  { 2918, "numerictypmodout", 1, true, false, numerictypmodout, 2275 },
  { 3924, "numrange_subdiff", 2, true, false, numrange_subdiff, 701 },
  { 3172, "numtodsinterval", 2, true, false, numtodsinterval, 1186 },
  { 3961, "nvarchar2", 3, true, false, nvarchar2, 3969 },
  { 3962, "nvarchar2in", 3, true, false, nvarchar2in, 3969 },
  { 3963, "nvarchar2out", 1, true, false, nvarchar2out, 2275 },
  { 3966, "nvarchar2recv", 3, true, false, nvarchar2recv, 3969 },
  { 3967, "nvarchar2send", 1, true, false, nvarchar2send, 17 },
  { 3964, "nvarchar2typmodin", 1, true, false, nvarchar2typmodin, 23 },
  { 3965, "nvarchar2typmodout", 1, true, false, nvarchar2typmodout, 2275 },
  { 184, "oideq", 2, true, false, oideq, 16 },
  { 1639, "oidge", 2, true, false, oidge, 16 },
  { 1638, "oidgt", 2, true, false, oidgt, 16 },
  { 1798, "oidin", 1, true, false, oidin, 26 },
  { 1965, "oidlarger", 2, true, false, oidlarger, 26 },
  { 717, "oidle", 2, true, false, oidle, 16 },
  { 716, "oidlt", 2, true, false, oidlt, 16 },
  { 185, "oidne", 2, true, false, oidne, 16 },
  { 1799, "oidout", 1, true, false, oidout, 2275 },
  { 2418, "oidrecv", 1, true, false, oidrecv, 26 },
  { 2419, "oidsend", 1, true, false, oidsend, 17 },
  { 1966, "oidsmaller", 2, true, false, oidsmaller, 26 },
  { 1288, "oidtoi8", 1, true, false, oidtoi8, 20 },
  { 679, "oidvectoreq", 2, true, false, oidvectoreq, 16 },
  { 680, "oidvectorge", 2, true, false, oidvectorge, 16 },
  { 681, "oidvectorgt", 2, true, false, oidvectorgt, 16 },
  { 54, "oidvectorin", 1, true, false, oidvectorin, 30 },
  { 91, "oidvectorin_extend", 1, true, false, oidvectorin_extend, 32 },
  { 678, "oidvectorle", 2, true, false, oidvectorle, 16 },
  { 677, "oidvectorlt", 2, true, false, oidvectorlt, 16 },
  { 619, "oidvectorne", 2, true, false, oidvectorne, 16 },
  { 55, "oidvectorout", 1, true, false, oidvectorout, 2275 },
  { 92, "oidvectorout_extend", 1, true, false, oidvectorout_extend, 2275 },
  { 2420, "oidvectorrecv", 1, true, false, oidvectorrecv, 30 },
  { 3122, "oidvectorrecv_extend", 1, true, false, oidvectorrecv_extend, 32 },
  { 2421, "oidvectorsend", 1, true, false, oidvectorsend, 17 },
  { 3123, "oidvectorsend_extend", 1, true, false, oidvectorsend_extend, 17 },
  { 1349, "oidvectortypes", 1, true, false, oidvectortypes, 25 },
  { 136, "on_pb", 2, true, false, on_pb, 16 },
  { 959, "on_pl", 2, true, false, on_pl, 16 },
  { 137, "on_ppath", 2, true, false, on_ppath, 16 },
  { 369, "on_ps", 2, true, false, on_ps, 16 },
  { 372, "on_sb", 2, true, false, on_sb, 16 },
  { 960, "on_sl", 2, true, false, on_sl, 16 },
  { 2306, "opaque_in", 1, false, false, opaque_in, 2282 },
  { 2307, "opaque_out", 1, true, false, opaque_out, 2275 },
  { 4448, "ordered_set_transition", 2, false, false, ordered_set_transition, 2281 },
  { 1308, "overlaps_time", 4, false, false, overlaps_time, 16 },
  { 1304, "overlaps_timestamp", 4, false, false, overlaps_timestamp, 16 },
  { 2041, "overlaps_timestamp", 4, false, false, overlaps_timestamp, 16 },
  { 1271, "overlaps_timetz", 4, false, false, overlaps_timetz, 16 },
  { 1435, "path_add", 2, true, false, path_add, 602 },
  { 1436, "path_add_pt", 2, true, false, path_add_pt, 602 },
  { 979, "path_area", 1, true, false, path_area, 701 },
  { 226, "path_center", 1, true, false, path_center, 600 },
  { 1533, "path_center", 1, true, false, path_center, 600 },
  { 1433, "path_close", 1, true, false, path_close, 602 },
  { 370, "path_distance", 2, true, false, path_distance, 701 },
  { 1439, "path_div_pt", 2, true, false, path_div_pt, 602 },
  { 121, "path_in", 1, true, false, path_in, 602 },
  { 973, "path_inter", 2, true, false, path_inter, 16 },
  { 1430, "path_isclosed", 1, true, false, path_isclosed, 16 },
  { 1431, "path_isopen", 1, true, false, path_isopen, 16 },
  { 1531, "path_length", 1, true, false, path_length, 701 },
  { 987, "path_length", 1, true, false, path_length, 701 },
  { 1438, "path_mul_pt", 2, true, false, path_mul_pt, 602 },
  { 984, "path_n_eq", 2, true, false, path_n_eq, 16 },
  { 986, "path_n_ge", 2, true, false, path_n_ge, 16 },
  { 983, "path_n_gt", 2, true, false, path_n_gt, 16 },
  { 985, "path_n_le", 2, true, false, path_n_le, 16 },
  { 982, "path_n_lt", 2, true, false, path_n_lt, 16 },
  { 1545, "path_npoints", 1, true, false, path_npoints, 23 },
  { 1432, "path_npoints", 1, true, false, path_npoints, 23 },
  { 1434, "path_open", 1, true, false, path_open, 602 },
  { 122, "path_out", 1, true, false, path_out, 2275 },
  { 1449, "path_poly", 1, true, false, path_poly, 604 },
  { 2482, "path_recv", 1, true, false, path_recv, 602 },
  { 2483, "path_send", 1, true, false, path_send, 17 },
  { 1437, "path_sub_pt", 2, true, false, path_sub_pt, 602 },
  { 4453, "percentile_cont_float8_final", 3, false, false, percentile_cont_float8_final, 701 },
  { 4455, "percentile_cont_interval_final", 3, false, false, percentile_cont_interval_final, 1186 },
  { 2886, "pg_advisory_lock_int4", 2, true, false, pg_advisory_lock_int4, 2278 },
  { 2880, "pg_advisory_lock_int8", 1, true, false, pg_advisory_lock_int8, 2278 },
  { 2887, "pg_advisory_lock_shared_int4", 2, true, false, pg_advisory_lock_shared_int4, 2278 },
  { 2881, "pg_advisory_lock_shared_int8", 1, true, false, pg_advisory_lock_shared_int8, 2278 },
  { 9016, "pg_advisory_lock_sp_db_int4", 3, true, false, pg_advisory_lock_sp_db_int4, 2278 },
  { 2892, "pg_advisory_unlock_all", 0, true, false, pg_advisory_unlock_all, 2278 },
  { 2890, "pg_advisory_unlock_int4", 2, true, false, pg_advisory_unlock_int4, 16 },
  { 2884, "pg_advisory_unlock_int8", 1, true, false, pg_advisory_unlock_int8, 16 },
  { 2891, "pg_advisory_unlock_shared_int4", 2, true, false, pg_advisory_unlock_shared_int4, 16 },
  { 2885, "pg_advisory_unlock_shared_int8", 1, true, false, pg_advisory_unlock_shared_int8, 16 },
  { 9015, "pg_advisory_unlock_sp_db_int4", 3, true, false, pg_advisory_unlock_sp_db_int4, 16 },
  { 3093, "pg_advisory_xact_lock_int4", 2, true, false, pg_advisory_xact_lock_int4, 2278 },
  { 3089, "pg_advisory_xact_lock_int8", 1, true, false, pg_advisory_xact_lock_int8, 2278 },
  { 3094, "pg_advisory_xact_lock_shared_int4", 2, true, false, pg_advisory_xact_lock_shared_int4, 2278 },
  { 3090, "pg_advisory_xact_lock_shared_int8", 1, true, false, pg_advisory_xact_lock_shared_int8, 2278 },
  { 4081, "pg_autovac_coordinator", 1, false, true, pg_autovac_coordinator, 25 },
  { 3223, "pg_autovac_status", 1, true, true, pg_autovac_status, 2249 },
  { 4080, "pg_autovac_timeout", 1, false, true, pg_autovac_timeout, 20 },
  { 3083, "pg_available_extension_versions", 0, true, true, pg_available_extension_versions, 2249 },
  { 3082, "pg_available_extensions", 0, true, true, pg_available_extensions, 2249 },
  { PGBACKENDPIDFUNCOID, "pg_backend_pid", 0, true, false, pg_backend_pid, 20 },
  { 4130, "pg_buffercache_pages", 0, false, true, pg_buffercache_pages, 2249 },
  { 2171, "pg_cancel_backend", 1, true, false, pg_cancel_backend, 16 },
  { 3213, "pg_cancel_invalid_query", 0, true, false, pg_cancel_invalid_query, 16 },
  { 4655, "pg_cbm_force_track", 2, true, false, pg_cbm_force_track, 25 },
  { 4653, "pg_cbm_get_changed_block", 2, true, true, pg_cbm_get_changed_block, 2249 },
  { 4652, "pg_cbm_get_merged_file", 2, true, false, pg_cbm_get_merged_file, 25 },
  { 4654, "pg_cbm_recycle_file", 1, true, false, pg_cbm_recycle_file, 25 },
  { 4660, "pg_cbm_rotate_file", 1, true, false, pg_cbm_rotate_file, 25 },
  { 4651, "pg_cbm_tracked_location", 0, true, false, pg_cbm_tracked_location, 25 },
  { PGCHECKAUTHIDFUNCOID, "pg_check_authid", 1, true, false, pg_check_authid, 16 },
  { 1999, "pg_check_xidlimit", 0, true, false, pg_check_xidlimit, 16 },
  { 4209, "pg_clean_region_info", 0, true, false, pg_clean_region_info, 1043 },
  { PGCLIENTENCODINGFUNCOID, "pg_client_encoding", 0, true, false, pg_client_encoding, 19 },
  { 3162, "pg_collation_for", 1, false, false, pg_collation_for, 25 },
  { 3815, "pg_collation_is_visible", 1, true, false, pg_collation_is_visible, 16 },
  { PGCOLUMNSIZEFUNCOID, "pg_column_size", 1, true, false, pg_column_size, 23 },
  { 1987, "pg_comm_delay", 0, true, true, pg_comm_delay, 2249 },
  { 1984, "pg_comm_recv_stream", 0, true, true, pg_comm_recv_stream, 2249 },
  { 1985, "pg_comm_send_stream", 0, true, true, pg_comm_send_stream, 2249 },
  { 1986, "pg_comm_status", 0, true, true, pg_comm_status, 2249 },
  { 2034, "pg_conf_load_time", 0, true, false, pg_conf_load_time, 1184 },
  { 3442, "pg_control_checkpoint", 0, true, true, pg_control_checkpoint, 2249 },
  { 3843, "pg_control_group_config", 0, true, false, pg_control_group_config, 25 },
  { 3441, "pg_control_system", 0, true, true, pg_control_system, 2249 },
  { 2093, "pg_conversion_is_visible", 1, true, false, pg_conversion_is_visible, 16 },
  { CONVERTFUNCOID, "pg_convert", 3, true, false, pg_convert, 17 },
  { CONVERTFROMFUNCOID, "pg_convert_from", 2, true, false, pg_convert_from, 25 },
  { CONVERTTOFUNCOID, "pg_convert_to", 2, true, false, pg_convert_to, 17 },
  { 3198, "pg_convert_to_nocase", 2, true, false, pg_convert_to_nocase, 17 },
  { 4215, "pg_create_logical_replication_slot", 2, false, false, pg_create_logical_replication_slot, 2249 },
  { 3779, "pg_create_physical_replication_slot", 2, false, false, pg_create_physical_replication_slot, 2249 },
  { 3790, "pg_create_physical_replication_slot_extern", 3, false, false, pg_create_physical_replication_slot_extern, 2249 },
  { 3098, "pg_create_restore_point", 1, true, false, pg_create_restore_point, 25 },
  { 3267, "pg_current_sessid", 0, true, false, pg_current_sessid, 20 },
  { 3266, "pg_current_sessionid", 0, false, false, pg_current_sessionid, 25 },
  { 3265, "pg_current_userid", 0, false, false, pg_current_userid, 26 },
  { 2852, "pg_current_xlog_insert_location", 0, true, false, pg_current_xlog_insert_location, 25 },
  { 2849, "pg_current_xlog_location", 0, true, false, pg_current_xlog_location, 25 },
  { 2511, "pg_cursor", 0, true, true, pg_cursor, 2249 },
  { 2168, "pg_database_size_name", 1, true, false, pg_database_size_name, 20 },
  { 2324, "pg_database_size_oid", 1, true, false, pg_database_size_oid, 20 },
  { 3781, "pg_delete_audit", 2, false, false, pg_delete_audit, 2278 },
  { 3537, "pg_describe_object", 3, true, false, pg_describe_object, 25 },
  { 4657, "pg_disable_delay_ddl_recycle", 2, true, false, pg_disable_delay_ddl_recycle, 2249 },
  { 4659, "pg_disable_delay_xlog_recycle", 0, true, false, pg_disable_delay_xlog_recycle, 2278 },
  { 3783, "pg_drop_replication_slot", 1, false, false, pg_drop_replication_slot, 2278 },
  { 4656, "pg_enable_delay_ddl_recycle", 0, true, false, pg_enable_delay_ddl_recycle, 25 },
  { 4658, "pg_enable_delay_xlog_recycle", 0, true, false, pg_enable_delay_xlog_recycle, 2278 },
  { 2319, "pg_encoding_max_length_sql", 1, true, false, pg_encoding_max_length_sql, 23 },
  { 3809, "pg_export_snapshot", 0, true, false, pg_export_snapshot, 25 },
  { 4396, "pg_export_snapshot_and_csn", 0, true, false, pg_export_snapshot_and_csn, 2249 },
  { 3086, "pg_extension_config_dump", 2, true, false, pg_extension_config_dump, 2278 },
  { 3084, "pg_extension_update_paths", 1, true, true, pg_extension_update_paths, 2249 },
  { 3454, "pg_filenode_relation", 2, true, false, pg_filenode_relation, 2205 },
  { 2081, "pg_function_is_visible", 1, true, false, pg_function_is_visible, 16 },
  { 1387, "pg_get_constraintdef", 1, true, false, pg_get_constraintdef, 25 },
  { 2508, "pg_get_constraintdef_ext", 2, true, false, pg_get_constraintdef_ext, 25 },
  { 1716, "pg_get_expr", 2, true, false, pg_get_expr, 25 },
  { 2509, "pg_get_expr_ext", 3, true, false, pg_get_expr_ext, 25 },
  { 3316, "pg_get_flush_lsn", 0, false, false, pg_get_flush_lsn, 25 },
  { 2162, "pg_get_function_arguments", 1, true, false, pg_get_function_arguments, 25 },
  { 2232, "pg_get_function_identity_arguments", 1, true, false, pg_get_function_identity_arguments, 25 },
  { 2165, "pg_get_function_result", 1, true, false, pg_get_function_result, 25 },
  { 2098, "pg_get_functiondef", 1, true, false, pg_get_functiondef, 2249 },
  { 3596, "pg_get_gtt_relstats", 1, true, true, pg_get_gtt_relstats, 2249 },
  { 3597, "pg_get_gtt_statistics", 3, false, true, pg_get_gtt_statistics, 2249 },
  { 1643, "pg_get_indexdef", 1, true, false, pg_get_indexdef, 25 },
  { 2507, "pg_get_indexdef_ext", 3, true, false, pg_get_indexdef_ext, 25 },
  { 1686, "pg_get_keywords", 0, true, true, pg_get_keywords, 2249 },
  { 5015, "pg_get_nodename", 0, true, false, pg_get_nodename, 25 },
  { 6003, "pg_get_replication_slot_name", 0, true, false, pg_get_replication_slot_name, 25 },
  { 3784, "pg_get_replication_slots", 0, false, true, pg_get_replication_slots, 2249 },
  { 1573, "pg_get_ruledef", 1, true, false, pg_get_ruledef, 25 },
  { 2504, "pg_get_ruledef_ext", 2, true, false, pg_get_ruledef_ext, 25 },
  { 1998, "pg_get_running_xacts", 0, true, true, pg_get_running_xacts, 2249 },
  { 1665, "pg_get_serial_sequence", 2, true, false, pg_get_serial_sequence, 25 },
  { 3317, "pg_get_sync_flush_lsn", 0, false, false, pg_get_sync_flush_lsn, 25 },
  { 4443, "pg_get_tabledef_ext", 1, true, false, pg_get_tabledef_ext, 25 },
  { 1662, "pg_get_triggerdef", 1, true, false, pg_get_triggerdef, 25 },
  { 2730, "pg_get_triggerdef_ext", 2, true, false, pg_get_triggerdef_ext, 25 },
  { 1642, "pg_get_userbyid", 1, true, false, pg_get_userbyid, 19 },
  { 2097, "pg_get_variable_info", 0, true, true, pg_get_variable_info, 2249 },
  { 1641, "pg_get_viewdef", 1, true, false, pg_get_viewdef, 25 },
  { 2506, "pg_get_viewdef_ext", 2, true, false, pg_get_viewdef_ext, 25 },
  { 1640, "pg_get_viewdef_name", 1, true, false, pg_get_viewdef_name, 25 },
  { 2505, "pg_get_viewdef_name_ext", 2, true, false, pg_get_viewdef_name_ext, 25 },
  { 3159, "pg_get_viewdef_wrap", 2, true, false, pg_get_viewdef_wrap, 25 },
  { 2000, "pg_get_xidlimit", 0, true, true, pg_get_xidlimit, 2249 },
  { 3598, "pg_gtt_attached_pid", 1, true, true, pg_gtt_attached_pid, 2249 },
  { 2710, "pg_has_role_id", 2, true, false, pg_has_role_id, 16 },
  { 2708, "pg_has_role_id_id", 3, true, false, pg_has_role_id_id, 16 },
  { 2707, "pg_has_role_id_name", 3, true, false, pg_has_role_id_name, 16 },
  { 2709, "pg_has_role_name", 2, true, false, pg_has_role_name, 16 },
  { 2706, "pg_has_role_name_id", 3, true, false, pg_has_role_name_id, 16 },
  { 2705, "pg_has_role_name_name", 3, true, false, pg_has_role_name_name, 16 },
  { 2998, "pg_indexes_size", 1, true, false, pg_indexes_size, 20 },
  { 3810, "pg_is_in_recovery", 0, true, false, pg_is_in_recovery, 16 },
  { 2855, "pg_is_other_temp_schema", 1, true, false, pg_is_other_temp_schema, 16 },
  { 3073, "pg_is_xlog_replay_paused", 0, true, false, pg_is_xlog_replay_paused, 16 },
  { 3830, "pg_last_xact_replay_timestamp", 0, true, false, pg_last_xact_replay_timestamp, 1184 },
  { 3820, "pg_last_xlog_receive_location", 0, true, false, pg_last_xlog_receive_location, 25 },
  { 3821, "pg_last_xlog_replay_location", 0, true, false, pg_last_xlog_replay_location, 2249 },
  { 3599, "pg_list_gtt_relfrozenxids", 0, true, true, pg_list_gtt_relfrozenxids, 2249 },
  { 3035, "pg_listening_channels", 0, true, true, pg_listening_channels, 25 },
  { 1371, "pg_lock_status", 0, true, true, pg_lock_status, 2249 },
  { 1983, "pg_log_comm_status", 0, true, false, pg_log_comm_status, 16 },
  { 4217, "pg_logical_slot_get_binary_changes", 4, false, true, pg_logical_slot_get_binary_changes, 2249 },
  { 4216, "pg_logical_slot_get_changes", 4, false, true, pg_logical_slot_get_changes, 2249 },
  { 4219, "pg_logical_slot_peek_binary_changes", 4, false, true, pg_logical_slot_peek_binary_changes, 2249 },
  { 4218, "pg_logical_slot_peek_changes", 4, false, true, pg_logical_slot_peek_changes, 2249 },
  { 2625, "pg_ls_dir", 1, true, true, pg_ls_dir, 25 },
  { 2854, "pg_my_temp_schema", 0, true, false, pg_my_temp_schema, 26 },
  { 195, "pg_node_tree_in", 1, true, false, pg_node_tree_in, 194 },
  { 196, "pg_node_tree_out", 1, true, false, pg_node_tree_out, 2275 },
  { 197, "pg_node_tree_recv", 1, true, false, pg_node_tree_recv, 194 },
  { 198, "pg_node_tree_send", 1, true, false, pg_node_tree_send, 17 },
  { 3036, "pg_notify", 2, false, false, pg_notify, 2278 },
  { 2083, "pg_opclass_is_visible", 1, true, false, pg_opclass_is_visible, 16 },
  { 2082, "pg_operator_is_visible", 1, true, false, pg_operator_is_visible, 16 },
  { 3829, "pg_opfamily_is_visible", 1, true, false, pg_opfamily_is_visible, 16 },
  { 2289, "pg_options_to_table", 1, true, true, pg_options_to_table, 2249 },
  { 3212, "pg_parse_clog", 0, true, true, pg_parse_clog, 2249 },
  { 3197, "pg_partition_filenode", 1, true, false, pg_partition_filenode, 26 },
  { 3220, "pg_partition_filepath", 1, true, false, pg_partition_filepath, 25 },
  { 3195, "pg_partition_indexes_size_name", 2, true, false, pg_partition_indexes_size_name, 20 },
  { 3196, "pg_partition_indexes_size_oid", 2, true, false, pg_partition_indexes_size_oid, 20 },
  { 3193, "pg_partition_size_name", 2, true, false, pg_partition_size_name, 20 },
  { 3194, "pg_partition_size_oid", 2, true, false, pg_partition_size_oid, 20 },
  { 3472, "pg_pool_ping", 1, true, true, pg_pool_ping, 16 },
  { 3471, "pg_pool_validate", 2, true, true, pg_pool_validate, 2249 },
  { 2560, "pg_postmaster_start_time", 0, true, false, pg_postmaster_start_time, 1184 },
  { 2510, "pg_prepared_statement", 0, true, true, pg_prepared_statement, 2249 },
  { 1065, "pg_prepared_xact", 0, true, true, pg_prepared_xact, 2249 },
  { 3780, "pg_query_audit", 2, false, true, pg_query_audit, 2249 },
  { 3782, "pg_query_audit", 3, false, true, pg_query_audit, 2249 },
  { 3827, "pg_read_binary_file", 4, true, false, pg_read_binary_file, 17 },
  { 3828, "pg_read_binary_file_all", 1, true, false, pg_read_binary_file_all, 17 },
  { 2624, "pg_read_file", 3, true, false, pg_read_file, 25 },
  { 3826, "pg_read_file_all", 1, true, false, pg_read_file_all, 25 },
  { 3211, "pg_relation_compression_ratio", 1, true, false, pg_relation_compression_ratio, 700 },
  { 2999, "pg_relation_filenode", 1, true, false, pg_relation_filenode, 26 },
  { 3034, "pg_relation_filepath", 1, true, false, pg_relation_filepath, 25 },
  { 2332, "pg_relation_size", 2, true, false, pg_relation_size, 20 },
  { 3210, "pg_relation_with_compression", 1, true, false, pg_relation_with_compression, 16 },
  { 2621, "pg_reload_conf", 0, true, false, pg_reload_conf, 16 },
  { 4220, "pg_replication_slot_advance", 2, false, false, pg_replication_slot_advance, 2249 },
  { 4445, "pg_resume_bkp_flag", 1, true, false, pg_resume_bkp_flag, 2249 },
  { 2622, "pg_rotate_logfile", 0, true, false, pg_rotate_logfile, 16 },
  { 3078, "pg_sequence_parameters", 1, true, false, pg_sequence_parameters, 2249 },
  { 3987, "pg_shared_memctx_detail", 1, false, true, pg_shared_memctx_detail, 16 },
  { 3986, "pg_shared_memory_detail", 0, false, true, pg_shared_memory_detail, 2249 },
  { 2288, "pg_size_pretty", 1, true, false, pg_size_pretty, 25 },
  { 3166, "pg_size_pretty_numeric", 1, true, false, pg_size_pretty_numeric, 25 },
  { 2626, "pg_sleep", 1, true, false, pg_sleep, 2278 },
  { 2172, "pg_start_backup", 2, true, false, pg_start_backup, 25 },
  { 6203, "pg_start_backup_v2", 3, true, false, pg_start_backup_v2, 25 },
  { 3218, "pg_stat_bad_block", 0, true, true, pg_stat_bad_block, 2249 },
  { 3219, "pg_stat_bad_block_clear", 0, false, false, pg_stat_bad_block_clear, 2278 },
  { 2230, "pg_stat_clear_snapshot", 0, false, false, pg_stat_clear_snapshot, 2278 },
  { 2623, "pg_stat_file", 1, true, false, pg_stat_file, 2249 },
  { 6321, "pg_stat_file_recursive", 1, true, true, pg_stat_file_recursive, 2249 },
  { 2022, "pg_stat_get_activity", 1, false, true, pg_stat_get_activity, 2249 },
  { 4213, "pg_stat_get_activity_for_temptable", 0, true, true, pg_stat_get_activity_for_temptable, 2249 },
  { 5549, "pg_stat_get_activity_ng", 1, false, true, pg_stat_get_activity_ng, 2249 },
  { 4212, "pg_stat_get_activity_with_conninfo", 1, false, true, pg_stat_get_activity_with_conninfo, 2249 },
  { 3056, "pg_stat_get_analyze_count", 1, true, false, pg_stat_get_analyze_count, 20 },
  { 3057, "pg_stat_get_autoanalyze_count", 1, true, false, pg_stat_get_autoanalyze_count, 20 },
  { 3055, "pg_stat_get_autovacuum_count", 1, true, false, pg_stat_get_autovacuum_count, 20 },
  { 1940, "pg_stat_get_backend_activity", 1, true, false, pg_stat_get_backend_activity, 25 },
  { 2094, "pg_stat_get_backend_activity_start", 1, true, false, pg_stat_get_backend_activity_start, 1184 },
  { 1392, "pg_stat_get_backend_client_addr", 1, true, false, pg_stat_get_backend_client_addr, 869 },
  { 1393, "pg_stat_get_backend_client_port", 1, true, false, pg_stat_get_backend_client_port, 23 },
  { 1938, "pg_stat_get_backend_dbid", 1, true, false, pg_stat_get_backend_dbid, 26 },
  { 1936, "pg_stat_get_backend_idset", 0, true, true, pg_stat_get_backend_idset, 23 },
  { PGSTATGETBACKENDPIDFUNCOID, "pg_stat_get_backend_pid", 1, true, false, pg_stat_get_backend_pid, 20 },
  { 1391, "pg_stat_get_backend_start", 1, true, false, pg_stat_get_backend_start, 1184 },
  { 1939, "pg_stat_get_backend_userid", 1, true, false, pg_stat_get_backend_userid, 26 },
  { 2853, "pg_stat_get_backend_waiting", 1, true, false, pg_stat_get_backend_waiting, 16 },
  { 2857, "pg_stat_get_backend_xact_start", 1, true, false, pg_stat_get_backend_xact_start, 1184 },
  { 2771, "pg_stat_get_bgwriter_buf_written_checkpoints", 0, true, false, pg_stat_get_bgwriter_buf_written_checkpoints, 20 },
  { 2772, "pg_stat_get_bgwriter_buf_written_clean", 0, true, false, pg_stat_get_bgwriter_buf_written_clean, 20 },
  { 2773, "pg_stat_get_bgwriter_maxwritten_clean", 0, true, false, pg_stat_get_bgwriter_maxwritten_clean, 20 },
  { 2770, "pg_stat_get_bgwriter_requested_checkpoints", 0, true, false, pg_stat_get_bgwriter_requested_checkpoints, 20 },
  { 3075, "pg_stat_get_bgwriter_stat_reset_time", 0, true, false, pg_stat_get_bgwriter_stat_reset_time, 1184 },
  { 2769, "pg_stat_get_bgwriter_timed_checkpoints", 0, true, false, pg_stat_get_bgwriter_timed_checkpoints, 20 },
  { 1934, "pg_stat_get_blocks_fetched", 1, true, false, pg_stat_get_blocks_fetched, 20 },
  { 1935, "pg_stat_get_blocks_hit", 1, true, false, pg_stat_get_blocks_hit, 20 },
  { 2859, "pg_stat_get_buf_alloc", 0, true, false, pg_stat_get_buf_alloc, 20 },
  { 3063, "pg_stat_get_buf_fsync_backend", 0, true, false, pg_stat_get_buf_fsync_backend, 20 },
  { 2775, "pg_stat_get_buf_written_backend", 0, true, false, pg_stat_get_buf_written_backend, 20 },
  { 5008, "pg_stat_get_cgroup_info", 1, false, true, pg_stat_get_cgroup_info, 2249 },
  { 3161, "pg_stat_get_checkpoint_sync_time", 0, true, false, pg_stat_get_checkpoint_sync_time, 701 },
  { 3160, "pg_stat_get_checkpoint_write_time", 0, true, false, pg_stat_get_checkpoint_write_time, 701 },
  { 3484, "pg_stat_get_cu_hdd_asyn", 1, true, false, pg_stat_get_cu_hdd_asyn, 20 },
  { 3483, "pg_stat_get_cu_hdd_sync", 1, true, false, pg_stat_get_cu_hdd_sync, 20 },
  { 3480, "pg_stat_get_cu_mem_hit", 1, true, false, pg_stat_get_cu_mem_hit, 20 },
  { 3785, "pg_stat_get_data_senders", 0, false, true, pg_stat_get_data_senders, 2249 },
  { 2844, "pg_stat_get_db_blk_read_time", 1, true, false, pg_stat_get_db_blk_read_time, 701 },
  { 2845, "pg_stat_get_db_blk_write_time", 1, true, false, pg_stat_get_db_blk_write_time, 701 },
  { 1944, "pg_stat_get_db_blocks_fetched", 1, true, false, pg_stat_get_db_blocks_fetched, 20 },
  { 1945, "pg_stat_get_db_blocks_hit", 1, true, false, pg_stat_get_db_blocks_hit, 20 },
  { 3070, "pg_stat_get_db_conflict_all", 1, true, false, pg_stat_get_db_conflict_all, 20 },
  { 3068, "pg_stat_get_db_conflict_bufferpin", 1, true, false, pg_stat_get_db_conflict_bufferpin, 20 },
  { 3066, "pg_stat_get_db_conflict_lock", 1, true, false, pg_stat_get_db_conflict_lock, 20 },
  { 3067, "pg_stat_get_db_conflict_snapshot", 1, true, false, pg_stat_get_db_conflict_snapshot, 20 },
  { 3069, "pg_stat_get_db_conflict_startup_deadlock", 1, true, false, pg_stat_get_db_conflict_startup_deadlock, 20 },
  { 3065, "pg_stat_get_db_conflict_tablespace", 1, true, false, pg_stat_get_db_conflict_tablespace, 20 },
  { 3489, "pg_stat_get_db_cu_hdd_asyn", 1, true, false, pg_stat_get_db_cu_hdd_asyn, 20 },
  { 3488, "pg_stat_get_db_cu_hdd_sync", 1, true, false, pg_stat_get_db_cu_hdd_sync, 20 },
  { 3485, "pg_stat_get_db_cu_mem_hit", 1, true, false, pg_stat_get_db_cu_mem_hit, 20 },
  { 3152, "pg_stat_get_db_deadlocks", 1, true, false, pg_stat_get_db_deadlocks, 20 },
  { 1941, "pg_stat_get_db_numbackends", 1, true, false, pg_stat_get_db_numbackends, 23 },
  { 3074, "pg_stat_get_db_stat_reset_time", 1, true, false, pg_stat_get_db_stat_reset_time, 1184 },
  { 3151, "pg_stat_get_db_temp_bytes", 1, true, false, pg_stat_get_db_temp_bytes, 20 },
  { 3150, "pg_stat_get_db_temp_files", 1, true, false, pg_stat_get_db_temp_files, 20 },
  { 2762, "pg_stat_get_db_tuples_deleted", 1, true, false, pg_stat_get_db_tuples_deleted, 20 },
  { 2759, "pg_stat_get_db_tuples_fetched", 1, true, false, pg_stat_get_db_tuples_fetched, 20 },
  { 2760, "pg_stat_get_db_tuples_inserted", 1, true, false, pg_stat_get_db_tuples_inserted, 20 },
  { 2758, "pg_stat_get_db_tuples_returned", 1, true, false, pg_stat_get_db_tuples_returned, 20 },
  { 2761, "pg_stat_get_db_tuples_updated", 1, true, false, pg_stat_get_db_tuples_updated, 20 },
  { 1942, "pg_stat_get_db_xact_commit", 1, true, false, pg_stat_get_db_xact_commit, 20 },
  { 1943, "pg_stat_get_db_xact_rollback", 1, true, false, pg_stat_get_db_xact_rollback, 20 },
  { 2879, "pg_stat_get_dead_tuples", 1, true, false, pg_stat_get_dead_tuples, 20 },
  { 3982, "pg_stat_get_env", 0, false, true, pg_stat_get_env, 2249 },
  { 3975, "pg_stat_get_file_stat", 0, false, true, pg_stat_get_file_stat, 2249 },
  { 2978, "pg_stat_get_function_calls", 1, true, false, pg_stat_get_function_calls, 20 },
  { 2980, "pg_stat_get_function_self_time", 1, true, false, pg_stat_get_function_self_time, 701 },
  { 2979, "pg_stat_get_function_total_time", 1, true, false, pg_stat_get_function_total_time, 701 },
  { 2783, "pg_stat_get_last_analyze_time", 1, true, false, pg_stat_get_last_analyze_time, 1184 },
  { 2784, "pg_stat_get_last_autoanalyze_time", 1, true, false, pg_stat_get_last_autoanalyze_time, 1184 },
  { 2782, "pg_stat_get_last_autovacuum_time", 1, true, false, pg_stat_get_last_autovacuum_time, 1184 },
  { 5600, "pg_stat_get_last_data_changed_time", 1, true, false, pg_stat_get_last_data_changed_time, 1184 },
  { 2781, "pg_stat_get_last_vacuum_time", 1, true, false, pg_stat_get_last_vacuum_time, 1184 },
  { 2878, "pg_stat_get_live_tuples", 1, true, false, pg_stat_get_live_tuples, 20 },
  { 2846, "pg_stat_get_mem_mbytes_reserved", 1, true, false, pg_stat_get_mem_mbytes_reserved, 25 },
  { 1928, "pg_stat_get_numscans", 1, true, false, pg_stat_get_numscans, 20 },
  { 4087, "pg_stat_get_partition_dead_tuples", 1, false, true, pg_stat_get_partition_dead_tuples, 20 },
  { 4092, "pg_stat_get_partition_live_tuples", 1, false, true, pg_stat_get_partition_live_tuples, 20 },
  { 4086, "pg_stat_get_partition_tuples_changed", 1, false, true, pg_stat_get_partition_tuples_changed, 20 },
  { 4090, "pg_stat_get_partition_tuples_deleted", 1, false, true, pg_stat_get_partition_tuples_deleted, 20 },
  { 4091, "pg_stat_get_partition_tuples_hot_updated", 1, false, true, pg_stat_get_partition_tuples_hot_updated, 20 },
  { 4088, "pg_stat_get_partition_tuples_inserted", 1, false, true, pg_stat_get_partition_tuples_inserted, 20 },
  { 4089, "pg_stat_get_partition_tuples_updated", 1, false, true, pg_stat_get_partition_tuples_updated, 20 },
  { 3955, "pg_stat_get_pooler_status", 0, false, true, pg_stat_get_pooler_status, 2249 },
  { 3500, "pg_stat_get_realtime_info_internal", 5, true, false, pg_stat_get_realtime_info_internal, 25 },
  { 3973, "pg_stat_get_redo_stat", 0, false, true, pg_stat_get_redo_stat, 2249 },
  { 5004, "pg_stat_get_resource_pool_info", 1, false, true, pg_stat_get_resource_pool_info, 2249 },
  { 5021, "pg_stat_get_session_respool", 1, false, true, pg_stat_get_session_respool, 2249 },
  { 3502, "pg_stat_get_session_wlmstat", 1, false, true, pg_stat_get_session_wlmstat, 2249 },
  { 3947, "pg_stat_get_sql_count", 0, false, true, pg_stat_get_sql_count, 2249 },
  { 3980, "pg_stat_get_status", 1, false, true, pg_stat_get_status, 2249 },
  { 3499, "pg_stat_get_stream_replications", 0, false, true, pg_stat_get_stream_replications, 2249 },
  { 3981, "pg_stat_get_thread", 0, false, true, pg_stat_get_thread, 2249 },
  { 3221, "pg_stat_get_tuples_changed", 1, true, false, pg_stat_get_tuples_changed, 20 },
  { 1933, "pg_stat_get_tuples_deleted", 1, true, false, pg_stat_get_tuples_deleted, 20 },
  { 1930, "pg_stat_get_tuples_fetched", 1, true, false, pg_stat_get_tuples_fetched, 20 },
  { 1972, "pg_stat_get_tuples_hot_updated", 1, true, false, pg_stat_get_tuples_hot_updated, 20 },
  { 1931, "pg_stat_get_tuples_inserted", 1, true, false, pg_stat_get_tuples_inserted, 20 },
  { 1929, "pg_stat_get_tuples_returned", 1, true, false, pg_stat_get_tuples_returned, 20 },
  { 1932, "pg_stat_get_tuples_updated", 1, true, false, pg_stat_get_tuples_updated, 20 },
  { 3054, "pg_stat_get_vacuum_count", 1, true, false, pg_stat_get_vacuum_count, 20 },
  { 3819, "pg_stat_get_wal_receiver", 0, false, true, pg_stat_get_wal_receiver, 2249 },
  { 3099, "pg_stat_get_wal_senders", 0, false, true, pg_stat_get_wal_senders, 2249 },
  { 5024, "pg_stat_get_wlm_ec_operator_info", 1, false, true, pg_stat_get_wlm_ec_operator_info, 2249 },
  { 5031, "pg_stat_get_wlm_instance_info", 0, false, true, pg_stat_get_wlm_instance_info, 2249 },
  { 5032, "pg_stat_get_wlm_instance_info_with_cleanup", 0, false, true, pg_stat_get_wlm_instance_info_with_cleanup, 2249 },
  { 5019, "pg_stat_get_wlm_node_resource_info", 1, false, true, pg_stat_get_wlm_node_resource_info, 2249 },
  { 5023, "pg_stat_get_wlm_operator_info", 1, false, true, pg_stat_get_wlm_operator_info, 2249 },
  { 5025, "pg_stat_get_wlm_realtime_ec_operator_info", 1, false, true, pg_stat_get_wlm_realtime_ec_operator_info, 2249 },
  { 5022, "pg_stat_get_wlm_realtime_operator_info", 1, false, true, pg_stat_get_wlm_realtime_operator_info, 2249 },
  { 5003, "pg_stat_get_wlm_realtime_session_info", 1, false, true, pg_stat_get_wlm_realtime_session_info, 2249 },
  { 5002, "pg_stat_get_wlm_session_info", 1, false, true, pg_stat_get_wlm_session_info, 2249 },
  { 5001, "pg_stat_get_wlm_session_info_internal", 4, false, true, pg_stat_get_wlm_session_info_internal, 25 },
  { 5014, "pg_stat_get_wlm_session_iostat_info", 1, false, true, pg_stat_get_wlm_session_iostat_info, 2249 },
  { 3501, "pg_stat_get_wlm_statistics", 1, false, true, pg_stat_get_wlm_statistics, 2249 },
  { 5007, "pg_stat_get_wlm_user_info", 1, false, true, pg_stat_get_wlm_user_info, 2249 },
  { 5013, "pg_stat_get_wlm_user_iostat_info", 1, false, true, pg_stat_get_wlm_user_iostat_info, 2249 },
  { 5012, "pg_stat_get_wlm_user_resource_info", 1, false, true, pg_stat_get_wlm_user_resource_info, 2249 },
  { 5018, "pg_stat_get_workload_records", 1, false, true, pg_stat_get_workload_records, 2249 },
  { 5026, "pg_stat_get_workload_struct_info", 0, true, false, pg_stat_get_workload_struct_info, 25 },
  { 3044, "pg_stat_get_xact_blocks_fetched", 1, true, false, pg_stat_get_xact_blocks_fetched, 20 },
  { 3045, "pg_stat_get_xact_blocks_hit", 1, true, false, pg_stat_get_xact_blocks_hit, 20 },
  { 3046, "pg_stat_get_xact_function_calls", 1, true, false, pg_stat_get_xact_function_calls, 20 },
  { 3048, "pg_stat_get_xact_function_self_time", 1, true, false, pg_stat_get_xact_function_self_time, 701 },
  { 3047, "pg_stat_get_xact_function_total_time", 1, true, false, pg_stat_get_xact_function_total_time, 701 },
  { 3037, "pg_stat_get_xact_numscans", 1, true, false, pg_stat_get_xact_numscans, 20 },
  { 4093, "pg_stat_get_xact_partition_tuples_deleted", 1, false, true, pg_stat_get_xact_partition_tuples_deleted, 20 },
  { 4096, "pg_stat_get_xact_partition_tuples_hot_updated", 1, false, true, pg_stat_get_xact_partition_tuples_hot_updated, 20 },
  { 4094, "pg_stat_get_xact_partition_tuples_inserted", 1, false, true, pg_stat_get_xact_partition_tuples_inserted, 20 },
  { 4095, "pg_stat_get_xact_partition_tuples_updated", 1, false, true, pg_stat_get_xact_partition_tuples_updated, 20 },
  { 3042, "pg_stat_get_xact_tuples_deleted", 1, true, false, pg_stat_get_xact_tuples_deleted, 20 },
  { 3039, "pg_stat_get_xact_tuples_fetched", 1, true, false, pg_stat_get_xact_tuples_fetched, 20 },
  { 3043, "pg_stat_get_xact_tuples_hot_updated", 1, true, false, pg_stat_get_xact_tuples_hot_updated, 20 },
  { 3040, "pg_stat_get_xact_tuples_inserted", 1, true, false, pg_stat_get_xact_tuples_inserted, 20 },
  { 3038, "pg_stat_get_xact_tuples_returned", 1, true, false, pg_stat_get_xact_tuples_returned, 20 },
  { 3041, "pg_stat_get_xact_tuples_updated", 1, true, false, pg_stat_get_xact_tuples_updated, 20 },
  { 2274, "pg_stat_reset", 0, false, false, pg_stat_reset, 2278 },
  { 3775, "pg_stat_reset_shared", 1, true, false, pg_stat_reset_shared, 2278 },
  { 3777, "pg_stat_reset_single_function_counters", 1, false, false, pg_stat_reset_single_function_counters, 2278 },
  { 3776, "pg_stat_reset_single_table_counters", 1, false, false, pg_stat_reset_single_table_counters, 2278 },
  { 5601, "pg_stat_set_last_data_changed_time", 1, true, false, pg_stat_set_last_data_changed_time, 2278 },
  { 2173, "pg_stop_backup", 0, true, false, pg_stop_backup, 25 },
  { 6204, "pg_stop_backup_v2", 1, true, true, pg_stop_backup_v2, 2249 },
  { 4049, "pg_switch_relfilenode_name", 2, true, false, pg_switch_relfilenode_name, 20 },
  { 2848, "pg_switch_xlog", 0, true, false, pg_switch_xlog, 25 },
  { 3534, "pg_sync_all_cstore_delta", 0, true, false, pg_sync_all_cstore_delta, 20 },
  { 3164, "pg_sync_cstore_delta", 1, true, false, pg_sync_cstore_delta, 20 },
  { PGSYSTIMESTAMPFUNCOID, "pg_system_timestamp", 0, true, false, pg_system_timestamp, 1184 },
  { 2079, "pg_table_is_visible", 1, true, false, pg_table_is_visible, 16 },
  { 2997, "pg_table_size", 1, true, false, pg_table_size, 20 },
  { 2556, "pg_tablespace_databases", 1, true, true, pg_tablespace_databases, 26 },
  { 3778, "pg_tablespace_location", 1, true, false, pg_tablespace_location, 25 },
  { 2323, "pg_tablespace_size_name", 1, true, false, pg_tablespace_size_name, 20 },
  { 2322, "pg_tablespace_size_oid", 1, true, false, pg_tablespace_size_oid, 20 },
  { 3999, "pg_tde_info", 0, true, true, pg_tde_info, 2249 },
  { 2096, "pg_terminate_backend", 1, true, false, pg_terminate_backend, 16 },
  { 2099, "pg_terminate_session", 2, true, false, pg_terminate_session, 16 },
  { 9999, "pg_test_err_contain_err", 1, true, false, pg_test_err_contain_err, 2278 },
  { 2599, "pg_timezone_abbrevs", 0, true, true, pg_timezone_abbrevs, 2249 },
  { 2856, "pg_timezone_names", 0, true, true, pg_timezone_names, 2249 },
  { 3222, "pg_total_autovac_tuples", 1, true, true, pg_total_autovac_tuples, 2249 },
  { 2286, "pg_total_relation_size", 1, true, false, pg_total_relation_size, 20 },
  { 3163, "pg_trigger_depth", 0, true, false, pg_trigger_depth, 23 },
  { 2888, "pg_try_advisory_lock_int4", 2, true, false, pg_try_advisory_lock_int4, 16 },
  { 2882, "pg_try_advisory_lock_int8", 1, true, false, pg_try_advisory_lock_int8, 16 },
  { 2889, "pg_try_advisory_lock_shared_int4", 2, true, false, pg_try_advisory_lock_shared_int4, 16 },
  { 2883, "pg_try_advisory_lock_shared_int8", 1, true, false, pg_try_advisory_lock_shared_int8, 16 },
  { 3095, "pg_try_advisory_xact_lock_int4", 2, true, false, pg_try_advisory_xact_lock_int4, 16 },
  { 3091, "pg_try_advisory_xact_lock_int8", 1, true, false, pg_try_advisory_xact_lock_int8, 16 },
  { 3096, "pg_try_advisory_xact_lock_shared_int4", 2, true, false, pg_try_advisory_xact_lock_shared_int4, 16 },
  { 3092, "pg_try_advisory_xact_lock_shared_int8", 1, true, false, pg_try_advisory_xact_lock_shared_int8, 16 },
  { 3758, "pg_ts_config_is_visible", 1, true, false, pg_ts_config_is_visible, 16 },
  { 3757, "pg_ts_dict_is_visible", 1, true, false, pg_ts_dict_is_visible, 16 },
  { 3756, "pg_ts_parser_is_visible", 1, true, false, pg_ts_parser_is_visible, 16 },
  { 3768, "pg_ts_template_is_visible", 1, true, false, pg_ts_template_is_visible, 16 },
  { 2080, "pg_type_is_visible", 1, true, false, pg_type_is_visible, 16 },
  { PGTYPEOFFUNCOID, "pg_typeof", 1, false, false, pg_typeof, 2206 },
  { 5009, "pg_wlm_get_session_info", 1, false, true, pg_wlm_get_session_info, 2249 },
  { 5020, "pg_wlm_get_user_session_info", 1, false, true, pg_wlm_get_user_session_info, 2249 },
  { 3503, "pg_wlm_jump_queue", 1, true, false, pg_wlm_jump_queue, 16 },
  { 3165, "pg_xlog_location_diff", 2, true, false, pg_xlog_location_diff, 1700 },
  { 3071, "pg_xlog_replay_pause", 0, true, false, pg_xlog_replay_pause, 2278 },
  { 3072, "pg_xlog_replay_resume", 0, true, false, pg_xlog_replay_resume, 2278 },
  { 2851, "pg_xlogfile_name", 1, true, false, pg_xlogfile_name, 25 },
  { 2850, "pg_xlogfile_name_offset", 1, true, false, pg_xlogfile_name_offset, 2249 },
  { 89, "pgsql_version", 0, true, false, pgsql_version, 25 },
  { 3960, "pgxc_get_csn", 1, true, true, pgxc_get_csn, 20 },
  { 2095, "pgxc_gtm_snapshot_status", 0, true, true, pgxc_gtm_snapshot_status, 2249 },
  { 3203, "pgxc_is_committed", 1, true, true, pgxc_is_committed, 16 },
  { 3204, "pgxc_lock_for_backup", 0, true, false, pgxc_lock_for_backup, 16 },
  { 9014, "pgxc_lock_for_sp_database", 1, true, false, pgxc_lock_for_sp_database, 16 },
  { 9018, "pgxc_lock_for_transfer", 1, true, false, pgxc_lock_for_transfer, 16 },
  { 5028, "pgxc_max_datanode_size_name", 1, false, true, pgxc_max_datanode_size_name, 20 },
  { 3202, "pgxc_node_str", 0, true, false, pgxc_node_str, 19 },
  { 3200, "pgxc_pool_check", 0, true, false, pgxc_pool_check, 16 },
  { 3954, "pgxc_pool_connection_status", 0, true, false, pgxc_pool_connection_status, 16 },
  { 3201, "pgxc_pool_reload", 0, true, false, pgxc_pool_reload, 16 },
  { 2949, "pgxc_snapshot_status", 0, true, false, pgxc_snapshot_status, 2249 },
  { 4410, "pgxc_stat_all_dirty_tables", 2, false, true, pgxc_stat_all_dirty_tables, 2249 },
  { 3591, "pgxc_stat_get_status", 0, false, true, pgxc_stat_get_status, 2249 },
  { 4411, "pgxc_stat_schema_dirty_tables", 3, true, true, pgxc_stat_schema_dirty_tables, 2249 },
  { 9017, "pgxc_unlock_for_sp_database", 1, true, false, pgxc_unlock_for_sp_database, 16 },
  { 9019, "pgxc_unlock_for_transfer", 1, true, false, pgxc_unlock_for_transfer, 16 },
  { 90, "pgxc_version", 0, true, false, pgxc_version, 25 },
  { 3751, "plainto_tsquery", 1, true, false, plainto_tsquery, 3615 },
  { 3747, "plainto_tsquery_byid", 2, true, false, plainto_tsquery_byid, 3615 },
  { 131, "point_above", 2, true, false, point_above, 16 },
  { 1441, "point_add", 2, true, false, point_add, 600 },
  { 134, "point_below", 2, true, false, point_below, 16 },
  { 991, "point_distance", 2, true, false, point_distance, 701 },
  { 1444, "point_div", 2, true, false, point_div, 600 },
  { 135, "point_eq", 2, true, false, point_eq, 16 },
  { 1407, "point_horiz", 2, true, false, point_horiz, 16 },
  { 990, "point_horiz", 2, true, false, point_horiz, 16 },
  { 117, "point_in", 1, true, false, point_in, 600 },
  { 132, "point_left", 2, true, false, point_left, 16 },
  { 1443, "point_mul", 2, true, false, point_mul, 600 },
  { 988, "point_ne", 2, true, false, point_ne, 16 },
  { 118, "point_out", 1, true, false, point_out, 2275 },
  { 2428, "point_recv", 1, true, false, point_recv, 600 },
  { 133, "point_right", 2, true, false, point_right, 16 },
  { 2429, "point_send", 1, true, false, point_send, 17 },
  { 992, "point_slope", 2, true, false, point_slope, 701 },
  { 1442, "point_sub", 2, true, false, point_sub, 600 },
  { 1406, "point_vert", 2, true, false, point_vert, 16 },
  { 989, "point_vert", 2, true, false, point_vert, 16 },
  { 1421, "points_box", 2, true, false, points_box, 603 },
  { 2569, "poly_above", 2, true, false, poly_above, 16 },
  { 2566, "poly_below", 2, true, false, poly_below, 16 },
  { 1446, "poly_box", 1, true, false, poly_box, 603 },
  { 1540, "poly_center", 1, true, false, poly_center, 600 },
  { 227, "poly_center", 1, true, false, poly_center, 600 },
  { 1474, "poly_circle", 1, true, false, poly_circle, 718 },
  { 340, "poly_contain", 2, true, false, poly_contain, 16 },
  { 1428, "poly_contain_pt", 2, true, false, poly_contain_pt, 16 },
  { 345, "poly_contained", 2, true, false, poly_contained, 16 },
  { 729, "poly_distance", 2, true, false, poly_distance, 701 },
  { 347, "poly_in", 1, true, false, poly_in, 604 },
  { 341, "poly_left", 2, true, false, poly_left, 16 },
  { 1556, "poly_npoints", 1, true, false, poly_npoints, 23 },
  { 1445, "poly_npoints", 1, true, false, poly_npoints, 23 },
  { 348, "poly_out", 1, true, false, poly_out, 2275 },
  { 2568, "poly_overabove", 2, true, false, poly_overabove, 16 },
  { 2567, "poly_overbelow", 2, true, false, poly_overbelow, 16 },
  { 346, "poly_overlap", 2, true, false, poly_overlap, 16 },
  { 342, "poly_overleft", 2, true, false, poly_overleft, 16 },
  { 343, "poly_overright", 2, true, false, poly_overright, 16 },
  { 1447, "poly_path", 1, true, false, poly_path, 602 },
  { 2486, "poly_recv", 1, true, false, poly_recv, 604 },
  { 344, "poly_right", 2, true, false, poly_right, 16 },
  { 339, "poly_same", 2, true, false, poly_same, 16 },
  { 2487, "poly_send", 1, true, false, poly_send, 17 },
  { 1301, "positionjoinsel", 5, true, false, positionjoinsel, 701 },
  { 1300, "positionsel", 4, true, false, positionsel, 701 },
  { 2316, "postgresql_fdw_validator", 2, true, false, postgresql_fdw_validator, 16 },
  { 3800, "pound_end", 1, true, false, pound_end, 2278 },
  { 3801, "pound_lextype", 1, true, false, pound_lextype, 2281 },
  { 3799, "pound_nexttoken", 3, true, false, pound_nexttoken, 2281 },
  { 3798, "pound_start", 3, true, false, pound_start, 2281 },
  { 3719, "prsd_end", 1, true, false, prsd_end, 2278 },
  { 3720, "prsd_headline", 3, true, false, prsd_headline, 2281 },
  { 3721, "prsd_lextype", 1, true, false, prsd_lextype, 2281 },
  { 3718, "prsd_nexttoken", 3, true, false, prsd_nexttoken, 2281 },
  { 3717, "prsd_start", 3, true, false, prsd_start, 2281 },
  { 3216, "pseudo_current_user", 0, true, false, pseudo_current_user, 19 },
  { 4040, "psortbuild", 3, true, false, psortbuild, 2281 },
  { 4045, "psortcanreturn", 1, true, false, psortcanreturn, 16 },
  { 4044, "psortcostestimate", 7, true, false, psortcostestimate, 2278 },
  { 4043, "psortgetbitmap", 2, true, false, psortgetbitmap, 20 },
  { 4042, "psortgettuple", 2, true, false, psortgettuple, 16 },
  { 4041, "psortoptions", 2, true, false, psortoptions, 17 },
  { 1478, "pt_contained_circle", 2, true, false, pt_contained_circle, 16 },
  { 1429, "pt_contained_poly", 2, true, false, pt_contained_poly, 16 },
  { 5345, "pv_builtin_functions", 0, false, true, pv_builtin_functions, 2249 },
  { 4300, "pv_compute_pool_workload", 0, false, true, pv_compute_pool_workload, 2249 },
  { 3969, "pv_instance_time", 0, false, true, pv_instance_time, 2249 },
  { 3970, "pv_os_run_info", 0, false, true, pv_os_run_info, 2249 },
  { 3983, "pv_session_memctx_detail", 2, false, true, pv_session_memctx_detail, 16 },
  { 3984, "pv_session_memory", 0, false, true, pv_session_memory, 2249 },
  { 3971, "pv_session_memory_detail", 0, false, true, pv_session_memory_detail, 2249 },
  { 3974, "pv_session_stat", 0, false, true, pv_session_stat, 2249 },
  { 3972, "pv_session_time", 0, false, true, pv_session_time, 2249 },
  { 3968, "pv_thread_memory_detail", 0, false, true, pv_thread_memory_detail, 2249 },
  { 3985, "pv_total_memory_detail", 0, true, true, pv_total_memory_detail, 2249 },
  { 2924, "query_to_xml", 4, false, false, query_to_xml, 142 },
  { 2930, "query_to_xml_and_xmlschema", 4, false, false, query_to_xml_and_xmlschema, 142 },
  { 2927, "query_to_xmlschema", 4, false, false, query_to_xmlschema, 142 },
  { 1282, "quote_ident", 1, true, false, quote_ident, 25 },
  { 1283, "quote_literal", 1, true, false, quote_literal, 25 },
  { 1289, "quote_nullable", 1, false, false, quote_nullable, 25 },
  { 1609, "radians", 1, true, false, radians, 701 },
  { 3862, "range_adjacent", 2, true, false, range_adjacent, 16 },
  { 3864, "range_after", 2, true, false, range_after, 16 },
  { 3863, "range_before", 2, true, false, range_before, 16 },
  { 3870, "range_cmp", 2, true, false, range_cmp, 23 },
  { 3941, "range_constructor2", 2, false, false, range_constructor2, 3912 },
  { 3840, "range_constructor2", 2, false, false, range_constructor2, 3904 },
  { 3945, "range_constructor2", 2, false, false, range_constructor2, 3926 },
  { 3844, "range_constructor2", 2, false, false, range_constructor2, 3906 },
  { 3933, "range_constructor2", 2, false, false, range_constructor2, 3908 },
  { 3937, "range_constructor2", 2, false, false, range_constructor2, 3910 },
  { 3942, "range_constructor3", 3, false, false, range_constructor3, 3912 },
  { 3841, "range_constructor3", 3, false, false, range_constructor3, 3904 },
  { 3946, "range_constructor3", 3, false, false, range_constructor3, 3926 },
  { 3845, "range_constructor3", 3, false, false, range_constructor3, 3906 },
  { 3934, "range_constructor3", 3, false, false, range_constructor3, 3908 },
  { 3938, "range_constructor3", 3, false, false, range_constructor3, 3910 },
  { 3861, "range_contained_by", 2, true, false, range_contained_by, 16 },
  { 3859, "range_contains", 2, true, false, range_contains, 16 },
  { 3858, "range_contains_elem", 2, true, false, range_contains_elem, 16 },
  { 3850, "range_empty", 1, true, false, range_empty, 16 },
  { 3855, "range_eq", 2, true, false, range_eq, 16 },
  { 3873, "range_ge", 2, true, false, range_ge, 16 },
  { 3877, "range_gist_compress", 1, true, false, range_gist_compress, 2281 },
  { 3875, "range_gist_consistent", 5, true, false, range_gist_consistent, 16 },
  { 3878, "range_gist_decompress", 1, true, false, range_gist_decompress, 2281 },
  { 3879, "range_gist_penalty", 3, true, false, range_gist_penalty, 2281 },
  { 3880, "range_gist_picksplit", 2, true, false, range_gist_picksplit, 2281 },
  { 3881, "range_gist_same", 3, true, false, range_gist_same, 2281 },
  { 3876, "range_gist_union", 2, true, false, range_gist_union, 2281 },
  { 3874, "range_gt", 2, true, false, range_gt, 16 },
  { 3834, "range_in", 3, true, false, range_in, 3831 },
  { 3868, "range_intersect", 2, true, false, range_intersect, 3831 },
  { 3872, "range_le", 2, true, false, range_le, 16 },
  { 3848, "range_lower", 1, true, false, range_lower, 2283 },
  { 3851, "range_lower_inc", 1, true, false, range_lower_inc, 16 },
  { 3853, "range_lower_inf", 1, true, false, range_lower_inf, 16 },
  { 3871, "range_lt", 2, true, false, range_lt, 16 },
  { 3869, "range_minus", 2, true, false, range_minus, 3831 },
  { 3856, "range_ne", 2, true, false, range_ne, 16 },
  { 3835, "range_out", 1, true, false, range_out, 2275 },
  { 3857, "range_overlaps", 2, true, false, range_overlaps, 16 },
  { 3865, "range_overleft", 2, true, false, range_overleft, 16 },
  { 3866, "range_overright", 2, true, false, range_overright, 16 },
  { 3836, "range_recv", 3, true, false, range_recv, 3831 },
  { 3837, "range_send", 1, true, false, range_send, 17 },
  { 3916, "range_typanalyze", 1, true, false, range_typanalyze, 16 },
  { 3867, "range_union", 2, true, false, range_union, 3831 },
  { 3849, "range_upper", 1, true, false, range_upper, 2283 },
  { 3852, "range_upper_inc", 1, true, false, range_upper_inc, 16 },
  { 3854, "range_upper_inf", 1, true, false, range_upper_inf, 16 },
  { 3478, "rawcat", 2, true, false, rawcat, 86 },
  { 3475, "rawcmp", 2, true, false, rawcmp, 23 },
  { 3931, "raweq", 2, true, false, raweq, 16 },
  { 3939, "rawge", 2, true, false, rawge, 16 },
  { 3936, "rawgt", 2, true, false, rawgt, 16 },
  { 4035, "rawin", 1, true, false, rawin, 17 },
  { 3935, "rawle", 2, true, false, rawle, 16 },
  { 3476, "rawlike", 2, true, false, rawlike, 16 },
  { 3932, "rawlt", 2, true, false, rawlt, 16 },
  { 3940, "rawne", 2, true, false, rawne, 16 },
  { 3477, "rawnlike", 2, true, false, rawnlike, 16 },
  { 4036, "rawout", 1, true, false, rawout, 2275 },
  { 4037, "rawtotext", 1, true, false, rawtotext, 25 },
  { 4222, "read_disable_conn_file", 0, false, false, read_disable_conn_file, 2249 },
  { 2981, "record_eq", 2, true, false, record_eq, 16 },
  { 2986, "record_ge", 2, true, false, record_ge, 16 },
  { 2984, "record_gt", 2, true, false, record_gt, 16 },
  { 2290, "record_in", 3, true, false, record_in, 2249 },
  { 2985, "record_le", 2, true, false, record_le, 16 },
  { 2983, "record_lt", 2, true, false, record_lt, 16 },
  { 2982, "record_ne", 2, true, false, record_ne, 16 },
  { 2291, "record_out", 1, true, false, record_out, 2275 },
  { 2402, "record_recv", 3, true, false, record_recv, 2249 },
  { 2403, "record_send", 1, true, false, record_send, 17 },
  { 2218, "regclassin", 1, true, false, regclassin, 2205 },
  { 2219, "regclassout", 1, true, false, regclassout, 2275 },
  { 2452, "regclassrecv", 1, true, false, regclassrecv, 2205 },
  { 2453, "regclasssend", 1, true, false, regclasssend, 17 },
  { 3736, "regconfigin", 1, true, false, regconfigin, 3734 },
  { 3737, "regconfigout", 1, true, false, regconfigout, 2275 },
  { 3738, "regconfigrecv", 1, true, false, regconfigrecv, 3734 },
  { 3739, "regconfigsend", 1, true, false, regconfigsend, 17 },
  { 3771, "regdictionaryin", 1, true, false, regdictionaryin, 3769 },
  { 3772, "regdictionaryout", 1, true, false, regdictionaryout, 2275 },
  { 3773, "regdictionaryrecv", 1, true, false, regdictionaryrecv, 3769 },
  { 3774, "regdictionarysend", 1, true, false, regdictionarysend, 17 },
  { 1824, "regexeqjoinsel", 5, true, false, regexeqjoinsel, 701 },
  { 1818, "regexeqsel", 4, true, false, regexeqsel, 701 },
  { 1827, "regexnejoinsel", 5, true, false, regexnejoinsel, 701 },
  { 1821, "regexnesel", 4, true, false, regexnesel, 701 },
  { 2764, "regexp_matches", 3, true, true, regexp_matches, 1009 },
  { 2763, "regexp_matches_no_flags", 2, true, true, regexp_matches_no_flags, 1009 },
  { 2768, "regexp_split_to_array", 3, true, false, regexp_split_to_array, 1009 },
  { 2767, "regexp_split_to_array_no_flags", 2, true, false, regexp_split_to_array_no_flags, 1009 },
  { 2766, "regexp_split_to_table", 3, true, true, regexp_split_to_table, 25 },
  { 2765, "regexp_split_to_table_no_flags", 2, true, true, regexp_split_to_table_no_flags, 25 },
  { 2216, "regoperatorin", 1, true, false, regoperatorin, 2204 },
  { 2217, "regoperatorout", 1, true, false, regoperatorout, 2275 },
  { 2450, "regoperatorrecv", 1, true, false, regoperatorrecv, 2204 },
  { 2451, "regoperatorsend", 1, true, false, regoperatorsend, 17 },
  { 2214, "regoperin", 1, true, false, regoperin, 2203 },
  { 2215, "regoperout", 1, true, false, regoperout, 2275 },
  { 2448, "regoperrecv", 1, true, false, regoperrecv, 2203 },
  { 2449, "regopersend", 1, true, false, regopersend, 17 },
  { 2212, "regprocedurein", 1, true, false, regprocedurein, 2202 },
  { 2213, "regprocedureout", 1, true, false, regprocedureout, 2275 },
  { 2446, "regprocedurerecv", 1, true, false, regprocedurerecv, 2202 },
  { 2447, "regproceduresend", 1, true, false, regproceduresend, 17 },
  { 44, "regprocin", 1, true, false, regprocin, 24 },
  { 45, "regprocout", 1, true, false, regprocout, 2275 },
  { 2444, "regprocrecv", 1, true, false, regprocrecv, 24 },
  { 2445, "regprocsend", 1, true, false, regprocsend, 17 },
  { 2220, "regtypein", 1, true, false, regtypein, 2206 },
  { 2221, "regtypeout", 1, true, false, regtypeout, 2275 },
  { 2454, "regtyperecv", 1, true, false, regtyperecv, 2206 },
  { 2455, "regtypesend", 1, true, false, regtypesend, 17 },
  { 1177, "reltime_interval", 1, true, false, reltime_interval, 1186 },
  { 257, "reltimeeq", 2, true, false, reltimeeq, 16 },
  { 262, "reltimege", 2, true, false, reltimege, 16 },
  { 260, "reltimegt", 2, true, false, reltimegt, 16 },
  { RELTIMEINFUNCOID, "reltimein", 1, true, false, reltimein, 703 },
  { 261, "reltimele", 2, true, false, reltimele, 16 },
  { 259, "reltimelt", 2, true, false, reltimelt, 16 },
  { 258, "reltimene", 2, true, false, reltimene, 16 },
  { RELTIMEOUTFUNCOID, "reltimeout", 1, true, false, reltimeout, 2275 },
  { 2464, "reltimerecv", 1, true, false, reltimerecv, 703 },
  { 2465, "reltimesend", 1, true, false, reltimesend, 17 },
  { 4374, "remote_bgwriter_stat", 0, false, true, remote_bgwriter_stat, 2249 },
  { 4372, "remote_ckpt_stat", 0, false, true, remote_ckpt_stat, 2249 },
  { 4385, "remote_double_write_stat", 0, false, true, remote_double_write_stat, 2249 },
  { 4368, "remote_pagewriter_stat", 0, false, true, remote_pagewriter_stat, 2249 },
  { 4999, "remote_recovery_status", 0, false, true, remote_recovery_status, 2249 },
  { 4389, "remote_redo_stat", 0, false, true, remote_redo_stat, 2249 },
  { 4789, "remote_rto_stat", 0, false, true, remote_rto_stat, 2249 },
  { 4376, "remote_single_flush_dw_stat", 0, false, true, remote_single_flush_dw_stat, 2249 },
  { 1622, "repeat", 2, true, false, repeat, 25 },
  { 2087, "replace_text", 3, false, false, replace_text, 25 },
  { 5716, "reset_unique_sql", 3, true, false, reset_unique_sql, 16 },
  { 3155, "row_to_json", 1, true, false, row_to_json, 114 },
  { 3156, "row_to_json_pretty", 2, true, false, row_to_json_pretty, 114 },
  { RPADFUNCOID, "rpad", 3, true, false, rpad, 25 },
  { RTRIMFUNCOID, "rtrim", 2, true, false, rtrim, 25 },
  { RTRIMPARAFUNCOID, "rtrim1", 1, true, false, rtrim1, 25 },
  { RTRIM1FUNCOID, "rtrim1", 1, true, false, rtrim1, 25 },
  { 108, "scalargtjoinsel", 5, true, false, scalargtjoinsel, 701 },
  { 104, "scalargtsel", 4, true, false, scalargtsel, 701 },
  { 107, "scalarltjoinsel", 5, true, false, scalarltjoinsel, 701 },
  { 103, "scalarltsel", 4, true, false, scalarltsel, 701 },
  { 2933, "schema_to_xml", 4, false, false, schema_to_xml, 142 },
  { 2935, "schema_to_xml_and_xmlschema", 4, false, false, schema_to_xml_and_xmlschema, 142 },
  { 2934, "schema_to_xmlschema", 4, false, false, schema_to_xmlschema, 142 },
  { SESSIONUSERFUNCOID, "session_user", 0, true, false, session_user, 19 },
  { 3978, "sessionid_to_pid", 1, true, false, sessionid_to_pid, 20 },
  { 2078, "set_config_by_name", 3, false, false, set_config_by_name, 25 },
  { 6118, "set_hashbucket_info", 1, true, false, set_hashbucket_info, 16 },
  { 7998, "set_working_grand_version_num_manually", 1, true, false, set_working_grand_version_num_manually, 2278 },
  { 1599, "setseed", 1, true, false, setseed, 2278 },
  { SETVAL3FUNCOID, "setval3_oid", 3, true, false, setval3_oid, 20 },
  { SETVAL1FUNCOID, "setval_oid", 2, true, false, setval_oid, 20 },
  { 2398, "shell_in", 1, false, false, shell_in, 2282 },
  { 2399, "shell_out", 1, true, false, shell_out, 2275 },
  { 2084, "show_all_settings", 0, true, true, show_all_settings, 2249 },
  { 2077, "show_config_by_name", 1, true, false, show_config_by_name, 25 },
  { 1623, "similar_escape", 2, false, false, similar_escape, 25 },
  { 4442, "single_table_distribution", 2, true, true, single_table_distribution, 2249 },
  { 5586, "smalldatetime_cmp", 2, true, false, smalldatetime_cmp, 23 },
  { 5580, "smalldatetime_eq", 2, true, false, smalldatetime_eq, 16 },
  { 5584, "smalldatetime_ge", 2, true, false, smalldatetime_ge, 16 },
  { 5585, "smalldatetime_gt", 2, true, false, smalldatetime_gt, 16 },
  { 5587, "smalldatetime_hash", 1, true, false, smalldatetime_hash, 23 },
  { SMALLDATETIMEINFUNCOID, "smalldatetime_in", 3, true, false, smalldatetime_in, 9003 },
  { 9012, "smalldatetime_larger", 2, true, false, smalldatetime_larger, 9003 },
  { 5583, "smalldatetime_le", 2, true, false, smalldatetime_le, 16 },
  { 5582, "smalldatetime_lt", 2, true, false, smalldatetime_lt, 16 },
  { 5581, "smalldatetime_ne", 2, true, false, smalldatetime_ne, 16 },
  { SMALLDATETIMEOUTFUNCOID, "smalldatetime_out", 1, true, false, smalldatetime_out, 2275 },
  { 9007, "smalldatetime_recv", 3, true, false, smalldatetime_recv, 9003 },
  { 9008, "smalldatetime_send", 1, true, false, smalldatetime_send, 17 },
  { 9011, "smalldatetime_smaller", 2, true, false, smalldatetime_smaller, 9003 },
  { 762, "smgreq", 2, true, false, smgreq, 16 },
  { 760, "smgrin", 1, true, false, smgrin, 210 },
  { 763, "smgrne", 2, true, false, smgrne, 16 },
  { 761, "smgrout", 1, true, false, smgrout, 2275 },
  { 4024, "spg_kd_choose", 2, true, false, spg_kd_choose, 2278 },
  { 4023, "spg_kd_config", 2, true, false, spg_kd_config, 2278 },
  { 4026, "spg_kd_inner_consistent", 2, true, false, spg_kd_inner_consistent, 2278 },
  { 4025, "spg_kd_picksplit", 2, true, false, spg_kd_picksplit, 2278 },
  { 4019, "spg_quad_choose", 2, true, false, spg_quad_choose, 2278 },
  { 4018, "spg_quad_config", 2, true, false, spg_quad_config, 2278 },
  { 4021, "spg_quad_inner_consistent", 2, true, false, spg_quad_inner_consistent, 2278 },
  { 4022, "spg_quad_leaf_consistent", 2, true, false, spg_quad_leaf_consistent, 16 },
  { 4020, "spg_quad_picksplit", 2, true, false, spg_quad_picksplit, 2278 },
  { 4028, "spg_text_choose", 2, true, false, spg_text_choose, 2278 },
  { 4027, "spg_text_config", 2, true, false, spg_text_config, 2278 },
  { 4030, "spg_text_inner_consistent", 2, true, false, spg_text_inner_consistent, 2278 },
  { 4031, "spg_text_leaf_consistent", 2, true, false, spg_text_leaf_consistent, 16 },
  { 4029, "spg_text_picksplit", 2, true, false, spg_text_picksplit, 2278 },
  { 4004, "spgbeginscan", 3, true, false, spgbeginscan, 2281 },
  { 4009, "spgbuild", 3, true, false, spgbuild, 2281 },
  { 4010, "spgbuildempty", 1, true, false, spgbuildempty, 2278 },
  { 4011, "spgbulkdelete", 4, true, false, spgbulkdelete, 2281 },
  { 4032, "spgcanreturn", 1, true, false, spgcanreturn, 16 },
  { 4013, "spgcostestimate", 7, true, false, spgcostestimate, 2278 },
  { 4006, "spgendscan", 1, true, false, spgendscan, 2278 },
  { 4002, "spggetbitmap", 2, true, false, spggetbitmap, 20 },
  { 4001, "spggettuple", 2, true, false, spggettuple, 16 },
  { 4003, "spginsert", 6, true, false, spginsert, 16 },
  { 4007, "spgmarkpos", 1, true, false, spgmarkpos, 2278 },
  { 3188, "spgmerge", 5, true, false, spgmerge, 2281 },
  { 4014, "spgoptions", 2, true, false, spgoptions, 17 },
  { 4005, "spgrescan", 5, true, false, spgrescan, 2278 },
  { 4008, "spgrestrpos", 1, true, false, spgrestrpos, 2278 },
  { 4012, "spgvacuumcleanup", 2, true, false, spgvacuumcleanup, 2281 },
  { 2088, "split_text", 3, true, false, split_text, 25 },
  { 5732, "statement_detail_decode", 3, true, false, statement_detail_decode, 25 },
  { STATEMENTTIMESTAMPFUNCOID, "statement_timestamp", 0, true, false, statement_timestamp, 1184 },
  { 3536, "string_agg_finalfn", 1, false, false, string_agg_finalfn, 25 },
  { STRINGAGGTRANSFNFUNCOID, "string_agg_transfn", 3, false, false, string_agg_transfn, 2281 },
  { 5717, "submit_job_on_nodes", 3, false, false, submit_job_on_nodes, 23 },
  { SUBSTRBWITHLENFUNCOID, "substrb_with_lenth", 3, true, false, substrb_with_lenth, 25 },
  { SUBSTRBNOLENFUNCOID, "substrb_without_lenth", 2, true, false, substrb_without_lenth, 25 },
  { 1291, "suppress_redundant_updates_trigger", 0, true, false, suppress_redundant_updates_trigger, 2279 },
  { 3998, "syn_update_pg_job", 9, false, false, syn_update_pg_job, 2278 },
  { TESTSKEWNESSRETURNTYPE, "table_data_skewness", 2, true, false, table_data_skewness, 21 },
  { 2923, "table_to_xml", 4, false, false, table_to_xml, 142 },
  { 2929, "table_to_xml_and_xmlschema", 4, false, false, table_to_xml_and_xmlschema, 142 },
  { 2926, "table_to_xmlschema", 4, false, false, table_to_xmlschema, 142 },
  { 3952, "tablespace_oid_name", 1, true, false, tablespace_oid_name, 2275 },
  { 944, "text_char", 1, true, false, text_char, 18 },
  { CONCATFUNCOID, "text_concat", 1, false, false, text_concat, 25 },
  { CONCATWSFUNCOID, "text_concat_ws", 2, false, false, text_concat_ws, 25 },
  { 4164, "text_date", 1, true, false, text_date, 1082 },
  { 4192, "text_float4", 1, true, false, text_float4, 700 },
  { 4193, "text_float8", 1, true, false, text_float8, 701 },
  { ANYTOTEXTFORMATFUNCOID, "text_format", 2, false, false, text_format, 25 },
  { DEFAULTFORMATFUNCOID, "text_format_nv", 1, false, false, text_format_nv, 25 },
  { 743, "text_ge", 2, true, false, text_ge, 16 },
  { 742, "text_gt", 2, true, false, text_gt, 16 },
  { 4188, "text_int1", 1, true, false, text_int1, 5545 },
  { 4189, "text_int2", 1, true, false, text_int2, 21 },
  { 4190, "text_int4", 1, true, false, text_int4, 23 },
  { 4191, "text_int8", 1, true, false, text_int8, 20 },
  { 458, "text_larger", 2, true, false, text_larger, 25 },
  { 741, "text_le", 2, true, false, text_le, 16 },
  { 3060, "text_left", 2, true, false, text_left, 25 },
  { 740, "text_lt", 2, true, false, text_lt, 16 },
  { 3170, "text_multiply_float8", 2, true, false, text_multiply_float8, 701 },
  { 407, "text_name", 1, true, false, text_name, 19 },
  { 1400, "text_name", 1, true, false, text_name, 19 },
  { 4194, "text_numeric", 1, true, false, text_numeric, 1700 },
  { 2163, "text_pattern_ge", 2, true, false, text_pattern_ge, 16 },
  { 2164, "text_pattern_gt", 2, true, false, text_pattern_gt, 16 },
  { 2161, "text_pattern_le", 2, true, false, text_pattern_le, 16 },
  { 2160, "text_pattern_lt", 2, true, false, text_pattern_lt, 16 },
  { 1079, "text_regclass", 1, true, false, text_regclass, 2205 },
  { 3062, "text_reverse", 1, true, false, text_reverse, 25 },
  { 3061, "text_right", 2, true, false, text_right, 25 },
  { 459, "text_smaller", 2, true, false, text_smaller, 25 },
  { SUBSTRINNFUNCOID, "text_substr", 3, true, false, text_substr, 25 },
  { SUBSTRINNNOLENFUNCOID, "text_substr_no_len", 2, true, false, text_substr_no_len, 25 },
  { TEXTSUBSTRINGNOLENFUNCOID, "text_substr_no_len_null", 2, true, false, text_substr_no_len_null, 25 },
  { SUBSTRNOLENFUNCOID, "text_substr_no_len_orclcompat", 2, true, false, text_substr_no_len_orclcompat, 25 },
  { TEXTSUBSTRINGFUNCOID, "text_substr_null", 3, true, false, text_substr_null, 25 },
  { SUBSTRFUNCOID, "text_substr_orclcompat", 3, true, false, text_substr_orclcompat, 25 },
  { 4073, "text_timestamp", 1, true, false, text_timestamp, 1114 },
  { 394, "text_to_array", 2, false, false, text_to_array, 1009 },
  { 376, "text_to_array_null", 3, false, false, text_to_array_null, 1009 },
  { 1258, "textcat", 2, false, false, textcat, 25 },
  { 67, "texteq", 2, true, false, texteq, 16 },
  { 1660, "texticlike", 2, true, false, texticlike, 16 },
  { 1633, "texticlike", 2, true, false, texticlike, 16 },
  { 1661, "texticnlike", 2, true, false, texticnlike, 16 },
  { 1634, "texticnlike", 2, true, false, texticnlike, 16 },
  { 1656, "texticregexeq", 2, true, false, texticregexeq, 16 },
  { 1238, "texticregexeq", 2, true, false, texticregexeq, 16 },
  { 1657, "texticregexne", 2, true, false, texticregexne, 16 },
  { 1239, "texticregexne", 2, true, false, texticregexne, 16 },
  { 46, "textin", 1, true, false, textin, 25 },
  { CHARLENFUNCOID, "textlen", 1, true, false, textlen, 23 },
  { 1369, "textlen", 1, true, false, textlen, 23 },
  { LENGTHFUNCOID, "textlen", 1, true, false, textlen, 23 },
  { TEXTLENOID, "textlen", 1, true, false, textlen, 23 },
  { 1631, "textlike", 2, true, false, textlike, 16 },
  { 1569, "textlike", 2, true, false, textlike, 16 },
  { 850, "textlike", 2, true, false, textlike, 16 },
  { 157, "textne", 2, true, false, textne, 16 },
  { 1632, "textnlike", 2, true, false, textnlike, 16 },
  { 1570, "textnlike", 2, true, false, textnlike, 16 },
  { 851, "textnlike", 2, true, false, textnlike, 16 },
  { TEXTOCTLENFUNCOID, "textoctetlen", 1, true, false, textoctetlen, 23 },
  { 1374, "textoctetlen", 1, true, false, textoctetlen, 23 },
  { 47, "textout", 1, true, false, textout, 2275 },
  { 1404, "textoverlay", 4, true, false, textoverlay, 25 },
  { 1405, "textoverlay_no_len", 3, true, false, textoverlay_no_len, 25 },
  { INSTR2FUNCOID, "textpos", 2, true, false, textpos, 23 },
  { POSITIONFUNCOID, "textpos", 2, true, false, textpos, 23 },
  { STRPOSFUNCOID, "textpos", 2, true, false, textpos, 23 },
  { 2414, "textrecv", 1, true, false, textrecv, 25 },
  { 1658, "textregexeq", 2, true, false, textregexeq, 16 },
  { 1254, "textregexeq", 2, true, false, textregexeq, 16 },
  { 1659, "textregexne", 2, true, false, textregexne, 16 },
  { 1256, "textregexne", 2, true, false, textregexne, 16 },
  { 2285, "textregexreplace", 4, false, false, textregexreplace, 25 },
  { 2284, "textregexreplace_noopt", 3, false, false, textregexreplace_noopt, 25 },
  { TEXTREGEXSUBSTRINGOID, "textregexsubstr", 2, true, false, textregexsubstr, 25 },
  { 2415, "textsend", 1, true, false, textsend, 17 },
  { 4038, "texttoraw", 1, true, false, texttoraw, 86 },
  { 2896, "texttoxml", 1, true, false, texttoxml, 142 },
  { 3740, "thesaurus_init", 1, true, false, thesaurus_init, 2281 },
  { 3741, "thesaurus_lexize", 4, true, false, thesaurus_lexize, 2281 },
  { 1292, "tideq", 2, true, false, tideq, 16 },
  { 2792, "tidge", 2, true, false, tidge, 16 },
  { 2790, "tidgt", 2, true, false, tidgt, 16 },
  { 48, "tidin", 1, true, false, tidin, 27 },
  { 2795, "tidlarger", 2, true, false, tidlarger, 27 },
  { 2793, "tidle", 2, true, false, tidle, 16 },
  { 2791, "tidlt", 2, true, false, tidlt, 16 },
  { 1265, "tidne", 2, true, false, tidne, 16 },
  { 49, "tidout", 1, true, false, tidout, 2275 },
  { 2438, "tidrecv", 1, true, false, tidrecv, 27 },
  { 2439, "tidsend", 1, true, false, tidsend, 17 },
  { 2796, "tidsmaller", 2, true, false, tidsmaller, 27 },
  { 1107, "time_cmp", 2, true, false, time_cmp, 23 },
  { 1145, "time_eq", 2, true, false, time_eq, 16 },
  { 1105, "time_ge", 2, true, false, time_ge, 16 },
  { 1104, "time_gt", 2, true, false, time_gt, 16 },
  { 1688, "time_hash", 1, true, false, time_hash, 23 },
  { TIMEINFUNCOID, "time_in", 3, true, false, time_in, 1083 },
  { 1370, "time_interval", 1, true, false, time_interval, 1186 },
  { 1377, "time_larger", 2, true, false, time_larger, 1083 },
  { 1103, "time_le", 2, true, false, time_le, 16 },
  { 1102, "time_lt", 2, true, false, time_lt, 16 },
  { 1748, "time_mi_interval", 2, true, false, time_mi_interval, 1083 },
  { 1690, "time_mi_time", 2, true, false, time_mi_time, 1186 },
  { 1106, "time_ne", 2, true, false, time_ne, 16 },
  { TIMEOUTFUNCOID, "time_out", 1, true, false, time_out, 2275 },
  { TIMEPARTFUNCOID, "time_part", 2, true, false, time_part, 701 },
  { 1747, "time_pl_interval", 2, true, false, time_pl_interval, 1083 },
  { 2470, "time_recv", 3, true, false, time_recv, 1083 },
  { 1968, "time_scale", 2, true, false, time_scale, 1083 },
  { 2471, "time_send", 1, true, false, time_send, 17 },
  { 1378, "time_smaller", 2, true, false, time_smaller, 1083 },
  { TIME2TIMETZFUNCOID, "time_timetz", 1, true, false, time_timetz, 1266 },
  { 3944, "time_transform", 1, true, false, time_transform, 2281 },
  { 245, "timemi", 2, true, false, timemi, 702 },
  { TIMENOWFUNCOID, "timenow", 0, true, false, timenow, 702 },
  { 274, "timeofday", 0, true, false, timeofday, 25 },
  { 244, "timepl", 2, true, false, timepl, 702 },
  { TIMESTAMP2ABSTIMEFUNCOID, "timestamp_abstime", 1, true, false, timestamp_abstime, 702 },
  { 2058, "timestamp_age", 2, true, false, timestamp_age, 1186 },
  { 2045, "timestamp_cmp", 2, true, false, timestamp_cmp, 23 },
  { 1314, "timestamp_cmp", 2, true, false, timestamp_cmp, 23 },
  { 2370, "timestamp_cmp_date", 2, true, false, timestamp_cmp_date, 23 },
  { TIMESTAMPCMPTIMESTAMPTZFUNCOID, "timestamp_cmp_timestamptz", 2, true, false, timestamp_cmp_timestamptz, 23 },
  { TIMESTAMP2DATEOID, "timestamp_date", 1, true, false, timestamp_date, 1082 },
  { 3227, "timestamp_diff", 3, true, false, timestamp_diff, 20 },
  { 2052, "timestamp_eq", 2, true, false, timestamp_eq, 16 },
  { 1152, "timestamp_eq", 2, true, false, timestamp_eq, 16 },
  { 2366, "timestamp_eq_date", 2, true, false, timestamp_eq_date, 16 },
  { TIMESTAMPEQTIMESTAMPTZFUNCOID, "timestamp_eq_timestamptz", 2, true, false, timestamp_eq_timestamptz, 16 },
  { 1389, "timestamp_finite", 1, true, false, timestamp_finite, 16 },
  { 2048, "timestamp_finite", 1, true, false, timestamp_finite, 16 },
  { 2056, "timestamp_ge", 2, true, false, timestamp_ge, 16 },
  { 1156, "timestamp_ge", 2, true, false, timestamp_ge, 16 },
  { 2368, "timestamp_ge_date", 2, true, false, timestamp_ge_date, 16 },
  { TIMESTAMPGETIMESTAMPTZFUNCOID, "timestamp_ge_timestamptz", 2, true, false, timestamp_ge_timestamptz, 16 },
  { 2057, "timestamp_gt", 2, true, false, timestamp_gt, 16 },
  { 1157, "timestamp_gt", 2, true, false, timestamp_gt, 16 },
  { 2367, "timestamp_gt_date", 2, true, false, timestamp_gt_date, 16 },
  { TIMESTAMPGTTIMESTAMPTZFUNCOID, "timestamp_gt_timestamptz", 2, true, false, timestamp_gt_timestamptz, 16 },
  { TIMESTAMPHASHOID, "timestamp_hash", 1, true, false, timestamp_hash, 23 },
  { TIMESTAMPINFUNCOID, "timestamp_in", 3, true, false, timestamp_in, 1114 },
  { 2070, "timestamp_izone", 2, true, false, timestamp_izone, 1184 },
  { 2036, "timestamp_larger", 2, true, false, timestamp_larger, 1114 },
  { 1196, "timestamp_larger", 2, true, false, timestamp_larger, 1184 },
  { 2055, "timestamp_le", 2, true, false, timestamp_le, 16 },
  { 1155, "timestamp_le", 2, true, false, timestamp_le, 16 },
  { 2365, "timestamp_le_date", 2, true, false, timestamp_le_date, 16 },
  { TIMESTAMPLETIMESTAMPTZFUNCOID, "timestamp_le_timestamptz", 2, true, false, timestamp_le_timestamptz, 16 },
  { 3585, "timestamp_list_agg_noarg2_transfn", 2, false, false, timestamp_list_agg_noarg2_transfn, 2281 },
  { 3583, "timestamp_list_agg_transfn", 3, false, false, timestamp_list_agg_transfn, 2281 },
  { 2054, "timestamp_lt", 2, true, false, timestamp_lt, 16 },
  { 1154, "timestamp_lt", 2, true, false, timestamp_lt, 16 },
  { 2364, "timestamp_lt_date", 2, true, false, timestamp_lt_date, 16 },
  { TIMESTAMPLTTIMESTAMPTZFUNCOID, "timestamp_lt_timestamptz", 2, true, false, timestamp_lt_timestamptz, 16 },
  { 2031, "timestamp_mi", 2, true, false, timestamp_mi, 1186 },
  { 1188, "timestamp_mi", 2, true, false, timestamp_mi, 1186 },
  { 2033, "timestamp_mi_interval", 2, true, false, timestamp_mi_interval, 1114 },
  { 2053, "timestamp_ne", 2, true, false, timestamp_ne, 16 },
  { 1153, "timestamp_ne", 2, true, false, timestamp_ne, 16 },
  { 2369, "timestamp_ne_date", 2, true, false, timestamp_ne_date, 16 },
  { TIMESTAMPNETIMESTAMPTZFUNCOID, "timestamp_ne_timestamptz", 2, true, false, timestamp_ne_timestamptz, 16 },
  { TIMESTAMPOUTFUNCOID, "timestamp_out", 1, true, false, timestamp_out, 2275 },
  { TIMESTAMPPARTFUNCOID, "timestamp_part", 2, true, false, timestamp_part, 701 },
  { 2032, "timestamp_pl_interval", 2, true, false, timestamp_pl_interval, 1114 },
  { 2474, "timestamp_recv", 3, true, false, timestamp_recv, 1114 },
  { 1961, "timestamp_scale", 2, true, false, timestamp_scale, 1114 },
  { 2475, "timestamp_send", 1, true, false, timestamp_send, 17 },
  { 2035, "timestamp_smaller", 2, true, false, timestamp_smaller, 1114 },
  { 1195, "timestamp_smaller", 2, true, false, timestamp_smaller, 1184 },
  { 3137, "timestamp_sortsupport", 1, true, false, timestamp_sortsupport, 2278 },
  { 4178, "timestamp_text", 1, true, false, timestamp_text, 25 },
  { 1316, "timestamp_time", 1, true, false, timestamp_time, 1083 },
  { TIMESTAMP2TIMESTAMPTZFUNCOID, "timestamp_timestamptz", 1, true, false, timestamp_timestamptz, 1184 },
  { TIMESTAMP2CHARFUNCOID, "timestamp_to_char", 2, true, false, timestamp_to_char, 25 },
  { DEFAULTFORMATTIMESTAMP2CHARFUNCOID, "timestamp_to_char_default_format", 1, true, false, timestamp_to_char_default_format, 25 },
  { 3917, "timestamp_transform", 1, true, false, timestamp_transform, 2281 },
  { TIMESTAMPTRUNCFUNCOID, "timestamp_trunc", 2, true, false, timestamp_trunc, 1114 },
  { 4179, "timestamp_varchar", 1, true, false, timestamp_varchar, 1043 },
  { 2069, "timestamp_zone", 2, true, false, timestamp_zone, 1184 },
  { 2905, "timestamptypmodin", 1, true, false, timestamptypmodin, 23 },
  { 2906, "timestamptypmodout", 1, true, false, timestamptypmodout, 2275 },
  { 1180, "timestamptz_abstime", 1, true, false, timestamptz_abstime, 702 },
  { 1199, "timestamptz_age", 2, true, false, timestamptz_age, 1186 },
  { TIMESTAMPTZCMPDATEFUNCOID, "timestamptz_cmp_date", 2, true, false, timestamptz_cmp_date, 23 },
  { TIMESTAMPTZCMPTIMESTAMPFUNCOID, "timestamptz_cmp_timestamp", 2, true, false, timestamptz_cmp_timestamp, 23 },
  { TIMESTAMPTZ2DATEFUNCOID, "timestamptz_date", 1, true, false, timestamptz_date, 1082 },
  { TIMESTAMPTZEQDATEFUNCOID, "timestamptz_eq_date", 2, true, false, timestamptz_eq_date, 16 },
  { TIMESTAMPTZEQTIMESTAMPFUNCOID, "timestamptz_eq_timestamp", 2, true, false, timestamptz_eq_timestamp, 16 },
  { TIMESTAMPTZGEDATEFUNCOID, "timestamptz_ge_date", 2, true, false, timestamptz_ge_date, 16 },
  { TIMESTAMPTZGETIMESTAMPFUNCOID, "timestamptz_ge_timestamp", 2, true, false, timestamptz_ge_timestamp, 16 },
  { TIMESTAMPTZGTDATEFUNCOID, "timestamptz_gt_date", 2, true, false, timestamptz_gt_date, 16 },
  { TIMESTAMPTZGTTIMESTAMPFUNCOID, "timestamptz_gt_timestamp", 2, true, false, timestamptz_gt_timestamp, 16 },
  { TIMESTAMPTZINFUNCOID, "timestamptz_in", 3, true, false, timestamptz_in, 1184 },
  { 1026, "timestamptz_izone", 2, true, false, timestamptz_izone, 1114 },
  { TIMESTAMPTZLEDATEFUNCOID, "timestamptz_le_date", 2, true, false, timestamptz_le_date, 16 },
  { TIMESTAMPTZLETIMESTAMPFUNCOID, "timestamptz_le_timestamp", 2, true, false, timestamptz_le_timestamp, 16 },
  { 3589, "timestamptz_list_agg_noarg2_transfn", 2, false, false, timestamptz_list_agg_noarg2_transfn, 2281 },
  { 3587, "timestamptz_list_agg_transfn", 3, false, false, timestamptz_list_agg_transfn, 2281 },
  { TIMESTAMPTZLTDATEFUNCOID, "timestamptz_lt_date", 2, true, false, timestamptz_lt_date, 16 },
  { TIMESTAMPTZLTTIMESTAMPFUNCOID, "timestamptz_lt_timestamp", 2, true, false, timestamptz_lt_timestamp, 16 },
  { TIMESTAMPTZMIINTERVALFUNCOID, "timestamptz_mi_interval", 2, true, false, timestamptz_mi_interval, 1184 },
  { TIMESTAMPTZNEDATEFUNCOID, "timestamptz_ne_date", 2, true, false, timestamptz_ne_date, 16 },
  { TIMESTAMPTZNETIMESTAMPFUNCOID, "timestamptz_ne_timestamp", 2, true, false, timestamptz_ne_timestamp, 16 },
  { TIMESTAMPTZOUTFUNCOID, "timestamptz_out", 1, true, false, timestamptz_out, 2275 },
  { TIMESTAMPTZPARTFUNCOID, "timestamptz_part", 2, true, false, timestamptz_part, 701 },
  { TIMESTAMPTZPLINTERVALFUNCOID, "timestamptz_pl_interval", 2, true, false, timestamptz_pl_interval, 1184 },
  { 2476, "timestamptz_recv", 3, true, false, timestamptz_recv, 1184 },
  { 1967, "timestamptz_scale", 2, true, false, timestamptz_scale, 1184 },
  { 2477, "timestamptz_send", 1, true, false, timestamptz_send, 17 },
  { TIMESTAMPTZ2TIMEFUNCOID, "timestamptz_time", 1, true, false, timestamptz_time, 1083 },
  { TIMESTAMPTZ2TIMESTAMPFUNCOID, "timestamptz_timestamp", 1, true, false, timestamptz_timestamp, 1114 },
  { TIMESTAMPTZ2TIMETZFUNCOID, "timestamptz_timetz", 1, true, false, timestamptz_timetz, 1266 },
  { TIMESTAMPTZ2CHARFUNCOID, "timestamptz_to_char", 2, true, false, timestamptz_to_char, 25 },
  { DEFAULTFORMATTIMESTAMPTZ2CHARFUNCOID, "timestamptz_to_char_default_format", 1, true, false, timestamptz_to_char_default_format, 25 },
  { TIMESTAMPTZTRUNCFUNCOID, "timestamptz_trunc", 2, true, false, timestamptz_trunc, 1184 },
  { 1159, "timestamptz_zone", 2, true, false, timestamptz_zone, 1114 },
  { 2907, "timestamptztypmodin", 1, true, false, timestamptztypmodin, 23 },
  { 2908, "timestamptztypmodout", 1, true, false, timestamptztypmodout, 2275 },
  { 4177, "timestampzone_text", 1, true, false, timestampzone_text, 25 },
  { 2909, "timetypmodin", 1, true, false, timetypmodin, 23 },
  { 2910, "timetypmodout", 1, true, false, timetypmodout, 2275 },
  { 1358, "timetz_cmp", 2, true, false, timetz_cmp, 23 },
  { 1352, "timetz_eq", 2, true, false, timetz_eq, 16 },
  { 1356, "timetz_ge", 2, true, false, timetz_ge, 16 },
  { 1357, "timetz_gt", 2, true, false, timetz_gt, 16 },
  { 1696, "timetz_hash", 1, true, false, timetz_hash, 23 },
  { TIMETZINFUNCOID, "timetz_in", 3, true, false, timetz_in, 1266 },
  { 2038, "timetz_izone", 2, true, false, timetz_izone, 1266 },
  { 1379, "timetz_larger", 2, true, false, timetz_larger, 1266 },
  { 1355, "timetz_le", 2, true, false, timetz_le, 16 },
  { 1354, "timetz_lt", 2, true, false, timetz_lt, 16 },
  { 1750, "timetz_mi_interval", 2, true, false, timetz_mi_interval, 1266 },
  { 1353, "timetz_ne", 2, true, false, timetz_ne, 16 },
  { 1351, "timetz_out", 1, true, false, timetz_out, 2275 },
  { TIMEZPARTFUNCOID, "timetz_part", 2, true, false, timetz_part, 701 },
  { 1749, "timetz_pl_interval", 2, true, false, timetz_pl_interval, 1266 },
  { 2472, "timetz_recv", 3, true, false, timetz_recv, 1266 },
  { 1969, "timetz_scale", 2, true, false, timetz_scale, 1266 },
  { 2473, "timetz_send", 1, true, false, timetz_send, 17 },
  { 1380, "timetz_smaller", 2, true, false, timetz_smaller, 1266 },
  { 2046, "timetz_time", 1, true, false, timetz_time, 1083 },
  { TIMEZONETZFUNCOID, "timetz_zone", 2, true, false, timetz_zone, 1266 },
  { 2911, "timetztypmodin", 1, true, false, timetztypmodin, 23 },
  { 2912, "timetztypmodout", 1, true, false, timetztypmodout, 2275 },
  { 264, "tintervalct", 2, true, false, tintervalct, 16 },
  { 273, "tintervalend", 1, true, false, tintervalend, 702 },
  { 784, "tintervaleq", 2, true, false, tintervaleq, 16 },
  { 789, "tintervalge", 2, true, false, tintervalge, 16 },
  { 787, "tintervalgt", 2, true, false, tintervalgt, 16 },
  { TINTERVALINFUNCOID, "tintervalin", 1, true, false, tintervalin, 704 },
  { 788, "tintervalle", 2, true, false, tintervalle, 16 },
  { 266, "tintervalleneq", 2, true, false, tintervalleneq, 16 },
  { 271, "tintervallenge", 2, true, false, tintervallenge, 16 },
  { 269, "tintervallengt", 2, true, false, tintervallengt, 16 },
  { 270, "tintervallenle", 2, true, false, tintervallenle, 16 },
  { 268, "tintervallenlt", 2, true, false, tintervallenlt, 16 },
  { 267, "tintervallenne", 2, true, false, tintervallenne, 16 },
  { 786, "tintervallt", 2, true, false, tintervallt, 16 },
  { 785, "tintervalne", 2, true, false, tintervalne, 16 },
  { TINTERVALOUTFUNCOID, "tintervalout", 1, true, false, tintervalout, 2275 },
  { 265, "tintervalov", 2, true, false, tintervalov, 16 },
  { 2466, "tintervalrecv", 1, true, false, tintervalrecv, 704 },
  { 249, "tintervalrel", 1, true, false, tintervalrel, 703 },
  { 263, "tintervalsame", 2, true, false, tintervalsame, 16 },
  { 2467, "tintervalsend", 1, true, false, tintervalsend, 17 },
  { 272, "tintervalstart", 1, true, false, tintervalstart, 702 },
  { 1845, "to_ascii_default", 1, true, false, to_ascii_default, 25 },
  { 1846, "to_ascii_enc", 2, true, false, to_ascii_enc, 25 },
  { 1847, "to_ascii_encname", 2, true, false, to_ascii_encname, 25 },
  { TODATEDEFAULTFUNCOID, "to_date_default_format", 1, true, false, to_date_default_format, 1114 },
  { 2089, "to_hex32", 1, false, false, to_hex32, 25 },
  { 2090, "to_hex64", 1, false, false, to_hex64, 25 },
  { TODATEFUNCOID, "to_timestamp", 2, true, false, to_timestamp, 1114 },
  { TOTIMESTAMPFUNCOID, "to_timestamp", 2, true, false, to_timestamp, 1114 },
  { TOTIMESTAMPDEFAULTFUNCOID, "to_timestamp_default_format", 1, true, false, to_timestamp_default_format, 1114 },
  { 3750, "to_tsquery", 1, true, false, to_tsquery, 3615 },
  { 3746, "to_tsquery_byid", 2, true, false, to_tsquery_byid, 3615 },
  { 3749, "to_tsvector", 1, true, false, to_tsvector, 3614 },
  { 3209, "to_tsvector", 1, true, false, to_tsvector, 3614 },
  { 3745, "to_tsvector_byid", 2, true, false, to_tsvector_byid, 3614 },
  { 3208, "to_tsvector_byid", 2, true, false, to_tsvector_byid, 3614 },
  { 3976, "total_cpu", 0, true, false, total_cpu, 20 },
  { 3979, "total_memory", 0, true, false, total_memory, 20 },
  { 3988, "track_memory_context", 1, true, false, track_memory_context, 16 },
  { 3990, "track_memory_context_detail", 1, true, true, track_memory_context_detail, 2249 },
  { 3468, "track_model_train_opt", 2, false, false, track_model_train_opt, 25 },
  { 878, "translate", 3, true, false, translate, 25 },
  { 2300, "trigger_in", 1, false, false, trigger_in, 2279 },
  { 2301, "trigger_out", 1, true, false, trigger_out, 2275 },
  { 3755, "ts_headline", 2, true, false, ts_headline, 25 },
  { 3744, "ts_headline_byid", 3, true, false, ts_headline_byid, 25 },
  { 3743, "ts_headline_byid_opt", 4, true, false, ts_headline_byid_opt, 25 },
  { 3754, "ts_headline_opt", 3, true, false, ts_headline_opt, 25 },
  { 3723, "ts_lexize", 2, true, false, ts_lexize, 1009 },
  { 3635, "ts_match_qv", 2, true, false, ts_match_qv, 16 },
  { 3761, "ts_match_tq", 2, true, false, ts_match_tq, 16 },
  { 3760, "ts_match_tt", 2, true, false, ts_match_tt, 16 },
  { 3634, "ts_match_vq", 2, true, false, ts_match_vq, 16 },
  { 3715, "ts_parse_byid", 2, true, true, ts_parse_byid, 2249 },
  { 3716, "ts_parse_byname", 2, true, true, ts_parse_byname, 2249 },
  { 3706, "ts_rank_tt", 2, true, false, ts_rank_tt, 700 },
  { 3705, "ts_rank_ttf", 3, true, false, ts_rank_ttf, 700 },
  { 3704, "ts_rank_wtt", 3, true, false, ts_rank_wtt, 700 },
  { 3703, "ts_rank_wttf", 4, true, false, ts_rank_wttf, 700 },
  { 3710, "ts_rankcd_tt", 2, true, false, ts_rankcd_tt, 700 },
  { 3709, "ts_rankcd_ttf", 3, true, false, ts_rankcd_ttf, 700 },
  { 3708, "ts_rankcd_wtt", 3, true, false, ts_rankcd_wtt, 700 },
  { 3707, "ts_rankcd_wttf", 4, true, false, ts_rankcd_wttf, 700 },
  { 3689, "ts_stat1", 1, true, true, ts_stat1, 2249 },
  { 3690, "ts_stat2", 2, true, true, ts_stat2, 2249 },
  { 3713, "ts_token_type_byid", 1, true, true, ts_token_type_byid, 2249 },
  { 3714, "ts_token_type_byname", 1, true, true, ts_token_type_byname, 2249 },
  { 3688, "ts_typanalyze", 1, true, false, ts_typanalyze, 16 },
  { 3687, "tsmatchjoinsel", 5, true, false, tsmatchjoinsel, 701 },
  { 3686, "tsmatchsel", 4, true, false, tsmatchsel, 701 },
  { 3692, "tsq_mcontained", 2, true, false, tsq_mcontained, 16 },
  { 3691, "tsq_mcontains", 2, true, false, tsq_mcontains, 16 },
  { 3669, "tsquery_and", 2, true, false, tsquery_and, 3615 },
  { 3668, "tsquery_cmp", 2, true, false, tsquery_cmp, 23 },
  { 3664, "tsquery_eq", 2, true, false, tsquery_eq, 16 },
  { 3666, "tsquery_ge", 2, true, false, tsquery_ge, 16 },
  { 3667, "tsquery_gt", 2, true, false, tsquery_gt, 16 },
  { 3663, "tsquery_le", 2, true, false, tsquery_le, 16 },
  { 3662, "tsquery_lt", 2, true, false, tsquery_lt, 16 },
  { 3665, "tsquery_ne", 2, true, false, tsquery_ne, 16 },
  { 3671, "tsquery_not", 1, true, false, tsquery_not, 3615 },
  { 3672, "tsquery_numnode", 1, true, false, tsquery_numnode, 23 },
  { 3670, "tsquery_or", 2, true, false, tsquery_or, 3615 },
  { 3684, "tsquery_rewrite", 3, true, false, tsquery_rewrite, 3615 },
  { 3685, "tsquery_rewrite_query", 2, true, false, tsquery_rewrite_query, 3615 },
  { 3612, "tsqueryin", 1, true, false, tsqueryin, 3615 },
  { 3613, "tsqueryout", 1, true, false, tsqueryout, 2275 },
  { 3641, "tsqueryrecv", 1, true, false, tsqueryrecv, 3615 },
  { 3640, "tsquerysend", 1, true, false, tsquerysend, 17 },
  { 3673, "tsquerytree", 1, true, false, tsquerytree, 25 },
  { 3929, "tsrange_subdiff", 2, true, false, tsrange_subdiff, 701 },
  { 3930, "tstzrange_subdiff", 2, true, false, tstzrange_subdiff, 701 },
  { 3622, "tsvector_cmp", 2, true, false, tsvector_cmp, 23 },
  { 3625, "tsvector_concat", 2, true, false, tsvector_concat, 3614 },
  { 3618, "tsvector_eq", 2, true, false, tsvector_eq, 16 },
  { 3620, "tsvector_ge", 2, true, false, tsvector_ge, 16 },
  { 3621, "tsvector_gt", 2, true, false, tsvector_gt, 16 },
  { 3617, "tsvector_le", 2, true, false, tsvector_le, 16 },
  { 3711, "tsvector_length", 1, true, false, tsvector_length, 23 },
  { 3616, "tsvector_lt", 2, true, false, tsvector_lt, 16 },
  { 3619, "tsvector_ne", 2, true, false, tsvector_ne, 16 },
  { 3624, "tsvector_setweight", 2, true, false, tsvector_setweight, 3614 },
  { 3623, "tsvector_strip", 1, true, false, tsvector_strip, 3614 },
  { 3753, "tsvector_update_trigger_bycolumn", 0, false, false, tsvector_update_trigger_bycolumn, 2279 },
  { 3752, "tsvector_update_trigger_byid", 0, false, false, tsvector_update_trigger_byid, 2279 },
  { 3610, "tsvectorin", 1, true, false, tsvectorin, 3614 },
  { 3611, "tsvectorout", 1, true, false, tsvectorout, 2275 },
  { 3639, "tsvectorrecv", 1, true, false, tsvectorrecv, 3614 },
  { 3638, "tsvectorsend", 1, true, false, tsvectorsend, 17 },
  { 2943, "txid_current", 0, true, false, txid_current, 20 },
  { 2944, "txid_current_snapshot", 0, true, false, txid_current_snapshot, 2970 },
  { 2939, "txid_snapshot_in", 1, true, false, txid_snapshot_in, 2970 },
  { 2940, "txid_snapshot_out", 1, true, false, txid_snapshot_out, 2275 },
  { 2941, "txid_snapshot_recv", 1, true, false, txid_snapshot_recv, 2970 },
  { 2942, "txid_snapshot_send", 1, true, false, txid_snapshot_send, 17 },
  { 2947, "txid_snapshot_xip", 1, true, true, txid_snapshot_xip, 20 },
  { 2946, "txid_snapshot_xmax", 1, true, false, txid_snapshot_xmax, 20 },
  { 2945, "txid_snapshot_xmin", 1, true, false, txid_snapshot_xmin, 20 },
  { 2948, "txid_visible_in_snapshot", 2, true, false, txid_visible_in_snapshot, 16 },
  { 1250, "unique_key_recheck", 0, true, false, unique_key_recheck, 2279 },
  { 109, "unknownin", 1, true, false, unknownin, 705 },
  { 110, "unknownout", 1, true, false, unknownout, 2275 },
  { 2416, "unknownrecv", 1, true, false, unknownrecv, 705 },
  { 2417, "unknownsend", 1, true, false, unknownsend, 17 },
  { 871, "upper", 1, true, false, upper, 25 },
  { 2960, "uuid_cmp", 2, true, false, uuid_cmp, 23 },
  { 2956, "uuid_eq", 2, true, false, uuid_eq, 16 },
  { 2957, "uuid_ge", 2, true, false, uuid_ge, 16 },
  { 2958, "uuid_gt", 2, true, false, uuid_gt, 16 },
  { 2963, "uuid_hash", 1, true, false, uuid_hash, 23 },
  { 2952, "uuid_in", 1, true, false, uuid_in, 2950 },
  { 2955, "uuid_le", 2, true, false, uuid_le, 16 },
  { 2954, "uuid_lt", 2, true, false, uuid_lt, 16 },
  { 2959, "uuid_ne", 2, true, false, uuid_ne, 16 },
  { 2953, "uuid_out", 1, true, false, uuid_out, 2275 },
  { 2961, "uuid_recv", 1, true, false, uuid_recv, 2950 },
  { 2962, "uuid_send", 1, true, false, uuid_send, 17 },
  { 1687, "varbit", 3, true, false, varbit, 1562 },
  { 1579, "varbit_in", 3, true, false, varbit_in, 1562 },
  { 1580, "varbit_out", 1, true, false, varbit_out, 2275 },
  { 2458, "varbit_recv", 3, true, false, varbit_recv, 1562 },
  { 2459, "varbit_send", 1, true, false, varbit_send, 17 },
  { 3158, "varbit_transform", 1, true, false, varbit_transform, 2281 },
  { 2902, "varbittypmodin", 1, true, false, varbittypmodin, 23 },
  { 2921, "varbittypmodout", 1, true, false, varbittypmodout, 2275 },
  { 669, "varchar", 3, true, false, varchar, 1043 },
  { 4162, "varchar_date", 1, true, false, varchar_date, 1082 },
  { 4198, "varchar_float4", 1, true, false, varchar_float4, 700 },
  { 4199, "varchar_float8", 1, true, false, varchar_float8, 701 },
  { 4174, "varchar_int4", 1, true, false, varchar_int4, 23 },
  { 4176, "varchar_int8", 1, true, false, varchar_int8, 20 },
  { 4173, "varchar_numeric", 1, true, false, varchar_numeric, 1700 },
  { 4186, "varchar_timestamp", 1, true, false, varchar_timestamp, 1114 },
  { 3097, "varchar_transform", 1, true, false, varchar_transform, 2281 },
  { 1046, "varcharin", 3, true, false, varcharin, 1043 },
  { 1047, "varcharout", 1, true, false, varcharout, 2275 },
  { 2432, "varcharrecv", 3, true, false, varcharrecv, 1043 },
  { 2433, "varcharsend", 1, true, false, varcharsend, 17 },
  { 2915, "varchartypmodin", 1, true, false, varchartypmodin, 23 },
  { 2916, "varchartypmodout", 1, true, false, varchartypmodout, 2275 },
  { 2298, "void_in", 1, true, false, void_in, 2278 },
  { 2299, "void_out", 1, true, false, void_out, 2275 },
  { 3120, "void_recv", 1, true, false, void_recv, 2278 },
  { 3121, "void_send", 1, true, false, void_send, 17 },
  { 5713, "wdr_xdb_query", 2, true, true, wdr_xdb_query, 2249 },
  { 320, "width_bucket_float8", 4, true, false, width_bucket_float8, 23 },
  { 2170, "width_bucket_numeric", 4, true, false, width_bucket_numeric, 23 },
  { 3104, "window_cume_dist", 0, false, false, window_cume_dist, 701 },
  { 4805, "window_delta", 1, true, false, window_delta, 1700 },
  { DENSERANKFUNCOID, "window_dense_rank", 0, false, false, window_dense_rank, 20 },
  { 3112, "window_first_value", 1, true, false, window_first_value, 2283 },
  { 3106, "window_lag", 1, true, false, window_lag, 2283 },
  { 3107, "window_lag_with_offset", 2, true, false, window_lag_with_offset, 2283 },
  { 3108, "window_lag_with_offset_and_default", 3, true, false, window_lag_with_offset_and_default, 2283 },
  { 3113, "window_last_value", 1, true, false, window_last_value, 2283 },
  { 3109, "window_lead", 1, true, false, window_lead, 2283 },
  { 3110, "window_lead_with_offset", 2, true, false, window_lead_with_offset, 2283 },
  { 3111, "window_lead_with_offset_and_default", 3, true, false, window_lead_with_offset_and_default, 2283 },
  { 3114, "window_nth_value", 2, true, false, window_nth_value, 2283 },
  { 3105, "window_ntile", 1, true, false, window_ntile, 23 },
  { 3103, "window_percent_rank", 0, false, false, window_percent_rank, 701 },
  { RANKFUNCOID, "window_rank", 0, false, false, window_rank, 20 },
  { ROWNUMBERFUNCOID, "window_row_number", 0, false, false, window_row_number, 20 },
  { 5731, "working_version_num", 0, true, false, working_version_num, 23 },
  { 1181, "xid_age", 1, true, false, xid_age, 23 },
  { 68, "xideq", 2, true, false, xideq, 16 },
  { 1319, "xideq", 2, true, false, xideq, 16 },
  { 71, "xideq4", 2, true, false, xideq4, 16 },
  { 1321, "xideq4", 2, true, false, xideq4, 16 },
  { 50, "xidin", 1, true, false, xidin, 28 },
  { 58, "xidin4", 1, true, false, xidin4, 31 },
  { 1320, "xidlt", 2, true, false, xidlt, 16 },
  { 1322, "xidlt4", 2, true, false, xidlt4, 16 },
  { 51, "xidout", 1, true, false, xidout, 2275 },
  { 59, "xidout4", 1, true, false, xidout4, 2275 },
  { 2440, "xidrecv", 1, true, false, xidrecv, 28 },
  { 2779, "xidrecv4", 1, true, false, xidrecv4, 31 },
  { 2441, "xidsend", 1, true, false, xidsend, 17 },
  { 2780, "xidsend4", 1, true, false, xidsend4, 17 },
  { 2893, "xml_in", 1, true, false, xml_in, 142 },
  { 3051, "xml_is_well_formed", 1, true, false, xml_is_well_formed, 16 },
  { 3053, "xml_is_well_formed_content", 1, true, false, xml_is_well_formed_content, 16 },
  { 3052, "xml_is_well_formed_document", 1, true, false, xml_is_well_formed_document, 16 },
  { 2894, "xml_out", 1, true, false, xml_out, 2275 },
  { 2898, "xml_recv", 1, true, false, xml_recv, 142 },
  { 2899, "xml_send", 1, true, false, xml_send, 17 },
  { 2895, "xmlcomment", 1, true, false, xmlcomment, 142 },
  { 2900, "xmlconcat2", 2, false, false, xmlconcat2, 142 },
  { 2614, "xmlexists", 2, true, false, xmlexists, 16 },
  { 2922, "xmltotext", 1, true, false, xmltotext, 25 },
  { 2897, "xmlvalidate", 2, true, false, xmlvalidate, 16 },
  { 2931, "xpath", 3, true, false, xpath, 143 },
  { 3049, "xpath_exists", 3, true, false, xpath_exists, 16 },
  { 3794, "zhprs_end", 1, true, false, zhprs_end, 2278 },
  { 3793, "zhprs_getlexeme", 3, true, false, zhprs_getlexeme, 2281 },
  { 3795, "zhprs_lextype", 1, true, false, zhprs_lextype, 2281 },
  { 3792, "zhprs_start", 3, true, false, zhprs_start, 2281 },
  /* dummy entry is easier than getting rid of comma after last real one */
  /* (not that there has ever been anything wrong with *having* a
     comma after the last field in an array initializer) */
  { 0, NULL, 0, false, false, NULL, InvalidOid}
};

/* Note fmgr_nbuiltins excludes the dummy entry */
const int fmgr_nbuiltins = (sizeof(fmgr_builtins) / sizeof(FmgrBuiltin)) - 1;
